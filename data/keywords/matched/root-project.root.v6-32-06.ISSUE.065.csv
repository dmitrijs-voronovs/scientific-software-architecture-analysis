id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/10676:29878,energy efficiency,optim,optimized,29878,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29897,energy efficiency,optim,optimized,29897,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29924,energy efficiency,optim,optimized,29924,"zed out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30188,energy efficiency,optim,optimized,30188,"conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30214,energy efficiency,optim,optimized,30214,"s/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30236,energy efficiency,optim,optimized,30236,"00055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30423,energy efficiency,optim,optimized,30423,"0.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30447,energy efficiency,optim,optimized,30447,"ract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30472,energy efficiency,optim,optimized,30472,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30622,energy efficiency,optim,optimized,30622,"abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30824,energy efficiency,optim,optimized,30824,"l.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30996,energy efficiency,optim,optimized,30996,"66 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31077,energy efficiency,optim,optimized,31077,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31191,energy efficiency,optim,optimized,31191,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31210,energy efficiency,optim,optimized,31210,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31237,energy efficiency,optim,optimized,31237,"zed out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31501,energy efficiency,optim,optimized,31501,"conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31527,energy efficiency,optim,optimized,31527,"s/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31549,energy efficiency,optim,optimized,31549,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31736,energy efficiency,optim,optimized,31736,"0.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31760,energy efficiency,optim,optimized,31760,"ract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31785,energy efficiency,optim,optimized,31785,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31935,energy efficiency,optim,optimized,31935,"abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32137,energy efficiency,optim,optimized,32137,"l.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32309,energy efficiency,optim,optimized,32309,"73 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32390,energy efficiency,optim,optimized,32390,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32504,energy efficiency,optim,optimized,32504,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32523,energy efficiency,optim,optimized,32523,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32550,energy efficiency,optim,optimized,32550,"zed out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32814,energy efficiency,optim,optimized,32814,"conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b06",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32840,energy efficiency,optim,optimized,32840,"s/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32862,energy efficiency,optim,optimized,32862,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33049,energy efficiency,optim,optimized,33049,"0.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33073,energy efficiency,optim,optimized,33073,"ract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33098,energy efficiency,optim,optimized,33098,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33248,energy efficiency,optim,optimized,33248,"abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33451,energy efficiency,optim,optimized,33451,".c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33499,energy efficiency,optim,optimized,33499,"optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33657,energy efficiency,optim,optimized,33657,"alFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33957,energy efficiency,optim,optimized,33957,"n-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33981,energy efficiency,optim,optimized,33981,"5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34236,energy efficiency,optim,optimized,34236,"argsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34260,energy efficiency,optim,optimized,34260,"rgs=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34374,energy efficiency,optim,optimized,34374,"cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34393,energy efficiency,optim,optimized,34393,"99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34420,energy efficiency,optim,optimized,34420,"ate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34718,energy efficiency,optim,optimized,34718,".c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34742,energy efficiency,optim,optimized,34742,"808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34764,energy efficiency,optim,optimized,34764,"_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34790,energy efficiency,optim,optimized,34790,"5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34815,energy efficiency,optim,optimized,34815,"159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, fla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34985,energy efficiency,optim,optimized,34985," out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35299,energy efficiency,optim,optimized,35299,"on-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35325,energy efficiency,optim,optimized,35325,"992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35395,energy efficiency,optim,optimized,35395,"ed out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35418,energy efficiency,optim,optimized,35418,"imized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Module",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36200,energy efficiency,optim,optimized,36200,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36668,energy efficiency,optim,optimized,36668,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36690,energy efficiency,optim,optimized,36690,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36874,energy efficiency,optim,optimized,36874,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36896,energy efficiency,optim,optimized,36896,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36923,energy efficiency,optim,optimized,36923,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:79,integrability,event,event,79,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:658,integrability,sub,submit,658,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7511,integrability,abstract,abstract,7511,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7689,integrability,abstract,abstract,7689," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8817,integrability,abstract,abstract,8817,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8995,integrability,abstract,abstract,8995," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10123,integrability,abstract,abstract,10123,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10301,integrability,abstract,abstract,10301," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11429,integrability,abstract,abstract,11429,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11607,integrability,abstract,abstract,11607," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12735,integrability,abstract,abstract,12735,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12913,integrability,abstract,abstract,12913," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14041,integrability,abstract,abstract,14041,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14219,integrability,abstract,abstract,14219," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15347,integrability,abstract,abstract,15347,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15525,integrability,abstract,abstract,15525," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16653,integrability,abstract,abstract,16653,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16831,integrability,abstract,abstract,16831," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19487,integrability,abstract,abstract,19487,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19666,integrability,abstract,abstract,19666,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20800,integrability,abstract,abstract,20800,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20979,integrability,abstract,abstract,20979,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22113,integrability,abstract,abstract,22113,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22292,integrability,abstract,abstract,22292,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23426,integrability,abstract,abstract,23426,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23605,integrability,abstract,abstract,23605,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24739,integrability,abstract,abstract,24739,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28135,integrability,abstract,abstract,28135,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28314,integrability,abstract,abstract,28314,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29448,integrability,abstract,abstract,29448,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29627,integrability,abstract,abstract,29627,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30761,integrability,abstract,abstract,30761,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30940,integrability,abstract,abstract,30940,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32074,integrability,abstract,abstract,32074,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32253,integrability,abstract,abstract,32253,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33387,integrability,abstract,abstract,33387,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3967,interoperability,skeleton,skeleton,3967," TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4266,interoperability,skeleton,skeleton,4266,"ion_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4829,interoperability,skeleton,skeleton,4829,"n (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5116,interoperability,skeleton,skeleton,5116," (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:266,modifiability,modul,module,266,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4402,modifiability,pac,packages,4402,"0007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImpor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5588,modifiability,pac,packages,5588,"(a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5872,modifiability,modul,module,5872,"__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6024,modifiability,modul,module,6024,"perate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7511,modifiability,abstract,abstract,7511,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7689,modifiability,abstract,abstract,7689," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8817,modifiability,abstract,abstract,8817,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8995,modifiability,abstract,abstract,8995," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10123,modifiability,abstract,abstract,10123,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10301,modifiability,abstract,abstract,10301," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11429,modifiability,abstract,abstract,11429,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11607,modifiability,abstract,abstract,11607," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12735,modifiability,abstract,abstract,12735,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12913,modifiability,abstract,abstract,12913," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14041,modifiability,abstract,abstract,14041,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14219,modifiability,abstract,abstract,14219," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15347,modifiability,abstract,abstract,15347,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15525,modifiability,abstract,abstract,15525," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16653,modifiability,abstract,abstract,16653,"te=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16831,modifiability,abstract,abstract,16831," at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17810,modifiability,modul,module,17810,"4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17988,modifiability,modul,module,17988,"local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19487,modifiability,abstract,abstract,19487,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19666,modifiability,abstract,abstract,19666,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20800,modifiability,abstract,abstract,20800,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20979,modifiability,abstract,abstract,20979,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22113,modifiability,abstract,abstract,22113,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22292,modifiability,abstract,abstract,22292,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23426,modifiability,abstract,abstract,23426,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23605,modifiability,abstract,abstract,23605,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24739,modifiability,abstract,abstract,24739,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26458,modifiability,modul,module,26458,"142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26636,modifiability,modul,module,26636,"al/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28135,modifiability,abstract,abstract,28135,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28314,modifiability,abstract,abstract,28314,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29448,modifiability,abstract,abstract,29448,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29627,modifiability,abstract,abstract,29627,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30761,modifiability,abstract,abstract,30761,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30940,modifiability,abstract,abstract,30940,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32074,modifiability,abstract,abstract,32074,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32253,modifiability,abstract,abstract,32253,"usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33387,modifiability,abstract,abstract,33387,"ptimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36417,modifiability,Modul,Modules,36417,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36524,modifiability,Modul,Modules,36524,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36601,modifiability,Modul,Modules,36601,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36744,modifiability,Modul,Modules,36744,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:283,performance,error,error,283,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:431,performance,error,error,431,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3439,performance,optimiz,optimized,3439,"Rule::SetFromRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #16 0x00007ffa4ff0ba65 in TClass::AddRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24. #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24. #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-214748364",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3645,performance,optimiz,optimized,3645,"0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24. #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24. #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3961,performance,error,error-skeleton,3961," in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4260,performance,error,error-skeleton,4260,"uction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4462,performance,optimiz,optimized,4462,"ntry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortnam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4823,performance,error,error-skeleton,4823,"tion (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5110,performance,error,error-skeleton,5110,"ion (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5318,performance,optimiz,optimized,5318,"0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5340,performance,optimiz,optimized,5340,"rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5880,performance,optimiz,optimized,5880,"_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5902,performance,optimiz,optimized,5902,"e. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:50",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6032,performance,optimiz,optimized,6032,"try=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6054,performance,optimiz,optimized,6054,"open_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6077,performance,optimiz,optimized,6077,"entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6268,performance,optimiz,optimized,6268,"0. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6293,performance,optimiz,optimized,6293," in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6519,performance,optimiz,optimized,6519,"""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6632,performance,optimiz,optimized,6632,"src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6651,performance,optimiz,optimized,6651,"10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6678,performance,optimiz,optimized,6678,":100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6940,performance,optimiz,optimized,6940,"r/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6966,performance,optimiz,optimized,6966,".10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6988,performance,optimiz,optimized,6988,"2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7174,performance,optimiz,optimized,7174,"e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7198,performance,optimiz,optimized,7198,"call_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7223,performance,optimiz,optimized,7223,"a51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7372,performance,optimiz,optimized,7372,"0 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7573,performance,optimiz,optimized,7573,"n/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7744,performance,optimiz,optimized,7744,"77. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7825,performance,optimiz,optimized,7825,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7938,performance,optimiz,optimized,7938,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7957,performance,optimiz,optimized,7957,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7984,performance,optimiz,optimized,7984,"ptimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8246,performance,optimiz,optimized,8246,"l/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8272,performance,optimiz,optimized,8272,"Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8294,performance,optimiz,optimized,8294,"5 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8480,performance,optimiz,optimized,8480,"on-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8504,performance,optimiz,optimized,8504,"n/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8529,performance,optimiz,optimized,8529,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8678,performance,optimiz,optimized,8678,"ython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8879,performance,optimiz,optimized,8879,"n/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9050,performance,optimiz,optimized,9050,"81. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9131,performance,optimiz,optimized,9131,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9244,performance,optimiz,optimized,9244,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9263,performance,optimiz,optimized,9263,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9290,performance,optimiz,optimized,9290,"ptimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9552,performance,optimiz,optimized,9552,"l/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9578,performance,optimiz,optimized,9578,"Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9600,performance,optimiz,optimized,9600,"2 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9786,performance,optimiz,optimized,9786,"on-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9810,performance,optimiz,optimized,9810,"n/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9835,performance,optimiz,optimized,9835,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9984,performance,optimiz,optimized,9984,"ython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10185,performance,optimiz,optimized,10185,"n/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10356,performance,optimiz,optimized,10356,"98. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10437,performance,optimiz,optimized,10437,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10550,performance,optimiz,optimized,10550,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10569,performance,optimiz,optimized,10569,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10596,performance,optimiz,optimized,10596,"ptimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10858,performance,optimiz,optimized,10858,"l/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10884,performance,optimiz,optimized,10884,"Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10906,performance,optimiz,optimized,10906,"9 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11092,performance,optimiz,optimized,11092,"on-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11116,performance,optimiz,optimized,11116,"n/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11141,performance,optimiz,optimized,11141,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11290,performance,optimiz,optimized,11290,"ython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11491,performance,optimiz,optimized,11491,"n/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11662,performance,optimiz,optimized,11662,"13. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11743,performance,optimiz,optimized,11743,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11856,performance,optimiz,optimized,11856,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11875,performance,optimiz,optimized,11875,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11902,performance,optimiz,optimized,11902,"ptimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12164,performance,optimiz,optimized,12164,"l/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12190,performance,optimiz,optimized,12190,"Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12212,performance,optimiz,optimized,12212,"6 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12398,performance,optimiz,optimized,12398,"on-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12422,performance,optimiz,optimized,12422,"n/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12447,performance,optimiz,optimized,12447,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12596,performance,optimiz,optimized,12596,"ython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12797,performance,optimiz,optimized,12797,"n/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12968,performance,optimiz,optimized,12968,"13. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13049,performance,optimiz,optimized,13049,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13162,performance,optimiz,optimized,13162,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13181,performance,optimiz,optimized,13181,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13208,performance,optimiz,optimized,13208,"ptimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13470,performance,optimiz,optimized,13470,"l/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13496,performance,optimiz,optimized,13496,"Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13518,performance,optimiz,optimized,13518,"3 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13704,performance,optimiz,optimized,13704,"on-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13728,performance,optimiz,optimized,13728,"n/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13753,performance,optimiz,optimized,13753,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13902,performance,optimiz,optimized,13902,"ython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14103,performance,optimiz,optimized,14103,"n/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14274,performance,optimiz,optimized,14274,"13. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14355,performance,optimiz,optimized,14355,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14468,performance,optimiz,optimized,14468,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14487,performance,optimiz,optimized,14487,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14514,performance,optimiz,optimized,14514,"ptimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14776,performance,optimiz,optimized,14776,"l/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14802,performance,optimiz,optimized,14802,"Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14824,performance,optimiz,optimized,14824,"0 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15010,performance,optimiz,optimized,15010,"on-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15034,performance,optimiz,optimized,15034,"n/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15059,performance,optimiz,optimized,15059,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15208,performance,optimiz,optimized,15208,"ython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15409,performance,optimiz,optimized,15409,"n/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15580,performance,optimiz,optimized,15580,"13. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15661,performance,optimiz,optimized,15661,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15774,performance,optimiz,optimized,15774,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15793,performance,optimiz,optimized,15793,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15820,performance,optimiz,optimized,15820,"ptimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16082,performance,optimiz,optimized,16082,"l/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16108,performance,optimiz,optimized,16108,"Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16130,performance,optimiz,optimized,16130,"7 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16316,performance,optimiz,optimized,16316,"on-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16340,performance,optimiz,optimized,16340,"n/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16365,performance,optimiz,optimized,16365,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16514,performance,optimiz,optimized,16514,"ython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16715,performance,optimiz,optimized,16715,"n/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16886,performance,optimiz,optimized,16886,"81. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16967,performance,optimiz,optimized,16967,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17080,performance,optimiz,optimized,17080,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17099,performance,optimiz,optimized,17099,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17126,performance,optimiz,optimized,17126,"ptimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17422,performance,optimiz,optimized,17422,"call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17446,performance,optimiz,optimized,17446,"b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17468,performance,optimiz,optimized,17468,"t_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17494,performance,optimiz,optimized,17494,"s=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17519,performance,optimiz,optimized,17519,"out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17689,performance,optimiz,optimized,17689,"kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17818,performance,optimiz,optimized,17818,"cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17996,performance,optimiz,optimized,17996,"conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18018,performance,optimiz,optimized,18018,"thon/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18041,performance,optimiz,optimized,18041,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18238,performance,optimiz,optimized,18238,"e (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18263,performance,optimiz,optimized,18263,"1075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18490,performance,optimiz,optimized,18490,"ptimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18604,performance,optimiz,optimized,18604,"68124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f951",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18623,performance,optimiz,optimized,18623,"EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18650,performance,optimiz,optimized,18650,", globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18914,performance,optimiz,optimized,18914,"rc/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18940,performance,optimiz,optimized,18940,"hon/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18962,performance,optimiz,optimized,18962,". #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19149,performance,optimiz,optimized,19149,"in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19173,performance,optimiz,optimized,19173,"FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19198,performance,optimiz,optimized,19198,"ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19348,performance,optimiz,optimized,19348,"00055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19550,performance,optimiz,optimized,19550,"l.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19722,performance,optimiz,optimized,19722,"06 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19803,performance,optimiz,optimized,19803,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19917,performance,optimiz,optimized,19917,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d63",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19936,performance,optimiz,optimized,19936,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19963,performance,optimiz,optimized,19963,"zed out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20227,performance,optimiz,optimized,20227,"conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20253,performance,optimiz,optimized,20253,"s/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20275,performance,optimiz,optimized,20275,"00055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20462,performance,optimiz,optimized,20462,"0.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20486,performance,optimiz,optimized,20486,"ract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20511,performance,optimiz,optimized,20511,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20661,performance,optimiz,optimized,20661,"abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20863,performance,optimiz,optimized,20863,"l.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21035,performance,optimiz,optimized,21035,"13 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21116,performance,optimiz,optimized,21116,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21230,performance,optimiz,optimized,21230,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21249,performance,optimiz,optimized,21249,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21276,performance,optimiz,optimized,21276,"zed out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21540,performance,optimiz,optimized,21540,"conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21566,performance,optimiz,optimized,21566,"s/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21588,performance,optimiz,optimized,21588,"00055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21775,performance,optimiz,optimized,21775,"0.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21799,performance,optimiz,optimized,21799,"ract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21824,performance,optimiz,optimized,21824,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21974,performance,optimiz,optimized,21974,"abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22176,performance,optimiz,optimized,22176,"l.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22348,performance,optimiz,optimized,22348,"20 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22429,performance,optimiz,optimized,22429,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22543,performance,optimiz,optimized,22543,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22562,performance,optimiz,optimized,22562,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22589,performance,optimiz,optimized,22589,"zed out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22853,performance,optimiz,optimized,22853,"conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22879,performance,optimiz,optimized,22879,"s/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22901,performance,optimiz,optimized,22901,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23088,performance,optimiz,optimized,23088,"0.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23112,performance,optimiz,optimized,23112,"ract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23137,performance,optimiz,optimized,23137,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23287,performance,optimiz,optimized,23287,"abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23489,performance,optimiz,optimized,23489,"l.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23661,performance,optimiz,optimized,23661,"27 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23742,performance,optimiz,optimized,23742,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23856,performance,optimiz,optimized,23856,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23875,performance,optimiz,optimized,23875,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23902,performance,optimiz,optimized,23902,"zed out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24166,performance,optimiz,optimized,24166,"conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b06",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24192,performance,optimiz,optimized,24192,"s/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24214,performance,optimiz,optimized,24214,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24401,performance,optimiz,optimized,24401,"0.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24425,performance,optimiz,optimized,24425,"ract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24450,performance,optimiz,optimized,24450,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24600,performance,optimiz,optimized,24600,"abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24803,performance,optimiz,optimized,24803,".c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24851,performance,optimiz,optimized,24851,"optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25009,performance,optimiz,optimized,25009,"alFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25309,performance,optimiz,optimized,25309,"n-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25333,performance,optimiz,optimized,25333,"5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25588,performance,optimiz,optimized,25588,"argsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25612,performance,optimiz,optimized,25612,"rgs=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25726,performance,optimiz,optimized,25726,"cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25745,performance,optimiz,optimized,25745,"99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25772,performance,optimiz,optimized,25772,"ate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26070,performance,optimiz,optimized,26070,".c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa512",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26094,performance,optimiz,optimized,26094,"808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26116,performance,optimiz,optimized,26116,"_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26142,performance,optimiz,optimized,26142,"510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26167,performance,optimiz,optimized,26167,"159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26337,performance,optimiz,optimized,26337," out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26466,performance,optimiz,optimized,26466,"55b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26644,performance,optimiz,optimized,26644,"da/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26666,performance,optimiz,optimized,26666,"n/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26689,performance,optimiz,optimized,26689,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26886,performance,optimiz,optimized,26886," (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26911,performance,optimiz,optimized,26911,"2c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27138,performance,optimiz,optimized,27138,"ptimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27252,performance,optimiz,optimized,27252,"68124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f951",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27271,performance,optimiz,optimized,27271,"EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27298,performance,optimiz,optimized,27298,", globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27562,performance,optimiz,optimized,27562,"rc/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27588,performance,optimiz,optimized,27588,"hon/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27610,performance,optimiz,optimized,27610,". #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27797,performance,optimiz,optimized,27797,"in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27821,performance,optimiz,optimized,27821,"FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27846,performance,optimiz,optimized,27846,"ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27996,performance,optimiz,optimized,27996,"00055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28198,performance,optimiz,optimized,28198,"l.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28370,performance,optimiz,optimized,28370,"52 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28451,performance,optimiz,optimized,28451,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28565,performance,optimiz,optimized,28565,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d63",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28584,performance,optimiz,optimized,28584,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28611,performance,optimiz,optimized,28611,"zed out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28875,performance,optimiz,optimized,28875,"conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28901,performance,optimiz,optimized,28901,"s/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28923,performance,optimiz,optimized,28923,"00055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29110,performance,optimiz,optimized,29110,"0.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29134,performance,optimiz,optimized,29134,"ract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29159,performance,optimiz,optimized,29159,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29309,performance,optimiz,optimized,29309,"abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29511,performance,optimiz,optimized,29511,"l.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29683,performance,optimiz,optimized,29683,"59 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29764,performance,optimiz,optimized,29764,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29878,performance,optimiz,optimized,29878,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29897,performance,optimiz,optimized,29897,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29924,performance,optimiz,optimized,29924,"zed out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30188,performance,optimiz,optimized,30188,"conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30214,performance,optimiz,optimized,30214,"s/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30236,performance,optimiz,optimized,30236,"00055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30423,performance,optimiz,optimized,30423,"0.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30447,performance,optimiz,optimized,30447,"ract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30472,performance,optimiz,optimized,30472,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30622,performance,optimiz,optimized,30622,"abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30824,performance,optimiz,optimized,30824,"l.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30996,performance,optimiz,optimized,30996,"66 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31077,performance,optimiz,optimized,31077,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31191,performance,optimiz,optimized,31191,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31210,performance,optimiz,optimized,31210,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31237,performance,optimiz,optimized,31237,"zed out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31501,performance,optimiz,optimized,31501,"conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31527,performance,optimiz,optimized,31527,"s/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31549,performance,optimiz,optimized,31549,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31736,performance,optimiz,optimized,31736,"0.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31760,performance,optimiz,optimized,31760,"ract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31785,performance,optimiz,optimized,31785,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31935,performance,optimiz,optimized,31935,"abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32137,performance,optimiz,optimized,32137,"l.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32309,performance,optimiz,optimized,32309,"73 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32390,performance,optimiz,optimized,32390,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32504,performance,optimiz,optimized,32504,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32523,performance,optimiz,optimized,32523,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32550,performance,optimiz,optimized,32550,"zed out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32814,performance,optimiz,optimized,32814,"conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b06",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32840,performance,optimiz,optimized,32840,"s/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32862,performance,optimiz,optimized,32862,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33049,performance,optimiz,optimized,33049,"0.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33073,performance,optimiz,optimized,33073,"ract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33098,performance,optimiz,optimized,33098,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33248,performance,optimiz,optimized,33248,"abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33451,performance,optimiz,optimized,33451,".c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33499,performance,optimiz,optimized,33499,"optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33657,performance,optimiz,optimized,33657,"alFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33957,performance,optimiz,optimized,33957,"n-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33981,performance,optimiz,optimized,33981,"5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34236,performance,optimiz,optimized,34236,"argsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34260,performance,optimiz,optimized,34260,"rgs=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34374,performance,optimiz,optimized,34374,"cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34393,performance,optimiz,optimized,34393,"99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34420,performance,optimiz,optimized,34420,"ate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34718,performance,optimiz,optimized,34718,".c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34742,performance,optimiz,optimized,34742,"808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34764,performance,optimiz,optimized,34764,"_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34790,performance,optimiz,optimized,34790,"5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34815,performance,optimiz,optimized,34815,"159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, fla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34985,performance,optimiz,optimized,34985," out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35299,performance,optimiz,optimized,35299,"on-3.10.4/Python/ceval.c:5992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35325,performance,optimiz,optimized,35325,"992. #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35395,performance,optimiz,optimized,35395,"ed out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35418,performance,optimiz,optimized,35418,"imized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Module",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36200,performance,optimiz,optimized,36200,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36668,performance,optimiz,optimized,36668,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36690,performance,optimiz,optimized,36690,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36874,performance,optimiz,optimized,36874,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36896,performance,optimiz,optimized,36896,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36923,performance,optimiz,optimized,36923,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:266,safety,modul,module,266,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:283,safety,error,error,283,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:431,safety,error,error,431,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3836,safety,except,exception,3836,"re.so.6.24. #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3846,safety,except,exception,3846,". #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3961,safety,error,error-skeleton,3961," in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4122,safety,except,exception,4122,") () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4132,safety,except,exception,4132,"/home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4260,safety,error,error-skeleton,4260,"uction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4688,safety,except,exception,4688,"ain_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4698,safety,except,exception,4698,"55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4823,safety,error,error-skeleton,4823,"tion (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5110,safety,error,error-skeleton,5110,"ion (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5872,safety,modul,module,5872,"__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6024,safety,modul,module,6024,"perate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17810,safety,modul,module,17810,"4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17988,safety,modul,module,17988,"local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26458,safety,modul,module,26458,"142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26636,safety,modul,module,26636,"al/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36417,safety,Modul,Modules,36417,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36524,safety,Modul,Modules,36524,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36601,safety,Modul,Modules,36601,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36744,safety,Modul,Modules,36744,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:0,security,Access,Accessing,0,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:733,testability,trace,trace,733,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:283,usability,error,error,283,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:431,usability,error,error,431,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:488,usability,hint,hint,488,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:532,usability,help,help,532,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:809,usability,help,help,809,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3961,usability,error,error-skeleton,3961," in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4260,usability,error,error-skeleton,4260,"uction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4823,usability,error,error-skeleton,4823,"tion (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5110,usability,error,error-skeleton,5110,"ion (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36011,usability,close,closeit,36011,"src/conda/python-3.10.4/Python/ceval.c:1134. #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36216,usability,close,closeit,36216,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/pull/10677:892,energy efficiency,Draw,Draw,892,"Improve TGraph2D limits computation; When TGraph2D points are almost aligned, the computation of the plot limits did not work for example like the one exposed here:. https://root-forum.cern.ch/t/issue-related-to-contour-plots-with-tgraph2d/50153. a reproducer is:. ```. void Contour(){. double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};. double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};. double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};. auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);. g->Draw(""cont4 z"");. }. ```. This PR also allows to define properly the 2D histogram. In the past old interpolator was used by SetHistogram(). Now the default is the new one. ```. void Contour(){. double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};. double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};. double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};. auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);. auto h = new TH2D(""h"",""h"",40,200,3000,40,1.00e-07,1.00e-06);. g->SetHistogram(h);. g->Draw(""cont4 z"");. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10677
https://github.com/root-project/root/pull/10677:1774,energy efficiency,Draw,Draw,1774,"Improve TGraph2D limits computation; When TGraph2D points are almost aligned, the computation of the plot limits did not work for example like the one exposed here:. https://root-forum.cern.ch/t/issue-related-to-contour-plots-with-tgraph2d/50153. a reproducer is:. ```. void Contour(){. double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};. double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};. double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};. auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);. g->Draw(""cont4 z"");. }. ```. This PR also allows to define properly the 2D histogram. In the past old interpolator was used by SetHistogram(). Now the default is the new one. ```. void Contour(){. double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};. double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};. double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};. auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);. auto h = new TH2D(""h"",""h"",40,200,3000,40,1.00e-07,1.00e-06);. g->SetHistogram(h);. g->Draw(""cont4 z"");. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10677
https://github.com/root-project/root/pull/10677:151,security,expos,exposed,151,"Improve TGraph2D limits computation; When TGraph2D points are almost aligned, the computation of the plot limits did not work for example like the one exposed here:. https://root-forum.cern.ch/t/issue-related-to-contour-plots-with-tgraph2d/50153. a reproducer is:. ```. void Contour(){. double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};. double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};. double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};. auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);. g->Draw(""cont4 z"");. }. ```. This PR also allows to define properly the 2D histogram. In the past old interpolator was used by SetHistogram(). Now the default is the new one. ```. void Contour(){. double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};. double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};. double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};. auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);. auto h = new TH2D(""h"",""h"",40,200,3000,40,1.00e-07,1.00e-06);. g->SetHistogram(h);. g->Draw(""cont4 z"");. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10677
https://github.com/root-project/root/issues/10678:217,availability,error,error,217,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:299,availability,error,error,299,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:1083,availability,Error,Error,1083,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:1283,availability,down,downloaded,1283,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:217,performance,error,error,217,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:299,performance,error,error,299,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:1083,performance,Error,Error,1083,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:217,safety,error,error,217,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:299,safety,error,error,299,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:1083,safety,Error,Error,1083,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:217,usability,error,error,217,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:239,usability,behavi,behavior,239,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:299,usability,error,error,299,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:1083,usability,Error,Error,1083,"TH3::Interpolate min/max value condition behaves differently for TH1/TH2; ### Describe the bug. Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior. I expected to get a value different than 0 and no error. . ### To Reproduce. ```c++. #include <iostream> . #include ""TH3.h"". int main() {. auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);. . for(int i=1; i <= m_hist->GetNbinsX(); i++). for(int j=1; j <= m_hist->GetNbinsY(); j++). for(int k=1; k <= m_hist->GetNbinsZ(); k++). m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;. double y = 0.002;. double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; . std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";. std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";. . return 0;. }. ```. This outputs the following on my machine,. ```. bins = 29 1 1. Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain. value = 0. value = 3. ```. ### Setup. Built for linuxx8664gcc on Apr 12 2022, 16:28:03. From tags/v6-26-02@v6-26-02. downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/pull/10679:214,availability,avail,available,214,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:382,availability,avail,available,382,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:546,deployability,build,building,546,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:466,energy efficiency,core,core,466,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:119,integrability,wrap,wrapper,119,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:266,integrability,wrap,wrapper,266,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:407,integrability,sub,substituted,407,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:119,interoperability,wrapper,wrapper,119,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:248,interoperability,standard,standard-agnostic,248,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:266,interoperability,wrapper,wrapper,266,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:214,reliability,availab,available,214,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:382,reliability,availab,available,382,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:214,safety,avail,available,214,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:382,safety,avail,available,382,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:624,safety,test,test,624,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:214,security,availab,available,214,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:382,security,availab,available,382,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:624,testability,test,test,624,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:629,testability,coverag,coverage,629,"[code] Add `InvokeResult_t`, use that instead of deprecated `std::result_of` ; `ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to. `std::result_of_t` if the former is not available. It is useful as a. C++-standard-agnostic wrapper for this functionality, as. `std::result_of` has been deprecated in C++17 but `std::invoke_result`. is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/issues/10680:611,availability,failur,failure,611,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:657,availability,error,error,657,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:798,availability,error,error,798,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:924,availability,error,error,924,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1065,availability,error,error,1065,"duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1191,availability,error,error,1191,"cted behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1826,availability,error,error,1826,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1967,availability,error,error,1967,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2093,availability,error,error,2093,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:611,deployability,fail,failure,611,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1597,deployability,Toolchain,Toolchains,1597,"ead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1708,deployability,fail,failed,1708,"function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2410,deployability,instal,install,2410,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2491,deployability,instal,install,2491,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2688,deployability,upgrad,upgrade,2688,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2696,energy efficiency,schedul,schedule,2696,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:395,integrability,pub,public,395,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:41,interoperability,bind,binding,41,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:112,interoperability,bind,bind,112,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1416,interoperability,mismatch,mismatch,1416,"};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2121,interoperability,specif,specifier,2121,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:41,modifiability,bind,binding,41,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:112,modifiability,bind,bind,112,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1432,modifiability,paramet,parameter,1432," }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2688,modifiability,upgrad,upgrade,2688,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:611,performance,failur,failure,611,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:657,performance,error,error,657,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:798,performance,error,error,798,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:924,performance,error,error,924,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1065,performance,error,error,1065,"duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1191,performance,error,error,1191,"cted behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1578,performance,Content,Contents,1578,"`0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1826,performance,error,error,1826,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1967,performance,error,error,1967,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2093,performance,error,error,2093,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2603,performance,memor,memory,2603,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2696,performance,schedul,schedule,2696,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:611,reliability,fail,failure,611,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1237,reliability,doe,does,1237,"ure with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1708,reliability,fail,failed,1708,"function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:657,safety,error,error,657,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:798,safety,error,error,798,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:924,safety,error,error,924,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1065,safety,error,error,1065,"duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1191,safety,error,error,1191,"cted behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1826,safety,error,error,1826,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1967,safety,error,error,1967,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2093,safety,error,error,2093,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:233,security,sign,signature,233,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:682,security,ident,identifier,682,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:949,security,ident,identifier,949,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1851,security,ident,identifier,1851,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2396,testability,context,context,2396,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:199,usability,behavi,behavior,199,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:657,usability,error,error,657,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:798,usability,error,error,798,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:924,usability,error,error,924,"Namespace dropped in std::function cppyy binding; - [x] Checked for duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1065,usability,error,error,1065,"duplicates. ### Describe the bug. Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1191,usability,error,error,1191,"cted behavior. I can define a callback signature with types not in global namespace. ### To Reproduce. ```python. import cppyy. cppyy.cppdef(r""""""\. #include <functional>. namespace foo {. class Foo {. public:. Foo() : bar(0) {};. int bar;. };. }. void apply(std::function<void(foo::Foo*)> f) {. foo::Foo x;. f(&x);. }. """"""). cppyy.gbl.apply(lambda x: print(x.bar)). ```. Expected output: `0`. What I get instead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1597,usability,Tool,Toolchains,1597,"ead is a failure to compile:. ```. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1826,usability,error,error,1826,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1967,usability,error,error,1967,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2093,usability,error,error,2093,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2330,usability,behavi,behavior,2330,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2603,usability,memor,memory,2603,"id(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:29: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:33: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^~~~~. input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'). void apply(std::function<void(foo::Foo*)> f) {. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction. constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t). ^. input_line_28:5:60: error: use of undeclared identifier 'Foo'. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:64: error: expected expression. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. input_line_28:5:66: error: type name requires a specifier or qualifier. ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);. ^. ```. If I drop the `foo` namespace then it works fine. ### Setup. ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context. If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory). So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10681:20,usability,help,help,20,Some TMath function help is missing; see:. https://root.cern/doc/master/namespaceTMath.html#abb9e615dbf9b739fa90239d4b2ff541a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10681
https://github.com/root-project/root/pull/10682:175,deployability,contain,contain,175,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:296,deployability,modul,module,296,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:303,deployability,modul,modulemap,303,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:409,deployability,upgrad,upgrade,409,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:14,modifiability,variab,variable,14,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:219,modifiability,variab,variable,219,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:296,modifiability,modul,module,296,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:303,modifiability,modul,modulemap,303,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:409,modifiability,upgrad,upgrade,409,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:166,reliability,doe,does,166,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:296,safety,modul,module,296,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:303,safety,modul,modulemap,303,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:377,safety,compl,complained,377,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:377,security,compl,complained,377,"[cmake] Reset variable in ROOT_FIND_DIRS_WITH_HEADERS; This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10683:148,deployability,depend,depend,148,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:269,deployability,patch,patch,269,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:148,integrability,depend,depend,148,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:148,modifiability,depend,depend,148,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:148,safety,depend,depend,148,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:269,safety,patch,patch,269,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:269,security,patch,patch,269,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:148,testability,depend,depend,148,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:86,usability,user,users,86,"[DF] Do not create a RVariedAction if there are no variations; Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/issues/10684:75,deployability,integr,integrate,75,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:75,integrability,integr,integrate,75,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:75,interoperability,integr,integrate,75,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:75,modifiability,integr,integrate,75,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:75,reliability,integr,integrate,75,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:676,reliability,doe,does,676,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:769,reliability,doe,does,769,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:75,security,integr,integrate,75,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:463,security,Session,Session,463,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:514,security,sign,signature,514,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:886,security,Session,Session,886,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:75,testability,integr,integrate,75,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:1008,testability,simpl,simpler,1008,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:1008,usability,simpl,simpler,1008,"[PyROOT] Cannot use SofieFunctor in Python; When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and. JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see . https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with . ```. sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""). ```. and then later use the other signature of `RDataFrame::Define`. ```. df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. it does not work. Doing: . `print(sofie_functor)` results in None object. Trying also this , it does not work: . ```. df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]). ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/pull/10685:73,deployability,build,builds,73,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:794,deployability,version,version,794,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1084,deployability,configurat,configuration,1084," work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1103,deployability,configurat,configuration,1103,"DB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1243,deployability,resourc,resources,1243,"ing of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingVal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1636,deployability,build,build,1636," --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:2414,deployability,build,build,2414," from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:2559,deployability,build,build,2559,"reakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:2833,deployability,build,build,2833," [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:2983,deployability,build,build,2983,"7]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:3130,deployability,build,build,3130,";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:3276,deployability,build,build,3276,"e_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x000055",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:3454,deployability,build,build,3454,"0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:3642,deployability,build,build,3642,"td::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:3774,deployability,build,build,3774,"ng::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubuserconten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:3911,deployability,build,build,3911,"/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubusercontent.com/249404/171405859-c6eb2c9f-5a48-4fc0-b855-a8b0af528c1f.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:4034,deployability,build,build,4034,"/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubusercontent.com/249404/171405859-c6eb2c9f-5a48-4fc0-b855-a8b0af528c1f.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:4158,deployability,build,build,4158,"/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubusercontent.com/249404/171405859-c6eb2c9f-5a48-4fc0-b855-a8b0af528c1f.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:4245,deployability,build,build,4245,"/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubusercontent.com/249404/171405859-c6eb2c9f-5a48-4fc0-b855-a8b0af528c1f.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:16,energy efficiency,profil,profiling,16,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:242,energy efficiency,profil,profiling,242,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:518,energy efficiency,profil,profiling,518,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1243,energy efficiency,resourc,resources,1243,"ing of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingVal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1541,energy efficiency,load,load,1541," I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:2706,energy efficiency,alloc,allocator,2706,"d_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #4 0x00007ffff2c32e38 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /srv/root/src/build/lib/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:185,integrability,event,event,185,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:346,integrability,interfac,interface,346,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:794,integrability,version,version,794,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1036,integrability,configur,configured,1036,"preted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1084,integrability,configur,configuration,1084," work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1103,integrability,configur,configuration,1103,"DB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:346,interoperability,interfac,interface,346,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1526,interoperability,share,shared,1526,"For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:346,modifiability,interfac,interface,346,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:407,modifiability,variab,variables,407,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:794,modifiability,version,version,794,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:945,modifiability,exten,extent,945,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1036,modifiability,configur,configured,1036,"preted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1084,modifiability,configur,configuration,1084," work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1103,modifiability,configur,configuration,1103,"DB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:16,performance,profil,profiling,16,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:242,performance,profil,profiling,242,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:518,performance,profil,profiling,518,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1243,performance,resourc,resources,1243,"ing of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingVal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1541,performance,load,load,1541," I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so. #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1243,safety,resourc,resources,1243,"ing of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingVal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1036,security,configur,configured,1036,"preted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1084,security,configur,configuration,1084," work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1103,security,configur,configuration,1103,"DB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:4449,security,session,session,4449,"/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubusercontent.com/249404/171405859-c6eb2c9f-5a48-4fc0-b855-a8b0af528c1f.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1243,testability,resourc,resources,1243,"ing of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingVal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:4,usability,support,support,4,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:113,usability,support,support,113,"Add support for profiling/debugging interpreted/JITted code; This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1229,usability,document,documentation,1229,"allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1298,usability,document,documentation,1298,"ity provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc08",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1319,usability,help,help,1319,"disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1331,usability,help,help,1331,"default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1372,usability,command,commands,1372,"n chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally. enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh. $ export CLING_DEBUG=1. $ gdb --args bin/root.exe -l tutorials/hsimple.C. GNU gdb (Gentoo 12.1 vanilla) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-pc-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://bugs.gentoo.org/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from bin/root.exe... (gdb) break hsimple. Function ""hsimple"" not defined. Make breakpoint pending on future shared library load? (y or [n]) y. Breakpoint 1 (hsimple) pending. (gdb) run. Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". [Detaching after vfork from child process 813528]. [Detaching after vfork from child process 813530]. [Detaching after vfork from child process 813533]. [Detaching after vfork from child process 813557]. root [0] . Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36. 36	 TString filename = ""hsimple.root"";. (gdb) bt. #0 hsimple (getFile=0) at tutorials/hsimple.C:36. #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2. #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:4594,usability,user,user-images,4594,"/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubusercontent.com/249404/171405859-c6eb2c9f-5a48-4fc0-b855-a8b0af528c1f.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:4749,usability,user,user-images,4749,"/libCling.so. #5 0x00007ffff2d30967 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #6 0x00007ffff2d3eefb in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #7 0x00007ffff2d4055e in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #8 0x00007ffff2d2a9d6 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /srv/root/src/build/lib/libCling.so. #9 0x00007ffff2b384ed in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /srv/root/src/build/lib/libCling.so. #10 0x00007ffff2b55671 in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #11 0x00007ffff2b5597a in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (). from /srv/root/src/build/lib/libCling.so. #12 0x00007ffff7cb2f76 in TApplication::ExecuteFile(char const*, int*, bool) (). from /srv/root/src/build/lib/libCore.so. #13 0x00007ffff7fa4f54 in TRint::ProcessLineNr(char const*, char const*, int*) (). from /srv/root/src/build/lib/libRint.so. #14 0x00007ffff7fa6daf in TRint::Run(bool) () from /srv/root/src/build/lib/libRint.so. #15 0x00005555555551e0 in main (). (gdb) n. 37	 TString dir = gROOT->GetTutorialDir();. (gdb) n. 38	 dir.ReplaceAll(""/./"",""/"");. (gdb) n. 40	 if (getFile) {. (gdb) quit. A debugging session is active. 	Inferior 1 [process 813525] will be killed. Quit anyway? (y or n) y. ```. **Flamegraphs**. Before:. ![hsimple-nojit](https://user-images.githubusercontent.com/249404/171405807-d9d0f46a-ceb8-42c2-8f15-577cc60a0f80.svg). After (i.e. with `CLING_PROFILE=1`):. ![hsimple-jit](https://user-images.githubusercontent.com/249404/171405859-c6eb2c9f-5a48-4fc0-b855-a8b0af528c1f.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10686:22,deployability,updat,updated,22,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:84,deployability,integr,integral,84,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:208,deployability,manag,management,208,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:208,energy efficiency,manag,management,208,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:84,integrability,integr,integral,84,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:84,interoperability,integr,integral,84,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:84,modifiability,integr,integral,84,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:200,performance,memor,memory,200,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:84,reliability,integr,integral,84,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:22,safety,updat,updated,22,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:149,safety,avoid,avoiding,149,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:208,safety,manag,management,208,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:22,security,updat,updated,22,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:84,security,integr,integral,84,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:84,testability,integr,integral,84,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/pull/10686:200,usability,memor,memory,200,[RF] Some RooFit code updated with range-based loops and smart ptrs; Especially the integral code in `RooAbsAnaConvPdf` can be made more. concise by avoiding boilerplate code for iterators and manual memory. management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/issues/10687:103,reliability,doe,does,103,[RF] HistFactory AddShapeFactor crashes; ### Describe the bug. AddShapeFactor from HistFactory::Sample does not work and causes crashes when used. ### To Reproduce. execute the attached script [test.tar.gz](https://github.com/root-project/root/files/8815596/test.tar.gz). ### Setup. latest ROOT master on archlinux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10687
https://github.com/root-project/root/issues/10687:194,safety,test,test,194,[RF] HistFactory AddShapeFactor crashes; ### Describe the bug. AddShapeFactor from HistFactory::Sample does not work and causes crashes when used. ### To Reproduce. execute the attached script [test.tar.gz](https://github.com/root-project/root/files/8815596/test.tar.gz). ### Setup. latest ROOT master on archlinux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10687
https://github.com/root-project/root/issues/10687:258,safety,test,test,258,[RF] HistFactory AddShapeFactor crashes; ### Describe the bug. AddShapeFactor from HistFactory::Sample does not work and causes crashes when used. ### To Reproduce. execute the attached script [test.tar.gz](https://github.com/root-project/root/files/8815596/test.tar.gz). ### Setup. latest ROOT master on archlinux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10687
https://github.com/root-project/root/issues/10687:194,testability,test,test,194,[RF] HistFactory AddShapeFactor crashes; ### Describe the bug. AddShapeFactor from HistFactory::Sample does not work and causes crashes when used. ### To Reproduce. execute the attached script [test.tar.gz](https://github.com/root-project/root/files/8815596/test.tar.gz). ### Setup. latest ROOT master on archlinux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10687
https://github.com/root-project/root/issues/10687:258,testability,test,test,258,[RF] HistFactory AddShapeFactor crashes; ### Describe the bug. AddShapeFactor from HistFactory::Sample does not work and causes crashes when used. ### To Reproduce. execute the attached script [test.tar.gz](https://github.com/root-project/root/files/8815596/test.tar.gz). ### Setup. latest ROOT master on archlinux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10687
https://github.com/root-project/root/pull/10688:149,availability,error,error,149,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:358,deployability,log,login,358,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:149,performance,error,error,149,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:149,safety,error,error,149,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:358,safety,log,login,358,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:358,security,log,login,358,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:358,testability,log,login,358,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:149,usability,error,error,149,"fix attribute nonstring warning in TUnixSystem.cxx; When compiled with latest gcc / clib, one get warnings like:. ```. /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’. ```. It is because of declaration:. ```. char ut_host[UT_HOSTSIZE]. __attribute_nonstring__; /* Hostname for remote login. */. ```. Seems to be, `ut_host` cannot be used as null-terminated string. Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10689:156,deployability,depend,depend,156,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:277,deployability,patch,patch,277,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:156,integrability,depend,depend,156,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:156,modifiability,depend,depend,156,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:156,safety,depend,depend,156,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:277,safety,patch,patch,277,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:277,security,patch,patch,277,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:156,testability,depend,depend,156,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:94,usability,user,users,94,"[DF] Do not create a RVariedAction if there are no variations (v6.26); Before this commit, if users requested `VariationsFor(result)` but. `result` did not depend on any variation, we constructed a (no-op). RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation. graph if it's not needed. RResultMap had to be taught how to deal. with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10690:24,deployability,build,build,24,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:387,deployability,contain,contained,387,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:40,energy efficiency,core,core,40,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:294,energy efficiency,current,current,294,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:486,energy efficiency,core,core,486,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:5,modifiability,refact,refactoring,5,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:471,modifiability,refact,refactoring,471,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:5,performance,refactor,refactoring,5,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:119,performance,time,time,119,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:238,performance,time,time,238,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:255,performance,time,time,255,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:471,performance,refactor,refactoring,471,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:585,safety,avoid,avoid,585,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:545,testability,simpl,simplify,545,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:545,usability,simpl,simplify,545,"Some refactoring of the build system of core/; This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10691:33,usability,document,documented,33,Make sure the math functions are documented; as requested here:. https://github.com/root-project/root/issues/10681,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10691
https://github.com/root-project/root/pull/10692:119,deployability,modul,modules,119,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:184,deployability,modul,modules,184,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:346,deployability,version,versioning,346,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:368,deployability,modul,modules,368,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:377,deployability,Updat,Update,377,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:39,energy efficiency,load,loading,39,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:192,energy efficiency,core,core,192,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:346,integrability,version,versioning,346,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:119,modifiability,modul,modules,119,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:184,modifiability,modul,modules,184,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:346,modifiability,version,versioning,346,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:368,modifiability,modul,modules,368,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:39,performance,load,loading,39,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:119,safety,modul,modules,119,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:184,safety,modul,modules,184,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:368,safety,modul,modules,368,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:377,safety,Updat,Update,377,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:377,security,Updat,Update,377,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/pull/10692:217,usability,widget,widgets,217,[webgui] always use relative path when loading JSROOT; Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';. import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path. may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/issues/10693:2447,availability,error,error,2447,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:27,deployability,fail,fails,27,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:87,deployability,fail,fails,87,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:429,deployability,FAIL,FAIL,429,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:553,deployability,FAIL,FAILED,553,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:648,deployability,build,build,648,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:790,deployability,build,build,790,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1243,deployability,build,build,1243,"iguring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1433,deployability,build,build,1433,"ling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1495,deployability,build,build,1495,"********** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1668,deployability,build,build,1668,"/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1893,deployability,build,build,1893," -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1955,deployability,build,build,1955,"ad /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2080,deployability,build,build,2080,"g -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2190,deployability,build,build,2190,"deUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2803,deployability,version,version,2803,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2822,deployability,fail,failed,2822,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3192,deployability,fail,fails,3192,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:242,integrability,configur,configuring,242,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2803,integrability,version,version,2803,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3101,integrability,configur,configuring,3101,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:43,interoperability,mismatch,mismatch,43,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:141,interoperability,standard,standard,141,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:204,interoperability,specif,specify,204,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2811,interoperability,mismatch,mismatch,2811,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:242,modifiability,configur,configuring,242,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2803,modifiability,version,version,2803,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3101,modifiability,configur,configuring,3101,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2447,performance,error,error,2447,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:27,reliability,fail,fails,27,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:87,reliability,fail,fails,87,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:429,reliability,FAIL,FAIL,429,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:553,reliability,FAIL,FAILED,553,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2822,reliability,fail,failed,2822,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3192,reliability,fail,fails,3192,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:0,safety,Test,Test,0,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:58,safety,test,test,58,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:295,safety,test,test,295,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:509,safety,TEST,TEST,509,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:672,safety,test,test,672,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:814,safety,test,test,814,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:930,safety,except,exceptions,930,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:998,safety,test,test,998,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1021,safety,Input,Inputs,1021,"ng fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1118,safety,except,exceptions,1118,"It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1186,safety,test,test,1186," 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1209,safety,Input,Inputs,1209,"a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1267,safety,test,test,1267,"lts to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1384,safety,test,test,1384,"s that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1581,safety,test,test,1581,": Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1746,safety,test,test,1746,"f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1844,safety,test,test,1844,"l/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2041,safety,test,test,2041,"mpGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2104,safety,test,test,2104,"tions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2268,safety,test,test,2268,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2407,safety,test,test,2407,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2447,safety,error,error,2447,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2490,safety,input,input,2490,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3174,safety,test,test,3174,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:242,security,configur,configuring,242,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3101,security,configur,configuring,3101,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:0,testability,Test,Test,0,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:58,testability,test,test,58,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:295,testability,test,test,295,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:509,testability,TEST,TEST,509,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:672,testability,test,test,672,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:814,testability,test,test,814,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:998,testability,test,test,998,"Test clingtest-check-cling fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1186,testability,test,test,1186," 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1267,testability,test,test,1267,"lts to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1384,testability,test,test,1384,"s that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1581,testability,test,test,1581,": Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1746,testability,test,test,1746,"f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1844,testability,test,test,1844,"l/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2041,testability,test,test,2041,"mpGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2104,testability,test,test,2104,"tions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2268,testability,test,test,2268,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2407,testability,test,test,2407,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2758,testability,Assert,Assertion,2758,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3174,testability,test,test,3174,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1021,usability,Input,Inputs,1021,"ng fails (language mismatch); The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere. I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1209,usability,Input,Inputs,1209,"a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```. 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185). 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1522,usability,tool,tools,1522,"odeUnloading/PCH/VTables.C' FAILED ********************. 1: Script:. 1: --. 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true. 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch"". 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1982,usability,tool,tools,1982,"preter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch. 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/gli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2334,usability,Command,Command,2334,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2447,usability,error,error,2447,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2490,usability,input,input,2490,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3083,usability,command,command,3083,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3121,usability,help,help,3121,"oading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch. 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C. 1: --. 1: Exit Code: 1. 1: . 1: Command Output (stderr):. 1: --. 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input. 1: // CHECK: I was executed. 1: ^. 1: <stdin>:1:1: note: scanning from here. 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed. 1: ^. 1: <stdin>:6:52: note: possible intended match here. 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76. 1: ^. 1: . 1: --. ```. Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/pull/10695:105,interoperability,standard,standard-agnostic,105,"[TMVA] Use InvokeResult_t instead of std::result_of; std::result_of is deprecated in C++17, use the. C++-standard-agnostic alternative InvokeResult_t instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10695
https://github.com/root-project/root/pull/10696:418,safety,review,reviews,418,"[Interpreter] remove EmittedDeferredDecls in CodeGenModule; This reverts:. * https://github.com/vgvassilev/clang/commit/d238d797fc. * https://github.com/vgvassilev/clang/commit/3b79abbb1b. * https://github.com/vgvassilev/clang/commit/be91dad03a. After communicating with the upstream, we found that this field. may not be needed to fix the inline functions in the cling. Related. discussion can be found here: https://reviews.llvm.org/D126781. Signed-off-by: Jun Zhang <jun@junz.org>. CC @vgvassilev @Axel-Naumann .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10696
https://github.com/root-project/root/pull/10696:444,security,Sign,Signed-off-by,444,"[Interpreter] remove EmittedDeferredDecls in CodeGenModule; This reverts:. * https://github.com/vgvassilev/clang/commit/d238d797fc. * https://github.com/vgvassilev/clang/commit/3b79abbb1b. * https://github.com/vgvassilev/clang/commit/be91dad03a. After communicating with the upstream, we found that this field. may not be needed to fix the inline functions in the cling. Related. discussion can be found here: https://reviews.llvm.org/D126781. Signed-off-by: Jun Zhang <jun@junz.org>. CC @vgvassilev @Axel-Naumann .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10696
https://github.com/root-project/root/pull/10696:418,testability,review,reviews,418,"[Interpreter] remove EmittedDeferredDecls in CodeGenModule; This reverts:. * https://github.com/vgvassilev/clang/commit/d238d797fc. * https://github.com/vgvassilev/clang/commit/3b79abbb1b. * https://github.com/vgvassilev/clang/commit/be91dad03a. After communicating with the upstream, we found that this field. may not be needed to fix the inline functions in the cling. Related. discussion can be found here: https://reviews.llvm.org/D126781. Signed-off-by: Jun Zhang <jun@junz.org>. CC @vgvassilev @Axel-Naumann .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10696
https://github.com/root-project/root/pull/10698:678,deployability,updat,updated,678,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:267,energy efficiency,model,model,267,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:297,energy efficiency,model,model,297,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:312,energy efficiency,model,model,312,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:411,energy efficiency,model,model,411,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:493,energy efficiency,model,model,493,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:560,energy efficiency,model,model,560,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:649,safety,test,tested,649,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:678,safety,updat,updated,678,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:136,security,session,session,136,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:267,security,model,model,267,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:297,security,model,model,297,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:312,security,model,model,312,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:391,security,session,session,391,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:411,security,model,model,411,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:493,security,model,model,493,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:560,security,model,model,560,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:678,security,updat,updated,678,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:649,testability,test,tested,649,"[TMVA][SOFIE] Use enum for options.; ## This Pull request:. Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:. ```. using namespace TMVA::Experimental::SOFIE;. RModelParser_ONNX parser;. RModel model = parser.Parse(""path/to/model.onnx"");. model.Generate();. ```. Here's how the options can be used to :. - not use the session class. ```. model.Generate(Options::kNoSession);. ```. - not save the weights in a file. ```. model.Generate(Options::kNoWeightFile);. ```. - not use both. ```. model.Generate(Options::kNoSession | Options::kNoWeightFile);. ```. ## Checklist:. - [x] tested changes locally. - [] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10699:520,availability,slo,slot,520,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:220,deployability,patch,patch,220,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:489,deployability,contain,contains,489,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:897,deployability,patch,patch,897,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:865,integrability,event,event,865,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:346,performance,memor,memory,346,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:838,performance,memor,memory,838,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:520,reliability,slo,slot,520,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:79,safety,Sanit,Sanity,79,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:220,safety,patch,patch,220,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:897,safety,patch,patch,897,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:943,safety,test,test,943,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:79,security,Sanit,Sanity,79,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:220,security,patch,patch,220,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:353,security,access,access,353,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:845,security,access,accesses,845,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:897,security,patch,patch,897,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:428,testability,simul,simultaneously,428,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:790,testability,simul,simultaneously,790,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:932,testability,regress,regression,932,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:943,testability,test,test,943,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:346,usability,memor,memory,346,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:377,usability,User,Users,377,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:838,usability,memor,memory,838,"[DF] Fix crash with jitted Define and non-jitted Vary; **First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd. columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type. information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously. In the latter case, RVariation::fLastResults contains, for each. processing slot, an RVec of RVecs of results where the outer. dimension runs over the different columns and the inner one over. the varied values of each column. Before this commit, RVariation was initializing fLastResults to. the wrong size in the case of multiple columns varied simultaneously,. which ended up causing invalid memory accesses during the event loop. in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10700:19,usability,support,support,19,[DF] Add iteration support to RResultMap; Thanks @hageboeck !,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10700
https://github.com/root-project/root/pull/10702:466,energy efficiency,optim,optimization,466,"[DF] Fix invalid reads in Vary with many variations and multiple columns; When varying multiple columns simultaneously, RVariation was destroying. and re-creating the per-column RVecs of varied values at every entry,. which resulted in a change in the address of the varied values between. entries, which caused invalid reads on the part of the RVariationReader. (which assumes the addresses of varied values are stable). The issue was hidden by RVec's small buffer optimization, which was. keeping addresses stable as long as the number of variations fit the. small buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10702
https://github.com/root-project/root/pull/10702:459,integrability,buffer,buffer,459,"[DF] Fix invalid reads in Vary with many variations and multiple columns; When varying multiple columns simultaneously, RVariation was destroying. and re-creating the per-column RVecs of varied values at every entry,. which resulted in a change in the address of the varied values between. entries, which caused invalid reads on the part of the RVariationReader. (which assumes the addresses of varied values are stable). The issue was hidden by RVec's small buffer optimization, which was. keeping addresses stable as long as the number of variations fit the. small buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10702
https://github.com/root-project/root/pull/10702:567,integrability,buffer,buffer,567,"[DF] Fix invalid reads in Vary with many variations and multiple columns; When varying multiple columns simultaneously, RVariation was destroying. and re-creating the per-column RVecs of varied values at every entry,. which resulted in a change in the address of the varied values between. entries, which caused invalid reads on the part of the RVariationReader. (which assumes the addresses of varied values are stable). The issue was hidden by RVec's small buffer optimization, which was. keeping addresses stable as long as the number of variations fit the. small buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10702
https://github.com/root-project/root/pull/10702:466,performance,optimiz,optimization,466,"[DF] Fix invalid reads in Vary with many variations and multiple columns; When varying multiple columns simultaneously, RVariation was destroying. and re-creating the per-column RVecs of varied values at every entry,. which resulted in a change in the address of the varied values between. entries, which caused invalid reads on the part of the RVariationReader. (which assumes the addresses of varied values are stable). The issue was hidden by RVec's small buffer optimization, which was. keeping addresses stable as long as the number of variations fit the. small buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10702
https://github.com/root-project/root/pull/10702:104,testability,simul,simultaneously,104,"[DF] Fix invalid reads in Vary with many variations and multiple columns; When varying multiple columns simultaneously, RVariation was destroying. and re-creating the per-column RVecs of varied values at every entry,. which resulted in a change in the address of the varied values between. entries, which caused invalid reads on the part of the RVariationReader. (which assumes the addresses of varied values are stable). The issue was hidden by RVec's small buffer optimization, which was. keeping addresses stable as long as the number of variations fit the. small buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10702
https://github.com/root-project/root/pull/10703:121,availability,error,error,121,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:174,availability,error,error,174,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:403,availability,error,error,403,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:714,deployability,updat,updated,714,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:142,energy efficiency,core,core,142,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:515,integrability,pub,pubs,515,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:23,interoperability,socket,socket,23,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:481,interoperability,socket,socket,481,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:492,interoperability,specif,specification,492,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:121,performance,error,error,121,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:174,performance,error,error,174,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:403,performance,error,error,403,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:121,safety,error,error,121,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:174,safety,error,error,174,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:403,safety,error,error,403,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:684,safety,test,tested,684,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:714,safety,updat,updated,714,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:23,security,soc,socket,23,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:188,security,access,access,188,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:224,security,soc,sockaddr,224,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:359,security,soc,sockaddr,359,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:377,security,soc,sockaddr,377,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:437,security,soc,sockaddr,437,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:481,security,soc,socket,481,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:714,security,updat,updated,714,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:684,testability,test,tested,684,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:121,usability,error,error,121,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:174,usability,error,error,174,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:403,usability,error,error,403,"Add missing header sys/socket.h.; # This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:. ```. core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'. if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4. ^. /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'. struct sockaddr *ifa_addr;. ^. 1 error generated. ```. The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/issues/10704:1634,availability,Error,Error,1634,"6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1819,availability,Error,Error,1819," veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1442,deployability,build,build,1442,"frame. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1533,deployability,fail,fails,1533,". - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3091,deployability,build,build,3091,"g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3192,deployability,build,building,3192,"a a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3261,deployability,build,building,3261,"=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:20,energy efficiency,load,loading,20,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:74,energy efficiency,load,loading,74,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:140,energy efficiency,load,loading,140,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:768,energy efficiency,cpu,cpu,768,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1780,energy efficiency,load,load,1780,"mva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1837,energy efficiency,Load,LoadPCM,1837,"xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2186,energy efficiency,load,loaded,2186,"ATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2767,energy efficiency,load,loaded,2767,"namically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3226,energy efficiency,current,current,3226,". . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4101,energy efficiency,Current,Current,4101,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4292,energy efficiency,load,load-test,4292,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4374,energy efficiency,load,load-test,4374,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:35,integrability,sub,sub-directories,35,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1096,integrability,sub,sub-directory,1096,"llustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1505,integrability,sub,sub-directory,1505,"gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2470,integrability,compon,component,2470," and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2653,integrability,sub,sub-directory,2653,"Module>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2933,integrability,compon,components,2933,"Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3687,integrability,Sub,Sub-directory,3687,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3894,integrability,Sub,Sub-directory,3894,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:241,interoperability,Platform,Platform,241,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:715,interoperability,share,shared,715,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:841,interoperability,xml,xml,841,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:985,interoperability,share,shared,985,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1681,interoperability,share,shared,1681," root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which should",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2470,interoperability,compon,component,2470," and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2848,interoperability,share,shared,2848," PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2933,interoperability,compon,components,2933,"Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2949,interoperability,share,shared,2949,"does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2470,modifiability,compon,component,2470," and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2933,modifiability,compon,components,2933,"Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3287,modifiability,pac,packages,3287,"ibs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:20,performance,load,loading,20,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:74,performance,load,loading,74,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:140,performance,load,loading,140,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:768,performance,cpu,cpu,768,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1634,performance,Error,Error,1634,"6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1780,performance,load,load,1780,"mva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1819,performance,Error,Error,1819," veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1837,performance,Load,LoadPCM,1837,"xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2186,performance,load,loaded,2186,"ATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2767,performance,load,loaded,2767,"namically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4292,performance,load,load-test,4292,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4374,performance,load,load-test,4374,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1533,reliability,fail,fails,1533,". - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1892,reliability,doe,does,1892,"0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1952,reliability,doe,does,1952,"st . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the share",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:463,safety,except,exceptions,463,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:952,safety,test,test,952,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1142,safety,Test,Test,1142,"ing. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual direct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1226,safety,Test,Test,1226," (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1246,safety,Test,Test,1246,"m . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1408,safety,test,test,1408,"in_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1603,safety,Test,Test,1603,"root. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1623,safety,Test,Test,1623,"nk. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1634,safety,Error,Error,1634,"6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1819,safety,Error,Error,1819," veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2305,safety,test,test,2305,"t.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2374,safety,Test,Test,2374,"afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2406,safety,compl,complains,2406,"t LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anythi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3214,safety,test,tests,3214,"hout the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3252,safety,prevent,prevents,3252,"ke LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3332,safety,test,test,3332,"Y_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3474,safety,detect,detect,3474,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3565,safety,compl,completely,3565,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3679,safety,test,tests,3679,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3744,safety,test,test,3744,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3826,safety,Test,Test,3826,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3846,safety,Test,Test,3846,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3958,safety,test,test,3958,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4033,safety,Test,Test,4033,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4053,safety,Test,Test,4053,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4145,safety,test,test,4145,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4213,safety,Test,Test,4213,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4233,safety,Test,Test,4233,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4297,safety,test,test,4297,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4379,safety,test,test,4379,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:748,security,ssl,ssl,748,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2406,security,compl,complains,2406,"t LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anythi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3252,security,preven,prevents,3252,"ke LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3474,security,detect,detect,3474,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3565,security,compl,completely,3565,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:952,testability,test,test,952,"Bug in ROOT library loading - .dot sub-directories; # Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1142,testability,Test,Test,1142,"ing. . I suspect that the ROOT code cannot handle directories that start with. a dot (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual direct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1226,testability,Test,Test,1226," (`.`). . ## Platform . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1246,testability,Test,Test,1246,"m . - ROOT 6.26/00. - Features:. - cxx17. - asimage. - builtin_clang. - builtin_cling. - builtin_llvm. - builtin_openui5. - builtin_vdt. - builtin_xxhash. - builtin_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1408,testability,test,test,1408,"in_zeromq. - cefweb. - clad. - dataframe. - davix. - exceptions. - fftw3. - fitsio. - gdml. - gfal. - gnuinstall. - gsl_shared. - gviz. - http. - imt. - mathmore. - mlp. - minuit2. - opengl. - pyroot. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1603,testability,Test,Test,1603,"root. - pythia6_nolink. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1623,testability,Test,Test,1623,"nk. - pythia6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2305,testability,test,test,2305,"t.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2374,testability,Test,Test,2374,"afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3214,testability,test,tests,3214,"hout the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3332,testability,test,test,3332,"Y_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3679,testability,test,tests,3679,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3744,testability,test,test,3744,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3826,testability,Test,Test,3826,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3846,testability,Test,Test,3846,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3958,testability,test,test,3958,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4033,testability,Test,Test,4033,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4053,testability,Test,Test,4053,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4145,testability,test,test,4145,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4213,testability,Test,Test,4213,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4233,testability,Test,Test,4233,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4297,testability,test,test,4297,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4379,testability,test,test,4379,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1634,usability,Error,Error,1634,"6. - roofit. - roofit_multiprocess. - webgui. - root7. - rpath. - shadowpw. - shared. - soversion. - sqlite. - ssl. - tmva. - tmva-cpu. - tmva-pymva. - spectrum. - uring. - vc. - vdt. - veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1819,usability,Error,Error,1819," veccore. - x11. - xml. - xrootd. - Debian GNU/Linux ""sid"" . - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test . 	. This will generate the shared library `libFoo.so.1` and associated. files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the. sub-directory `libs`, and execute the script `Test.C`. This all works. fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean . 	. so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs . 	. which will build the above mentioned library and associated files in. the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C... 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:. 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable. 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist. 	this is a Foo. 	hello from a Foo. 	. 	. It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`). - the end directory is below a directory starting with a dot (e.g.,. ` ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3097,usability,tool,tools,3097," ``pwd``/.libs/foo`). - if the actual directory starts with a dot, but the library is loaded. via a symbolic link without the dot . . 		$ make clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3234,usability,behavi,behaviour,3234,"ake clean. 		$ make LIBDIR=.libs . 		$ ln -s .libs libs. 		$ make test LIBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3308,usability,tool,tools,3308,"IBDIR=libs. 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 		 . In all cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3465,usability,tool,tools,3465,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3596,usability,tool,tools,3596,"l cases, ROOT complains as above. If the dot is _not_ at the. start of a path component (e.g., `LIBDIR=foo.libs`), then all is. fine. . So it seems that somewhere deep in the ROOT code, there is some. assumption about a dot (`.`) as the leading character of a. sub-directory name which shouldn't be there. As far as I can tell,. the dot makes the code think that the library loaded is the ROOT. executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared. library. The reason seems to be that, because of some bad stripping. of path components, the shared library isn't found by Cling and then. the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that. start with a dot (`.`), including for building examples and tests. The. current behaviour of ROOT prevents building production level packages. with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_. Rather, it should use system tools to detect if a given path is a. directory, a file, or what not. File and directory names are. completely volatile and proper tools should be used to deduct what it. is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean . 	$ make test LIBDIR=foo.libs . 	... 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Sub-directory with leading underscore . 	$ make clean . 	$ make test LIBDIR=_libs. 	... 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. 	. Current directory . 	$ make clean . 	$ make test LIBDIR=. . 	... 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C... 	this is a Foo. 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/pull/10706:116,reliability,doe,does,116,[math] Move definition of LSResidualFunc class in the implementation; The class LSResidualFunc is now templated and does not need to be in the header file since it is used only by the implementation. No need also to have it in the LinkDef. This Pull request fixes a compilation warning obtained when generating the dictionary since the class is now a template class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10706
https://github.com/root-project/root/pull/10707:88,deployability,log,log,88,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:20,integrability,messag,message,20,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:92,integrability,messag,message,92,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:20,interoperability,messag,message,20,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:92,interoperability,messag,message,92,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:88,safety,log,log,88,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:88,security,log,log,88,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:88,testability,log,log,88,"[TMVA] Fix printout message in MethodCategory::GetMvaValue; This Pull request removes a log message reported when using MethodCategory, see . https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10708:53,usability,document,documented,53,[skip-ci] Improve TMath doc; Some functions were not documented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10708
https://github.com/root-project/root/pull/10709:97,deployability,build,building,97,"[cling] Remove unused include of ""llvm/Config/config.h""; Including that header from cling breaks building ROOT with. external llvm and clang (which is needed e.g. for the conda. package): `config.h` is not avaiable in that scenario. cc: @chrisburr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10709
https://github.com/root-project/root/pull/10709:178,modifiability,pac,package,178,"[cling] Remove unused include of ""llvm/Config/config.h""; Including that header from cling breaks building ROOT with. external llvm and clang (which is needed e.g. for the conda. package): `config.h` is not avaiable in that scenario. cc: @chrisburr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10709
https://github.com/root-project/root/pull/10709:223,modifiability,scenario,scenario,223,"[cling] Remove unused include of ""llvm/Config/config.h""; Including that header from cling breaks building ROOT with. external llvm and clang (which is needed e.g. for the conda. package): `config.h` is not avaiable in that scenario. cc: @chrisburr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10709
https://github.com/root-project/root/pull/10710:39,availability,error,error,39,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:90,availability,error,error,90,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:144,availability,error,error,144,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:197,interoperability,format,format,197,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:39,performance,error,error,39,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:90,performance,error,error,90,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:144,performance,error,error,144,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:39,safety,error,error,39,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:90,safety,error,error,90,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:144,safety,error,error,144,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:39,usability,error,error,39,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:90,usability,error,error,90,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:144,usability,error,error,144,[skip-ci][win64] Fix fatal compilation error on Windows 64; Fix the following compilation error on Windows 64:. ```. dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10711:51,integrability,coupl,couple,51,Fix potential issues with PyLong_AsLong; Replace a couple of `PyLong_AsLong` by `PyLong_AsLongLong` when returning a `long long` and when converting to `void*` (would truncate the pointer value on Win64).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10711
https://github.com/root-project/root/pull/10711:51,modifiability,coupl,couple,51,Fix potential issues with PyLong_AsLong; Replace a couple of `PyLong_AsLong` by `PyLong_AsLongLong` when returning a `long long` and when converting to `void*` (would truncate the pointer value on Win64).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10711
https://github.com/root-project/root/pull/10711:51,testability,coupl,couple,51,Fix potential issues with PyLong_AsLong; Replace a couple of `PyLong_AsLong` by `PyLong_AsLongLong` when returning a `long long` and when converting to `void*` (would truncate the pointer value on Win64).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10711
https://github.com/root-project/root/pull/10712:0,deployability,Updat,Update,0,Update the freetype library from 2.6.1 to 2.12.1; This fixes the graphics with the latest Visual Studio 2022 (17.2),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10712
https://github.com/root-project/root/pull/10712:0,safety,Updat,Update,0,Update the freetype library from 2.6.1 to 2.12.1; This fixes the graphics with the latest Visual Studio 2022 (17.2),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10712
https://github.com/root-project/root/pull/10712:0,security,Updat,Update,0,Update the freetype library from 2.6.1 to 2.12.1; This fixes the graphics with the latest Visual Studio 2022 (17.2),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10712
https://github.com/root-project/root/pull/10712:90,usability,Visual,Visual,90,Update the freetype library from 2.6.1 to 2.12.1; This fixes the graphics with the latest Visual Studio 2022 (17.2),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10712
https://github.com/root-project/root/pull/10714:11,energy efficiency,optim,optimizations,11,[RF] Speed optimizations relevant for RooAbsCachedPdf; More details in the commit descriptions. These changes speed up the stressRooFit test suite by about 5 %.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10714
https://github.com/root-project/root/pull/10714:11,performance,optimiz,optimizations,11,[RF] Speed optimizations relevant for RooAbsCachedPdf; More details in the commit descriptions. These changes speed up the stressRooFit test suite by about 5 %.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10714
https://github.com/root-project/root/pull/10714:136,safety,test,test,136,[RF] Speed optimizations relevant for RooAbsCachedPdf; More details in the commit descriptions. These changes speed up the stressRooFit test suite by about 5 %.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10714
https://github.com/root-project/root/pull/10714:136,testability,test,test,136,[RF] Speed optimizations relevant for RooAbsCachedPdf; More details in the commit descriptions. These changes speed up the stressRooFit test suite by about 5 %.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10714
https://github.com/root-project/root/pull/10716:312,interoperability,specif,specify,312,"[skip-ci][DF] Introduce `RDatasetSpec` and use entry range in `RLoopManager`; This PR aims to provide solution to https://github.com/root-project/root/issues/7702. * A new constructor of the `RLoopManager` is provided which accepts the new structure `RDatasetSpec`. * Within the `RDatasetSpec` it is possible to specify multiple tree and file names, hence the `RLoopManager` can internally construct `TChains`. * `RDatasetSpec` also handles friend chains/trees, e.g. horizontal concatenation of column. * `RDatasetSpec` accepts entry range argument. * Teach `RunTreeProcessorMT` efficiently handle the range, e.g. allow range in MT executions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10716
https://github.com/root-project/root/pull/10716:579,usability,efficien,efficiently,579,"[skip-ci][DF] Introduce `RDatasetSpec` and use entry range in `RLoopManager`; This PR aims to provide solution to https://github.com/root-project/root/issues/7702. * A new constructor of the `RLoopManager` is provided which accepts the new structure `RDatasetSpec`. * Within the `RDatasetSpec` it is possible to specify multiple tree and file names, hence the `RLoopManager` can internally construct `TChains`. * `RDatasetSpec` also handles friend chains/trees, e.g. horizontal concatenation of column. * `RDatasetSpec` accepts entry range argument. * Teach `RunTreeProcessorMT` efficiently handle the range, e.g. allow range in MT executions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10716
https://github.com/root-project/root/issues/10719:85,energy efficiency,Current,Currently,85,"[ntuple] Enable page vector writes; ### Explain what you would like to see improved. Currently, `RPageSink` provides the `CommitPage()` and `CommitSealedPage()` member functions. OTOH, `RPageSinkBuf` provides buffering (and parallel compression) of pages and commits them one-by-one during a call to `CommitCluster()`. In that case, pages are committed sequentially using the two aforementioned functions. However, some backends, e.g. object stores such as DAOS, would benefit of a single call to write a vector of pages, which can then potentially be written in parallel. ### Optional: share how it could be improved. Add a `Commit{,Sealed}Pages()` member function to `RPageSink`; provide a default implementation that sequentially calls `CommitPage()`, but can be overridden in a subclass to implement parallel writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10719
https://github.com/root-project/root/issues/10719:209,integrability,buffer,buffering,209,"[ntuple] Enable page vector writes; ### Explain what you would like to see improved. Currently, `RPageSink` provides the `CommitPage()` and `CommitSealedPage()` member functions. OTOH, `RPageSinkBuf` provides buffering (and parallel compression) of pages and commits them one-by-one during a call to `CommitCluster()`. In that case, pages are committed sequentially using the two aforementioned functions. However, some backends, e.g. object stores such as DAOS, would benefit of a single call to write a vector of pages, which can then potentially be written in parallel. ### Optional: share how it could be improved. Add a `Commit{,Sealed}Pages()` member function to `RPageSink`; provide a default implementation that sequentially calls `CommitPage()`, but can be overridden in a subclass to implement parallel writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10719
https://github.com/root-project/root/issues/10719:782,integrability,sub,subclass,782,"[ntuple] Enable page vector writes; ### Explain what you would like to see improved. Currently, `RPageSink` provides the `CommitPage()` and `CommitSealedPage()` member functions. OTOH, `RPageSinkBuf` provides buffering (and parallel compression) of pages and commits them one-by-one during a call to `CommitCluster()`. In that case, pages are committed sequentially using the two aforementioned functions. However, some backends, e.g. object stores such as DAOS, would benefit of a single call to write a vector of pages, which can then potentially be written in parallel. ### Optional: share how it could be improved. Add a `Commit{,Sealed}Pages()` member function to `RPageSink`; provide a default implementation that sequentially calls `CommitPage()`, but can be overridden in a subclass to implement parallel writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10719
https://github.com/root-project/root/issues/10719:587,interoperability,share,share,587,"[ntuple] Enable page vector writes; ### Explain what you would like to see improved. Currently, `RPageSink` provides the `CommitPage()` and `CommitSealedPage()` member functions. OTOH, `RPageSinkBuf` provides buffering (and parallel compression) of pages and commits them one-by-one during a call to `CommitCluster()`. In that case, pages are committed sequentially using the two aforementioned functions. However, some backends, e.g. object stores such as DAOS, would benefit of a single call to write a vector of pages, which can then potentially be written in parallel. ### Optional: share how it could be improved. Add a `Commit{,Sealed}Pages()` member function to `RPageSink`; provide a default implementation that sequentially calls `CommitPage()`, but can be overridden in a subclass to implement parallel writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10719
https://github.com/root-project/root/issues/10719:224,performance,parallel,parallel,224,"[ntuple] Enable page vector writes; ### Explain what you would like to see improved. Currently, `RPageSink` provides the `CommitPage()` and `CommitSealedPage()` member functions. OTOH, `RPageSinkBuf` provides buffering (and parallel compression) of pages and commits them one-by-one during a call to `CommitCluster()`. In that case, pages are committed sequentially using the two aforementioned functions. However, some backends, e.g. object stores such as DAOS, would benefit of a single call to write a vector of pages, which can then potentially be written in parallel. ### Optional: share how it could be improved. Add a `Commit{,Sealed}Pages()` member function to `RPageSink`; provide a default implementation that sequentially calls `CommitPage()`, but can be overridden in a subclass to implement parallel writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10719
https://github.com/root-project/root/issues/10719:563,performance,parallel,parallel,563,"[ntuple] Enable page vector writes; ### Explain what you would like to see improved. Currently, `RPageSink` provides the `CommitPage()` and `CommitSealedPage()` member functions. OTOH, `RPageSinkBuf` provides buffering (and parallel compression) of pages and commits them one-by-one during a call to `CommitCluster()`. In that case, pages are committed sequentially using the two aforementioned functions. However, some backends, e.g. object stores such as DAOS, would benefit of a single call to write a vector of pages, which can then potentially be written in parallel. ### Optional: share how it could be improved. Add a `Commit{,Sealed}Pages()` member function to `RPageSink`; provide a default implementation that sequentially calls `CommitPage()`, but can be overridden in a subclass to implement parallel writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10719
https://github.com/root-project/root/issues/10719:804,performance,parallel,parallel,804,"[ntuple] Enable page vector writes; ### Explain what you would like to see improved. Currently, `RPageSink` provides the `CommitPage()` and `CommitSealedPage()` member functions. OTOH, `RPageSinkBuf` provides buffering (and parallel compression) of pages and commits them one-by-one during a call to `CommitCluster()`. In that case, pages are committed sequentially using the two aforementioned functions. However, some backends, e.g. object stores such as DAOS, would benefit of a single call to write a vector of pages, which can then potentially be written in parallel. ### Optional: share how it could be improved. Add a `Commit{,Sealed}Pages()` member function to `RPageSink`; provide a default implementation that sequentially calls `CommitPage()`, but can be overridden in a subclass to implement parallel writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10719
https://github.com/root-project/root/pull/10720:308,availability,servic,service,308,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:316,availability,replic,replica,316,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1395,availability,redund,redundancy,1395,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:42,deployability,API,API,42,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:122,deployability,API,API,122,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:308,deployability,servic,service,308,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:439,deployability,Contain,Container,439,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:507,deployability,contain,container,507,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:660,deployability,contain,containers,660,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:735,deployability,contain,containers,735,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:982,deployability,contain,container,982,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1154,deployability,contain,containers,1154,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1326,deployability,contain,containers,1326,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1395,deployability,redundan,redundancy,1395,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1530,deployability,updat,updated,1530,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1580,deployability,updat,updated,1580,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1663,deployability,contain,containers,1663,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1726,deployability,updat,updated,1726,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:14,energy efficiency,Adapt,Adapt,14,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:14,integrability,Adapt,Adapt,14,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:42,integrability,API,API,42,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:122,integrability,API,API,122,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:308,integrability,servic,service,308,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:14,interoperability,Adapt,Adapt,14,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:42,interoperability,API,API,42,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:122,interoperability,API,API,122,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:345,interoperability,specif,specified,345,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:14,modifiability,Adapt,Adapt,14,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:308,modifiability,servic,service,308,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1230,modifiability,maintain,maintain,1230,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:20,performance,I/O,I/O,20,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1541,performance,lock,lockstep,1541,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1206,reliability,RPo,RPool,1206,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1395,reliability,redundan,redundancy,1395,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:106,safety,compl,comply,106,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:251,safety,test,test,251,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1230,safety,maintain,maintain,1230,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1249,safety,valid,valid,1249,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1395,safety,redund,redundancy,1395,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1530,safety,updat,updated,1530,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1569,safety,test,testing,1569,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1580,safety,updat,updated,1580,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1649,safety,test,test,1649,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1696,safety,test,tested,1696,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1726,safety,updat,updated,1726,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:106,security,compl,comply,106,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:697,security,hash,hashed,697,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:754,security,ident,identifiable,754,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1530,security,updat,updated,1530,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1541,security,lock,lockstep,1541,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1580,security,updat,updated,1580,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1726,security,updat,updated,1726,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:251,testability,test,test,251,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:470,testability,simpl,simplified,470,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1569,testability,test,testing,1569,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1649,testability,test,test,1649,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1696,testability,test,tested,1696,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:470,usability,simpl,simplified,470,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:629,usability,support,support,629,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:770,usability,user,user-provided,770,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:973,usability,support,supports,973,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1006,usability,user,user-supplied,1006,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1115,usability,user,user-supplied,1115,"[ntuple,daos] Adapt I/O backend to DAOSv2 API; # This Pull request:. Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:. - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument. - Container addresses follow the simplified pattern `daos://($pool)/($container)`. . - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern. - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. . - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. . - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively). - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. . - The `libdaos_mock` library is updated in lockstep. - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10721:12,deployability,fail,failing,12,Disable the failing df017_vecOpsHEP.py test on Windows; - Disable `df017_vecOpsHEP.py` on Windows 64 (df017_vecOpsHEP.C was already disabled).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10721
https://github.com/root-project/root/pull/10721:12,reliability,fail,failing,12,Disable the failing df017_vecOpsHEP.py test on Windows; - Disable `df017_vecOpsHEP.py` on Windows 64 (df017_vecOpsHEP.C was already disabled).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10721
https://github.com/root-project/root/pull/10721:39,safety,test,test,39,Disable the failing df017_vecOpsHEP.py test on Windows; - Disable `df017_vecOpsHEP.py` on Windows 64 (df017_vecOpsHEP.C was already disabled).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10721
https://github.com/root-project/root/pull/10721:39,testability,test,test,39,Disable the failing df017_vecOpsHEP.py test on Windows; - Disable `df017_vecOpsHEP.py` on Windows 64 (df017_vecOpsHEP.C was already disabled).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10721
https://github.com/root-project/root/issues/10722:581,availability,backup,backup,581,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:679,availability,error,error-in-thisroot-csh-during-installation,679,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:708,deployability,instal,installation,708,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:310,interoperability,share,share,310,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:131,modifiability,concern,concerning,131,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:679,performance,error,error-in-thisroot-csh-during-installation,679,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:581,reliability,backup,backup,581,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:581,safety,backup,backup,581,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:679,safety,error,error-in-thisroot-csh-during-installation,679,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:131,testability,concern,concerning,131,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:624,testability,context,context,624,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:105,usability,Guid,Guide,105,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:251,usability,document,documentation,251,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:265,usability,user,users-guide,265,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:384,usability,User,Users,384,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:390,usability,Guid,Guide,390,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:494,usability,clear,clear,494,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:679,usability,error,error-in-thisroot-csh-during-installation,679,"GettingStarted thisroot misleading; ### Explain what you would like to see improved. The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh. https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved. - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ"". - Or remove the part about export ROOTSYS... - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context. See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/pull/10723:161,interoperability,platform,platforms,161,[DF] Simplify EXPECT_EQ call; ...in an attempt to avoid bogus broken comparisons in the. RDFSnapshotArrays.SingleThread test case in dataframe_snapshot. on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/pull/10723:50,safety,avoid,avoid,50,[DF] Simplify EXPECT_EQ call; ...in an attempt to avoid bogus broken comparisons in the. RDFSnapshotArrays.SingleThread test case in dataframe_snapshot. on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/pull/10723:120,safety,test,test,120,[DF] Simplify EXPECT_EQ call; ...in an attempt to avoid bogus broken comparisons in the. RDFSnapshotArrays.SingleThread test case in dataframe_snapshot. on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/pull/10723:5,testability,Simpl,Simplify,5,[DF] Simplify EXPECT_EQ call; ...in an attempt to avoid bogus broken comparisons in the. RDFSnapshotArrays.SingleThread test case in dataframe_snapshot. on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/pull/10723:120,testability,test,test,120,[DF] Simplify EXPECT_EQ call; ...in an attempt to avoid bogus broken comparisons in the. RDFSnapshotArrays.SingleThread test case in dataframe_snapshot. on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/pull/10723:5,usability,Simpl,Simplify,5,[DF] Simplify EXPECT_EQ call; ...in an attempt to avoid bogus broken comparisons in the. RDFSnapshotArrays.SingleThread test case in dataframe_snapshot. on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/issues/10724:1393,availability,error,error,1393,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:336,deployability,build,build,336,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:598,deployability,build,build,598,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:892,deployability,build,build,892,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1212,deployability,build,build,1212,"nal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1419,deployability,build,build,1419,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1566,deployability,build,build,1566,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1701,deployability,Build,BuildScopeProxyDict,1701,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1771,deployability,build,build,1771,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1969,deployability,build,build,1969,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:2157,deployability,build,build,2157,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1235,energy efficiency,core,core,1235,"f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1442,energy efficiency,core,core,1442,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:307,integrability,wrap,wrapPoint,307,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1589,interoperability,bind,bindings,1589,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1794,interoperability,bind,bindings,1794,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1829,interoperability,Prox,ProxyWrappers,1829,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1992,interoperability,bind,bindings,1992,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:2027,interoperability,Prox,ProxyWrappers,2027,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:2180,interoperability,bind,bindings,2180,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1589,modifiability,bind,bindings,1589,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1794,modifiability,bind,bindings,1794,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1992,modifiability,bind,bindings,1992,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:2180,modifiability,bind,bindings,2180,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1393,performance,error,error,1393,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:243,safety,input,input,243,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:492,safety,input,input,492,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1393,safety,error,error,1393,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:243,usability,input,input,243,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:492,usability,input,input,492,"PyROOT / cppyy: potentially ineffcicient ""member offset"" on enumerators; Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```. #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:1393,usability,error,error,1393,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379. #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, . input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840. #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false). at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341. #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, . input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", . compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448. #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, . line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0). at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608. #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995. #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353. #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681. #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0). at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/pull/10725:647,availability,sLO,sLO,647,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:8,deployability,Updat,Update,8,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:57,deployability,Updat,Update,57,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:128,deployability,releas,releases,128,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:196,deployability,releas,releases,196,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:279,deployability,Updat,Update,279,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:450,deployability,build,build,450,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:564,deployability,build,build,564,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:614,deployability,build,builds,614,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:880,deployability,updat,updated,880,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:647,reliability,sLO,sLO,647,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:8,safety,Updat,Update,8,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:57,safety,Updat,Update,57,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:279,safety,Updat,Update,279,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:415,safety,test,tested,415,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:880,safety,updat,updated,880,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:8,security,Updat,Update,8,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:57,security,Updat,Update,57,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:279,security,Updat,Update,279,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:880,security,updat,updated,880,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:415,testability,test,tested,415,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:575,usability,effectiv,effectively,575,[cmake] Update XRootD to v5.4.3; # This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3). * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3. - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and . ```console. $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz. $ sha256sum v5.4.3.tar.gz . 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz. ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10726:110,availability,error,error,110,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:283,availability,error,error,283,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:320,deployability,updat,updated,320,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:34,modifiability,Pac,Packaging,34,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:178,modifiability,variab,variable,178,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:110,performance,error,error,110,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:283,performance,error,error,283,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:289,reliability,doe,does,289,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:110,safety,error,error,110,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:219,safety,test,tested,219,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:283,safety,error,error,283,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:320,safety,updat,updated,320,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:320,security,updat,updated,320,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:219,testability,test,tested,219,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:44,usability,Tool,Tool,44,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:110,usability,error,error,110,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:283,usability,error,error,283,"Added cmakeDir for Windows- Cling Packaging Tool (cpt.py); # This Pull request:. Fixes the cmakeDIr undefined error that occurs on Windows . ## Changes or fixes:. Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore. - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/issues/10727:99,availability,servic,service,99,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:430,availability,error,error,430,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:735,availability,servic,service,735,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:99,deployability,servic,service,99,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:490,deployability,Fail,Failed,490,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:508,deployability,modul,module,508,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:529,deployability,modul,modules,529,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:735,deployability,servic,service,735,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:867,deployability,version,version,867,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:7,energy efficiency,core,core,7,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:264,energy efficiency,core,core,264,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:537,energy efficiency,core,core,537,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:646,energy efficiency,core,core,646,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:672,energy efficiency,core,core,672,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:696,energy efficiency,core,core,696,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:1085,energy efficiency,load,load,1085,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:1208,energy efficiency,core,core,1208,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:99,integrability,servic,service,99,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:735,integrability,servic,service,735,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:867,integrability,version,version,867,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:515,interoperability,specif,specifier,515,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:99,modifiability,servic,service,99,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:508,modifiability,modul,module,508,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:529,modifiability,modul,modules,529,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:735,modifiability,servic,service,735,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:867,modifiability,version,version,867,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:430,performance,error,error,430,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:1057,performance,content,content,1057,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:1085,performance,load,load,1085,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:490,reliability,Fail,Failed,490,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:430,safety,error,error,430,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:508,safety,modul,module,508,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:529,safety,modul,modules,529,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:769,security,token,token,769,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:37,usability,stop,stopped,37,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:393,usability,stop,stopped,393,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:430,usability,error,error,430,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:832,usability,stop,stop,832,"JSRoot.core.js from root.cern server stopped working after migration to 7.1.0; Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```. Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script. at JSRoot.core.js:325:21. at JSRoot.core.js:3:77. at JSRoot.core.js:5:3. ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed? To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```. <!DOCTYPE html>. <html>. <head>. <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>. </head>. <body>. </body>. </html>. ```. Cheers,.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/pull/10728:253,deployability,updat,updated,253,"Added new starting point for cpt.py- Cling Packaging Tool [skip-ci]; # This Pull request: . Adds a new starting point for cpt.py. ## Changes or fixes:. Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10728:43,modifiability,Pac,Packaging,43,"Added new starting point for cpt.py- Cling Packaging Tool [skip-ci]; # This Pull request: . Adds a new starting point for cpt.py. ## Changes or fixes:. Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10728:222,safety,test,tested,222,"Added new starting point for cpt.py- Cling Packaging Tool [skip-ci]; # This Pull request: . Adds a new starting point for cpt.py. ## Changes or fixes:. Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10728:253,safety,updat,updated,253,"Added new starting point for cpt.py- Cling Packaging Tool [skip-ci]; # This Pull request: . Adds a new starting point for cpt.py. ## Changes or fixes:. Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10728:253,security,updat,updated,253,"Added new starting point for cpt.py- Cling Packaging Tool [skip-ci]; # This Pull request: . Adds a new starting point for cpt.py. ## Changes or fixes:. Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10728:222,testability,test,tested,222,"Added new starting point for cpt.py- Cling Packaging Tool [skip-ci]; # This Pull request: . Adds a new starting point for cpt.py. ## Changes or fixes:. Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10728:53,usability,Tool,Tool,53,"Added new starting point for cpt.py- Cling Packaging Tool [skip-ci]; # This Pull request: . Adds a new starting point for cpt.py. ## Changes or fixes:. Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10729:421,availability,down,down,421,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:352,deployability,patch,patch,352,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:426,deployability,version,version,426,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:426,integrability,version,version,426,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:426,modifiability,version,version,426,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:115,performance,content,contention,115,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:205,performance,performance issu,performance issues,205,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:352,safety,patch,patch,352,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:352,security,patch,patch,352,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:205,usability,perform,performance,205,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:341,usability,user,user,341,"[DF] Reset kMustCleanup bit on all branches in MT runs; Having that bit set on TBranches causes _a lot_ of thread. contention (~TBranch -> ~TNamed -> RecursiveRemove). Similarly for leaves. This mitigates performance issues with MT runs on certain samples. where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10731:5,energy efficiency,Adapt,Adapt,5,[RF] Adapt `RooWorkspace::factory` to take std::string directly; This is an improvement to make other RooFit code less verbose.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10731
https://github.com/root-project/root/pull/10731:5,integrability,Adapt,Adapt,5,[RF] Adapt `RooWorkspace::factory` to take std::string directly; This is an improvement to make other RooFit code less verbose.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10731
https://github.com/root-project/root/pull/10731:5,interoperability,Adapt,Adapt,5,[RF] Adapt `RooWorkspace::factory` to take std::string directly; This is an improvement to make other RooFit code less verbose.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10731
https://github.com/root-project/root/pull/10731:5,modifiability,Adapt,Adapt,5,[RF] Adapt `RooWorkspace::factory` to take std::string directly; This is an improvement to make other RooFit code less verbose.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10731
https://github.com/root-project/root/issues/10732:229,availability,error,error,229,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:967,availability,servic,service,967,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1459,availability,error,error,1459,":FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:6,deployability,build,build,6,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:12,deployability,fail,fails,12,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:967,deployability,servic,service,967,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:994,deployability,stack,stacktraceFromThread,994,"W build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2283,deployability,BUILD,BUILD,2283,"_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2544,deployability,BUILD,BUILD,2544,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2799,deployability,BUILD,BUILD,2799,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:3051,energy efficiency,alloc,allocator,3051,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:3177,energy efficiency,alloc,allocator,3177,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:967,integrability,servic,service,967,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:905,interoperability,plug,pluginFWCoreServicesPlugins,905,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1134,interoperability,plug,pluginFWCoreServicesPlugins,1134,"github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1331,interoperability,plug,pluginFWCoreServicesPlugins,1331,"ot/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1920,interoperability,BinD,BinData,1920,"sPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2187,interoperability,BinD,BinData,2187,"sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:967,modifiability,servic,service,967,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1473,modifiability,variab,variable,1473,"ps://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc89921",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1920,modifiability,BinD,BinData,1920,"sPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2187,modifiability,BinD,BinData,2187,"sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:229,performance,error,error,229,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1459,performance,error,error,1459,":FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1497,performance,memor,memory,1497,"cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:12,reliability,fail,fails,12,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:55,safety,test,testing,55,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:229,safety,error,error,229,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1459,safety,error,error,1459,":FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2264,safety,test,tests,2264,"11/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2270,safety,test,testBuildDir,2270,"CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2525,safety,test,tests,2525,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2531,safety,test,testBuildDir,2531,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2780,safety,test,tests,2780,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2786,safety,test,testBuildDir,2786,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1367,security,sign,signal,1367," root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1490,security,access,access,1490,"cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:55,testability,test,testing,55,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2264,testability,test,tests,2264,"11/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2270,testability,test,testBuildDir,2270,"CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2525,testability,test,tests,2525,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2531,testability,test,testBuildDir,2531,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2780,testability,test,tests,2780,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2786,testability,test,testBuildDir,2786,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984. #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305. #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:229,usability,error,error,229,"CMSSW build fails with root master 4c13caa0ac; we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1459,usability,error,error,1459,":FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1497,usability,memor,memory,1497,"cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]. ```. #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6. #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so. #4 <signal handler called>. #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65. #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55. #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560. #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/pull/10733:7,deployability,Updat,Update,7,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:138,deployability,Updat,Update,138,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:175,deployability,Updat,Update,175,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:85,interoperability,format,format,85,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:7,safety,Updat,Update,7,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:138,safety,Updat,Update,138,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:175,safety,Updat,Update,175,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:7,security,Updat,Update,7,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:138,security,Updat,Update,138,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:175,security,Updat,Update,175,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:26,usability,document,documentation,26,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:100,usability,document,documentation,100,[docu] Update THttpServer documentation; Create `http` group for related classes. Re-format doxygen documentation of all related classes. Update JSROOT.md and THttpServer.md. Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10734:43,deployability,releas,release,43,[PyROOT] Fixes for Python 3.11; A new beta release has been published this week:. https://docs.python.org/3.11/whatsnew/3.11.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10734
https://github.com/root-project/root/pull/10734:60,integrability,pub,published,60,[PyROOT] Fixes for Python 3.11; A new beta release has been published this week:. https://docs.python.org/3.11/whatsnew/3.11.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10734
https://github.com/root-project/root/pull/10736:224,availability,stead,steady,224,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:19,deployability,manag,management,19,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:91,deployability,manag,management,91,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:19,energy efficiency,manag,management,19,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:91,energy efficiency,manag,management,91,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:392,energy efficiency,model,models,392,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:12,integrability,buffer,buffer,12,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:33,integrability,Batch,BatchMode,33,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:53,integrability,queue,queues,53,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:84,integrability,buffer,buffer,84,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:120,integrability,Batch,BatchMode,120,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:141,integrability,queue,queues,141,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:332,integrability,event,events,332,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:383,modifiability,exten,extended,383,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:33,performance,Batch,BatchMode,33,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:53,performance,queue,queues,53,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:120,performance,Batch,BatchMode,120,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:141,performance,queue,queues,141,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:243,performance,memor,memory,243,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:19,safety,manag,management,19,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:91,safety,manag,management,91,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:213,safety,avoid,avoids,213,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:352,safety,test,test,352,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:392,security,model,models,392,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:352,testability,test,test,352,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:64,usability,clear,cleared,64,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:152,usability,clear,cleared,152,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:243,usability,memor,memory,243,"[RF] Change buffer management in BatchMode such that queues get cleared; Change the buffer management in the new RooFit BatchMode such that. queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get. when doing different fits in one go with different numbers of events,. such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10737:139,security,sign,signature,139,[Math] Fix template Fitter::SetFCN and FitFCN; This Pull request fixes the handling of the FCN function provided when using the template . signature of SetFCN and FitFCN. . This PR fixes #10732.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10737
https://github.com/root-project/root/pull/10738:232,deployability,instal,install,232,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:303,deployability,updat,updated,303,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:225,energy efficiency,core,cores,225,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:34,modifiability,Pac,Packaging,34,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:272,safety,test,tested,272,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:303,safety,updat,updated,303,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:303,security,updat,updated,303,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:272,testability,test,tested,272,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:44,usability,Tool,Tool,44,"Edited verbose output flag- Cling Packaging Tool (cpt.py) [skip-ci]; # This Pull request:. Fixes the verbose output flag for cpt.py. ## Changes or fixes:. Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/issues/10739:32,interoperability,prox,proxy,32,"[ntuple] Implement a collection proxy class; ### Explain what you would like to see improved. Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/issues/10739:129,interoperability,prox,proxies,129,"[ntuple] Implement a collection proxy class; ### Explain what you would like to see improved. Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/issues/10739:335,performance,time,time,335,"[ntuple] Implement a collection proxy class; ### Explain what you would like to see improved. Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/issues/10739:269,safety,avoid,avoid,269,"[ntuple] Implement a collection proxy class; ### Explain what you would like to see improved. Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/issues/10739:137,security,access,access,137,"[ntuple] Implement a collection proxy class; ### Explain what you would like to see improved. Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/issues/10739:395,usability,support,support,395,"[ntuple] Implement a collection proxy class; ### Explain what you would like to see improved. Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/pull/10740:506,availability,down,down,506,"[RF] Fix wrong deletion of arg in workspace when using `AddShapeFactor`; After iterating over the shape factors and filling a temporary vector of. `ParamHistFunc` pointers that all point to args in the proto workspace,. there was another iteration over this vector, importing the objects. again into the workspace that are already in it. The problem was that the original objects were then deleted, but since. they were already in the workspace the workspace contents were deleted,. which caused segfaults down the line. Needs to be backported to 6.26. Second commit unrelated to the bugfix, just some code modernizations. Closes #10687.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10740
https://github.com/root-project/root/pull/10740:459,performance,content,contents,459,"[RF] Fix wrong deletion of arg in workspace when using `AddShapeFactor`; After iterating over the shape factors and filling a temporary vector of. `ParamHistFunc` pointers that all point to args in the proto workspace,. there was another iteration over this vector, importing the objects. again into the workspace that are already in it. The problem was that the original objects were then deleted, but since. they were already in the workspace the workspace contents were deleted,. which caused segfaults down the line. Needs to be backported to 6.26. Second commit unrelated to the bugfix, just some code modernizations. Closes #10687.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10740
https://github.com/root-project/root/pull/10740:623,usability,Close,Closes,623,"[RF] Fix wrong deletion of arg in workspace when using `AddShapeFactor`; After iterating over the shape factors and filling a temporary vector of. `ParamHistFunc` pointers that all point to args in the proto workspace,. there was another iteration over this vector, importing the objects. again into the workspace that are already in it. The problem was that the original objects were then deleted, but since. they were already in the workspace the workspace contents were deleted,. which caused segfaults down the line. Needs to be backported to 6.26. Second commit unrelated to the bugfix, just some code modernizations. Closes #10687.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10740
https://github.com/root-project/root/pull/10741:250,deployability,STACK,STACKTRACE,250,[skip-ci][win64] Fix potential crash in clingwrapper on Windows 64; Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:. ```. *** Break *** abort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppOb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:369,deployability,build,build,369,[skip-ci][win64] Fix potential crash in clingwrapper on Windows 64; Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:. ```. *** Break *** abort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppOb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:567,deployability,build,build,567,[skip-ci][win64] Fix potential crash in clingwrapper on Windows 64; Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:. ```. *** Break *** abort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppOb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1127,deployability,build,build,1127,oodatahist-numpy` on Windows 64:. ```. *** Break *** abort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1228,deployability,build,build,1228,=. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1426,deployability,build,build,1426,ngs\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CP,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1708,deployability,build,build,1708, ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1867,deployability,build,build,1867,ME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\wi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2011,deployability,build,build,2011,andlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2189,deployability,build,build,2189,src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2337,deployability,build,build,2337,gwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_Eval,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2491,deployability,build,build,2491,c\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithNa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2633,deployability,build,build,2633,stk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2850,deployability,build,build,2850,alClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySequence_GetItem(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunct,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:3059,deployability,build,build,3059,oot\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySequence_GetItem(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_FastCallDict(). python38!PyObject_Call_Prepend(). python38!PyNumber_InPlaceMultiply(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:622,energy efficiency,core,core,622,[skip-ci][win64] Fix potential crash in clingwrapper on Windows 64; Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:. ```. *** Break *** abort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppOb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1182,energy efficiency,core,core,1182,bort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1481,energy efficiency,core,core,1481,rapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtecte,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:424,interoperability,bind,bindings,424,[skip-ci][win64] Fix potential crash in clingwrapper on Windows 64; Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:. ```. *** Break *** abort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppOb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1283,interoperability,bind,bindings,1283,=================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMetho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1763,interoperability,bind,bindings,1763,td_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1922,interoperability,bind,bindings,1922,(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1957,interoperability,Prox,ProxyWrappers,1957,vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `ano,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1991,interoperability,Bind,BindCppObject,1991,4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2066,interoperability,bind,bindings,2066, ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2244,interoperability,bind,bindings,2244,ndows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2392,interoperability,bind,bindings,2392,lerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). pyth,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2546,interoperability,bind,bindings,2546,). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_Eva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2688,interoperability,bind,bindings,2688,ispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_G,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2905,interoperability,bind,bindings,2905,\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySequence_GetItem(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_FastCallDict(). pyth,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:3114,interoperability,bind,bindings,3114,): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySequence_GetItem(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_FastCallDict(). python38!PyObject_Call_Prepend(). python38!PyNumber_InPlaceMultiply(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). pytho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:424,modifiability,bind,bindings,424,[skip-ci][win64] Fix potential crash in clingwrapper on Windows 64; Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:. ```. *** Break *** abort. ==========================================. =============== STACKTRACE ===============. ==========================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppOb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1283,modifiability,bind,bindings,1283,=================================. ================ Thread 0 ================. C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!raise(). ucrtbase!abort(). ucrtbase!terminate(). VCRUNTIME140!_std_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMetho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1763,modifiability,bind,bindings,1763,td_terminate(). VCRUNTIME140_1!?? VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_NLG_Return2(). VCRUNTIME140_1!_CxxFrameHandler4(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1922,modifiability,bind,bindings,1922,(). d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:1991,modifiability,Bind,BindCppObject,1991,4.cpp(86): __GSHandlerCheck_EH4(). ntdll!_chkstk(). ntdll!RtlUnwindEx(). ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2066,modifiability,bind,bindings,2066, ntdll!RtlUnwind(). VCRUNTIME140!_report_gsfailure(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2244,modifiability,bind,bindings,2244,ndows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2392,modifiability,bind,bindings,2392,lerImp::HandleException(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). pyth,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2546,modifiability,bind,bindings,2546,). ucrtbase!seh_filter_exe(). python!?? VCRUNTIME140!_C_specific_handler(). ntdll!_chkstk(). ntdll!RtlRaiseException(). ntdll!KiUserExceptionDispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_Eva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2688,modifiability,bind,bindings,2688,ispatcher(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_G,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:2905,modifiability,bind,bindings,2905,\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Executors.cxx(626): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySequence_GetItem(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_FastCallDict(). pyth,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:3114,modifiability,bind,bindings,3114,): CPyCppyy::`anonymous namespace'::InstanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySequence_GetItem(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_FastCallDict(). python38!PyObject_Call_Prepend(). python38!PyNumber_InPlaceMultiply(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). pytho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:3149,usability,Custom,CustomPyTypes,3149,stanceRefExecutor::Execute(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(74): CPyCppyy::CPPMethod::ExecuteFast(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(150): CPyCppyy::CPPMethod::ExecuteProtected(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPMethod.cxx(783): CPyCppyy::CPPMethod::Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CPPOverload.cxx(567): CPyCppyy::`anonymous namespace'::mp_call(). python38!PyObject_MakeTpCall(). python38!Py_gitversion(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\Pythonize.cxx(905): `anonymous namespace'::StlIterNext(). python38!PyLong_AsDouble(). python38!PyVectorcall_Call(). C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\CustomPyTypes.cxx(205): CPyCppyy::im_call(). python38!PyObject_MakeTpCall(). python38!PyNumber_Long(). python38!PyLong_FromLongLong(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyObject_GetBuffer(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySequence_GetItem(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_FastCallDict(). python38!PyObject_Call_Prepend(). python38!PyNumber_InPlaceMultiply(). python38!PyEval_EvalFrameDefault(). python38!PyEval_EvalCodeWithName(). python38!PyFunction_Vectorcall(). python38!PyObject_GetBuffer(). python38!PyVectorcall_Call(). python38!PySe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/issues/10742:1011,availability,degrad,degradation,1011,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:1159,energy efficiency,load,loads,1159,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:999,performance,perform,performance,999,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:1159,performance,load,loads,1159,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:330,reliability,doe,doesn,330,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:1011,reliability,degrad,degradation,1011,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:1462,safety,except,except,1462,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:999,usability,perform,performance,999,"`READ_WITHOUT_GLOBALREGISTRATION` has no effect on remote files; This. ```cpp. #include <TFile.h>. #include <TROOT.h>. void foo() {. // works. auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. // doesn't work. auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");. gROOT->GetListOfFiles()->Print();. }. ```. yields. ```. Processing foo.cpp... Collection name='Files', class='TList', size=0 // OK. Collection name='Files', class='TList', size=1 // KO. TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ. ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10743:1383,availability,operat,operator,1383,"e callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:488,energy efficiency,alloc,alloc,488,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:502,energy efficiency,core,core,502,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:673,energy efficiency,alloc,alloc,673,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:885,energy efficiency,alloc,alloc,885,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1111,energy efficiency,alloc,alloc,1111,"ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1479,energy efficiency,alloc,alloc,1479,"T1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1697,energy efficiency,alloc,alloc,1697,"indings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1929,energy efficiency,alloc,alloc,1929,"dings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:2153,energy efficiency,alloc,alloc,2153,"yroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3508,energy efficiency,optim,optimized,3508,"onymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3530,energy efficiency,optim,optimized,3530,"_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3557,energy efficiency,optim,optimized,3557,"0, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3755,energy efficiency,alloc,alloc,3755,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3769,energy efficiency,core,core,3769,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3858,energy efficiency,core,core,3858,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4121,energy efficiency,optim,optimized,4121,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4435,energy efficiency,optim,optimized,4435,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4457,energy efficiency,optim,optimized,4457,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4484,energy efficiency,optim,optimized,4484,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:131,integrability,Event,Events,131,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:557,integrability,Wrap,WrapperCall,557,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:557,interoperability,Wrapper,WrapperCall,557,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:699,interoperability,bind,bindings,699,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:929,interoperability,bind,bindings,929,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1146,interoperability,bind,bindings,1146,"spublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1514,interoperability,bind,bindings,1514,"OOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1742,interoperability,bind,bindings,1742,"r/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1974,interoperability,bind,bindings,1974,"src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:2198,interoperability,bind,bindings,2198,"0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:2421,interoperability,bind,bindings,2421,"840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:2602,interoperability,bind,bindings,2602,"Method::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:699,modifiability,bind,bindings,699,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:929,modifiability,bind,bindings,929,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1146,modifiability,bind,bindings,1146,"spublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1514,modifiability,bind,bindings,1514,"OOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1742,modifiability,bind,bindings,1742,"r/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:1974,modifiability,bind,bindings,1974,"src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:2198,modifiability,bind,bindings,2198,"0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:2421,modifiability,bind,bindings,2421,"840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:2602,modifiability,bind,bindings,2602,"Method::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149. #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execute (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728. #8 0x00007ffff70584dd in CPyCppyy::CPPMethod::Call (this=0x555558890a70, self=@0x7fffe4562840: 0x7ffff71f8640, args=0x7ffff7904070, kwds=0x0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783. #9 0x00007ffff705d4dd in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:62,performance,time,time,62,"PyROOT calls `TROOT::EndOfProcessCleanups()` twice, the first time too early; Given. ```python. import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778. #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829. #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68. #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410. #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74. #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3508,performance,optimiz,optimized,3508,"onymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3530,performance,optimiz,optimized,3530,"_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3557,performance,optimiz,optimized,3557,"0, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4121,performance,optimiz,optimized,4121,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4435,performance,optimiz,optimized,4435,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4457,performance,optimiz,optimized,4457,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4484,performance,optimiz,optimized,4484,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3939,usability,statu,status,3939,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4113,usability,statu,status,4113,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566. #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58. #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #19 0x0000555555555045 in _start (). ```. ```. #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206. #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90. #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113. #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143. #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74. #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392. #6 0x0000555555555045 in _start (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/pull/10744:219,deployability,configurat,configuration-option,219,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:309,deployability,updat,updated,309,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:77,energy efficiency,current,currently,77,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:219,integrability,configur,configuration-option,219,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:219,modifiability,configur,configuration-option,219,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:69,reliability,doe,doesn,69,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:279,safety,test,tested,279,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:309,safety,updat,updated,309,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:219,security,configur,configuration-option,219,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:309,security,updat,updated,309,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:279,testability,test,tested,279,[RF] Weighted data in HistFactory; # This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data. This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10745:39,availability,error,error,39,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:155,availability,error,error,155,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:365,deployability,updat,updated,365,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:303,modifiability,variab,variable,303,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:39,performance,error,error,39,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:155,performance,error,error,155,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:39,safety,error,error,39,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:155,safety,error,error,155,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:334,safety,test,tested,334,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:365,safety,updat,updated,365,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:365,security,updat,updated,365,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:334,testability,test,tested,334,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:39,usability,error,error,39,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:155,usability,error,error,155,"[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci]; # This Pull request: . Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: . Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally. - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10747:87,availability,avail,available,87,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:109,availability,cluster,cluster,109,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:660,availability,avail,available,660,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:743,availability,cluster,cluster,743,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:807,availability,cluster,cluster,807,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:870,availability,cluster,clusters,870,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:109,deployability,cluster,cluster,109,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:394,deployability,resourc,resources,394,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:501,deployability,resourc,resource,501,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:510,deployability,manag,manager,510,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:743,deployability,cluster,cluster,743,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:807,deployability,cluster,cluster,807,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:848,deployability,log,logic,848,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:870,deployability,cluster,clusters,870,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:912,deployability,resourc,resources,912,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:965,deployability,modul,module,965,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:1016,deployability,depend,dependency,1016,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:81,energy efficiency,core,cores,81,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:167,energy efficiency,schedul,scheduler,167,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:269,energy efficiency,schedul,scheduler,269,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:394,energy efficiency,resourc,resources,394,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:463,energy efficiency,core,cores,463,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:501,energy efficiency,resourc,resource,501,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:510,energy efficiency,manag,manager,510,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:640,energy efficiency,core,cores,640,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:912,energy efficiency,resourc,resources,912,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:388,integrability,batch,batch,388,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:896,integrability,batch,batch,896,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:1016,integrability,depend,dependency,1016,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:679,interoperability,specif,specification,679,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:0,modifiability,Refact,Refactor,0,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:965,modifiability,modul,module,965,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:1016,modifiability,depend,dependency,1016,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:0,performance,Refactor,Refactor,0,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:167,performance,schedul,scheduler,167,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:269,performance,schedul,scheduler,269,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:388,performance,batch,batch,388,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:394,performance,resourc,resources,394,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:501,performance,resourc,resource,501,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:896,performance,batch,batch,896,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:902,performance,computing resourc,computing resources,902,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:87,reliability,availab,available,87,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:660,reliability,availab,available,660,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:87,safety,avail,available,87,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:394,safety,resourc,resources,394,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:501,safety,resourc,resource,501,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:510,safety,manag,manager,510,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:660,safety,avail,available,660,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:848,safety,log,logic,848,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:912,safety,resourc,resources,912,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:965,safety,modul,module,965,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:1016,safety,depend,dependency,1016,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:87,security,availab,available,87,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:660,security,availab,available,660,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:848,security,log,logic,848,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:394,testability,resourc,resources,394,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:501,testability,resourc,resource,501,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:848,testability,log,logic,848,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:912,testability,resourc,resources,912,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:1016,testability,depend,dependency,1016,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:331,usability,user,user,331,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:716,usability,user,user,716,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:979,usability,effectiv,effectively,979,"Refactor optimize_npartitions and improve it for the Dask backend; The number of cores available in the Dask cluster object, i.e. those. that are already known to the scheduler, can be retrieved from the. client object through the `ncores()` method. In some cases, the scheduler has no information about the worker. nodes when the user first creates it. Most notably, when connecting. to batch resources with e.g. an HTCondorCluster. In this case, the. number of cores is actually known only when the resource manager. starts the requested jobs and this can happen much later in the. application. In these cases, we can infer the number of cores that. will be available from the specification that was passed by the user. to when creating the cluster object. This is stored in dictionary. attributes of the cluster itself. In order to dispatch the logic on the types of clusters that. connect to batch computing resources, we have to import also the. dask_jobqueue module, which effectively becomes another runtime. dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/issues/10748:24,deployability,fail,fails,24,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:125,deployability,version,version,125,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:139,deployability,Version,Version,139,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:125,integrability,version,version,125,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:139,integrability,Version,Version,139,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:350,integrability,batch,batch,350,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:125,modifiability,version,version,125,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:139,modifiability,Version,Version,139,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:350,performance,batch,batch,350,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:24,reliability,fail,fails,24,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10748:80,security,ssh,ssh,80,"`RBrowser` attempts and fails to launch `TBrowser` despite `--web=server:xxxx`; ssh'ed without `--Y` or `--X`. ```. $ root --version. ROOT Version: 6.26/04. Built for linuxx8664gcc on Jun 07 2022, 16:01:16. From tags/v6-26-04@v6-26-04. $ root -l --web=server:8899. root [0] TBrowser(). Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode. ```. is this a known bug / fixed already? a quick search didn't yield anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748
https://github.com/root-project/root/issues/10749:283,availability,error,errors,283,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:675,integrability,Filter,Filter,675,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:39,interoperability,mismatch,mismatches,39,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:283,performance,error,errors,283,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:283,safety,error,errors,283,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:781,safety,test,test,781,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:781,testability,test,test,781,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:283,usability,error,errors,283,"RNTupleDS should check for column type mismatches; This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleDS.hxx>. #include <ROOT/RDataFrame.hxx>. int main() {. {. auto m = ROOT::Experimental::RNTupleModel::Create();. auto x = m->MakeField<int>(""x"", 42);. auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",. ""f.root"");. r->Fill();. }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");. df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();. }. ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/pull/10750:65,testability,simpl,simpler,65,[DF] Prefer function overloading to SFINAE where possible; It is simpler to read and faster to compile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10750
https://github.com/root-project/root/pull/10750:5,usability,Prefer,Prefer,5,[DF] Prefer function overloading to SFINAE where possible; It is simpler to read and faster to compile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10750
https://github.com/root-project/root/pull/10750:65,usability,simpl,simpler,65,[DF] Prefer function overloading to SFINAE where possible; It is simpler to read and faster to compile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10750
https://github.com/root-project/root/pull/10752:122,availability,error,error,122,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:384,availability,error,error,384,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1089,availability,error,error,1089,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1462,availability,error,error,1462,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:59,deployability,fail,failing,59,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:70,deployability,build,build,70,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1161,integrability,sub,subBranches,1161,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:122,performance,error,error,122,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:384,performance,error,error,384,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1089,performance,error,error,1089,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1462,performance,error,error,1462,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:59,reliability,fail,failing,59,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:122,safety,error,error,122,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:384,safety,error,error,384,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1089,safety,error,error,1089,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1462,safety,error,error,1462,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:122,usability,error,error,122,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:260,usability,Clear,ClearMustCleanupBits,260,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:384,usability,error,error,384,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1089,usability,error,error,1089,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1462,usability,error,error,1462,"[tree] Add missing include in InternalTreeUtils.cxx; I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’. 238 | branch->ResetBit(kMustCleanup);. | ^~. In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,. from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’. 239 | TObjArray *subBranches = branch->GetListOfBranches();. | ^~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’. 17 | class TBranch;. | ^~~~~~~. /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’. 241 | TObjArray *leaves = branch->GetListOfLeaves();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10753:390,deployability,modul,module,390,"Ensure registration of atexit function is done only once; Before this commit, the following triggered two calls to. TROOT::EndOfProcessCleanups:. ```. python -c ""import ROOT; ROOT.TH1F"". ```. This happened because the TApplication constructor registered a. function that calls EndOfProcessCleanups with the C `atexit` and. PyROOT registered another similar function with the Python atexit. module in `__init__.py`. The Python atexit happened before the C. atexit. This commit introduces a static function in TApplication that. registers the call to EndOfProcessCleanups with the C `atexit` and. this is guaranteed to be run only once through the use of. std::call_once. This new function can be called both from PyROOT. and the TApplication constructor, to make sure it will be. registered by either of them. Furthermore, calling this from PyROOT means that now. EndOfProcessCleanups is always called at the very end of the. program, seemingly a more sensible choice. This PR fixes #10743 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10753
https://github.com/root-project/root/pull/10753:7,interoperability,registr,registration,7,"Ensure registration of atexit function is done only once; Before this commit, the following triggered two calls to. TROOT::EndOfProcessCleanups:. ```. python -c ""import ROOT; ROOT.TH1F"". ```. This happened because the TApplication constructor registered a. function that calls EndOfProcessCleanups with the C `atexit` and. PyROOT registered another similar function with the Python atexit. module in `__init__.py`. The Python atexit happened before the C. atexit. This commit introduces a static function in TApplication that. registers the call to EndOfProcessCleanups with the C `atexit` and. this is guaranteed to be run only once through the use of. std::call_once. This new function can be called both from PyROOT. and the TApplication constructor, to make sure it will be. registered by either of them. Furthermore, calling this from PyROOT means that now. EndOfProcessCleanups is always called at the very end of the. program, seemingly a more sensible choice. This PR fixes #10743 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10753
https://github.com/root-project/root/pull/10753:390,modifiability,modul,module,390,"Ensure registration of atexit function is done only once; Before this commit, the following triggered two calls to. TROOT::EndOfProcessCleanups:. ```. python -c ""import ROOT; ROOT.TH1F"". ```. This happened because the TApplication constructor registered a. function that calls EndOfProcessCleanups with the C `atexit` and. PyROOT registered another similar function with the Python atexit. module in `__init__.py`. The Python atexit happened before the C. atexit. This commit introduces a static function in TApplication that. registers the call to EndOfProcessCleanups with the C `atexit` and. this is guaranteed to be run only once through the use of. std::call_once. This new function can be called both from PyROOT. and the TApplication constructor, to make sure it will be. registered by either of them. Furthermore, calling this from PyROOT means that now. EndOfProcessCleanups is always called at the very end of the. program, seemingly a more sensible choice. This PR fixes #10743 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10753
https://github.com/root-project/root/pull/10753:390,safety,modul,module,390,"Ensure registration of atexit function is done only once; Before this commit, the following triggered two calls to. TROOT::EndOfProcessCleanups:. ```. python -c ""import ROOT; ROOT.TH1F"". ```. This happened because the TApplication constructor registered a. function that calls EndOfProcessCleanups with the C `atexit` and. PyROOT registered another similar function with the Python atexit. module in `__init__.py`. The Python atexit happened before the C. atexit. This commit introduces a static function in TApplication that. registers the call to EndOfProcessCleanups with the C `atexit` and. this is guaranteed to be run only once through the use of. std::call_once. This new function can be called both from PyROOT. and the TApplication constructor, to make sure it will be. registered by either of them. Furthermore, calling this from PyROOT means that now. EndOfProcessCleanups is always called at the very end of the. program, seemingly a more sensible choice. This PR fixes #10743 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10753
https://github.com/root-project/root/pull/10754:22,availability,fault,fault,22,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:87,availability,fault,fault,87,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:895,deployability,version,versions,895,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:22,energy efficiency,fault,fault,22,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:87,energy efficiency,fault,fault,87,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:969,energy efficiency,CPU,CPU,969,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:31,integrability,Batch,BatchMode,31,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:107,integrability,batch,batch,107,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:205,integrability,event,events,205,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:301,integrability,batch,batchcompute,301,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:339,integrability,batch,batches,339,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:374,integrability,batch,batches,374,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:724,integrability,Batch,BatchMode,724,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:895,integrability,version,versions,895,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:959,integrability,Batch,BatchMode,959,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:895,modifiability,version,versions,895,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:22,performance,fault,fault,22,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:31,performance,Batch,BatchMode,31,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:87,performance,fault,fault,87,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:107,performance,batch,batch,107,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:301,performance,batch,batchcompute,301,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:339,performance,batch,batches,339,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:374,performance,batch,batches,374,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:724,performance,Batch,BatchMode,724,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:959,performance,Batch,BatchMode,959,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:969,performance,CPU,CPU,969,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:22,reliability,fault,fault,22,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:87,reliability,fault,fault,87,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:22,safety,fault,fault,22,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:87,safety,fault,fault,87,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:578,safety,avoid,avoid,578,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:677,safety,test,tests,677,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:734,safety,test,tests,734,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:774,safety,avoid,avoid,774,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:839,safety,test,tests,839,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:982,safety,test,tests,982,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:437,security,access,access,437,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:677,testability,test,tests,677,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:734,testability,test,tests,734,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:839,testability,test,tests,839,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:982,testability,test,tests,982,"[RF] Fix segmentation fault in BatchMode with multithreading; There was a segmentation fault in the RooFit batch mode with. multithreading that happened when there were too many threads for the. number of events to be calculated. This caused a `std::size_t` underflow in this line:. ```C++. // roofit/batchcompute/src/RooBatchCompute.cxx. batches.setNEvents(nEvents - idx * batches.getNEvents());. ```. And then the computation tried to access entries that were out of. bounds. This commit adds one more line to reset the number of threads to how. many are needed. Like this we avoid the underflow and also spawing. unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,. such that the BatchMode tests are also run in the CI and we can avoid. problems like this in the future. Before, the interpreted tests were not declared as longtests, and the. compiled versions were not. This is now flipped, such that the compiled. BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10755:8,deployability,Updat,Update,8,[cmake] Update XRootD to v5.4.3; # This Pull request:. This PR is a backport of PR #10725 for `v6.26`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10755
https://github.com/root-project/root/pull/10755:8,safety,Updat,Update,8,[cmake] Update XRootD to v5.4.3; # This Pull request:. This PR is a backport of PR #10725 for `v6.26`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10755
https://github.com/root-project/root/pull/10755:8,security,Updat,Update,8,[cmake] Update XRootD to v5.4.3; # This Pull request:. This PR is a backport of PR #10725 for `v6.26`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10755
https://github.com/root-project/root/pull/10757:507,availability,consist,consistent,507,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:202,energy efficiency,optim,optimal,202,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:5,interoperability,Specif,Specify,5,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:111,interoperability,specif,specified,111,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:233,safety,reme,remember,233,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:25,usability,minim,minimizer,25,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:92,usability,minim,minimizer,92,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:408,usability,Minim,MinimizerOptions,408,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/pull/10757:507,usability,consist,consistent,507,"[RF] Specify the default minimizer type for the RooMinimizer in only one place; The default minimizer type was specified both in the RooMinimizer. itself, as well as in the `fitTo` methods. This is not optimal, as one. would have to remember to change it everywhere if the defaults are. changed in RooFit. In RooStats, there were a few places where the RooMinimizer defaults. were obtained via. `ROOT::Math::MinimizerOptions::DefaultMinimizerType` directly. This. is now done for all RooFit libraries to be consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10757
https://github.com/root-project/root/issues/10758:50,deployability,releas,release,50,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:129,deployability,patch,patch,129,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:135,deployability,releas,release,135,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:208,deployability,releas,releases,208,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:443,deployability,patch,patch,443,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:449,deployability,releas,release,449,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:669,deployability,patch,patch,669,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:675,deployability,releas,release,675,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:1506,deployability,patch,patches,1506,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:149,performance,time,time,149,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:129,safety,patch,patch,129,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:443,safety,patch,patch,443,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:669,safety,patch,patch,669,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:1506,safety,patch,patches,1506,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:129,security,patch,patch,129,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:443,security,patch,patch,443,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:669,security,patch,patch,669,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:1506,security,patch,patches,1506,"[RF] RooFit open issues and backports for 6.26.06 release; The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. 2. https://github.com/root-project/root/issues/10112. 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840. - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423. - [x] https://github.com/root-project/root/pull/10736. - [x] https://github.com/root-project/root/pull/10740. - [x] https://github.com/root-project/root/pull/10754. - [x] https://github.com/root-project/root/pull/10802. - [x] https://github.com/root-project/root/pull/10884. - [x] https://github.com/root-project/root/pull/10885. - [x] https://github.com/root-project/root/pull/10832. - [x] https://github.com/root-project/root/pull/10921. - [x] https://github.com/root-project/root/pull/10909. - [x] https://github.com/root-project/root/pull/9912. - [x] https://github.com/root-project/root/pull/10989. - [x] https://github.com/root-project/root/pull/11018. - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803. 2. https://github.com/root-project/root/pull/10986. 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10759:229,availability,error,errors,229,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:348,availability,down,download,348,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1348,availability,operat,operator,1348,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1486,availability,Operat,Operating,1486,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:14,deployability,fail,fails,14,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:135,deployability,fail,fails,135,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:182,deployability,contain,containing,182,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1054,deployability,version,version,1054,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1436,deployability,version,versions,1436,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1054,integrability,version,version,1054,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1436,integrability,version,versions,1436,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1702,integrability,sub,subdirectory,1702,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1054,modifiability,version,version,1054,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1436,modifiability,version,versions,1436,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:229,performance,error,errors,229,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:14,reliability,fail,fails,14,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:135,reliability,fail,fails,135,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:229,safety,error,errors,229,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1325,safety,test,test,1325,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1325,testability,test,test,1325,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1577,testability,context,context,1577,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:216,usability,behavi,behavior,216,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:229,usability,error,errors,229,"`root-config` fails if spaces are part of `ROOTSYS` path; - [x] Checked for duplicates. ### Describe the bug. The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior. No errors when there are spaces in the path. . ### To Reproduce. ```. mkdir foo\ bar. cd foo\ bar. wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz. source root/bin/thisroot.sh . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. ```. It also affects other output (as expected):. ```. $ root-config --incdir . /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me ./include. ```. and:. ```. $ root-config --version. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments. /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected. cannot read /home/me. ./include/RVersion.h. ```. ### Setup. 1. ROOT: versions: seen with 6.14, 6.26, likely others. 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context. While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/pull/10760:96,deployability,version,version,96,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:96,integrability,version,version,96,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:96,modifiability,version,version,96,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1264,safety,test,test,1264,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1269,safety,test,testTMath,1269,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1336,safety,test,tested,1336,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1264,testability,test,test,1264,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1269,testability,test,testTMath,1269,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1336,testability,test,tested,1336,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1159,usability,help,help,1159,"Add Relativistic Breit Wigner Function to TMath; # This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,. Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h. math/mathcore/src/TMath.cxx. math/mathcore/test/testTMath.cxx. tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10761:1911,availability,error,errors,1911,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2140,availability,error,errors,2140,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:868,energy efficiency,Measur,Measurement,868,"[RF] Don't ignore ParamSetting values in HistFactory Asimov dataset; HistFactory allows to set nuisance parameters to given values (and. possibly set them to constant) by using something like. ```. <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1082,energy efficiency,Measur,Measurement,1082,"to set nuisance parameters to given values (and. possibly set them to constant) by using something like. ```. <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1165,energy efficiency,measur,measurements,1165,"using something like. ```. <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1278,energy efficiency,Measur,Measurement,1278,"t created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalcula",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1298,energy efficiency,measur,measurements,1298,"orkspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1408,energy efficiency,measur,measurement,1408,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1545,energy efficiency,model,model,1545,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1688,energy efficiency,Draw,Draw,1688,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1727,energy efficiency,model,model,1727,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1861,energy efficiency,Draw,Draw,1861,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:729,interoperability,XML,XML,729,"[RF] Don't ignore ParamSetting values in HistFactory Asimov dataset; HistFactory allows to set nuisance parameters to given values (and. possibly set them to constant) by using something like. ```. <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1226,interoperability,xml,xml,1226,"e""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1528,interoperability,mismatch,mismatch,1528,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:104,modifiability,paramet,parameters,104,"[RF] Don't ignore ParamSetting values in HistFactory Asimov dataset; HistFactory allows to set nuisance parameters to given values (and. possibly set them to constant) by using something like. ```. <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1911,performance,error,errors,1911,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2140,performance,error,errors,2140,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:314,reliability,doe,does,314,"[RF] Don't ignore ParamSetting values in HistFactory Asimov dataset; HistFactory allows to set nuisance parameters to given values (and. possibly set them to constant) by using something like. ```. <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2158,reliability,Poisson,Poisson,2158,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1504,safety,Valid,Validation,1504,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1911,safety,error,errors,1911,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2140,safety,error,errors,2140,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2325,safety,compl,completely,2325,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:803,security,Modif,Modify,803,"[RF] Don't ignore ParamSetting values in HistFactory Asimov dataset; HistFactory allows to set nuisance parameters to given values (and. possibly set them to constant) by using something like. ```. <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>. ```. However the Asimov dataset created by `hist2workspace` does not respect. this setting, because in. [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1504,security,Validat,Validation,1504,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1545,security,model,model,1545,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1727,security,model,model,1727,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2325,security,compl,completely,2325,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1911,usability,error,errors,1911,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2140,usability,error,errors,2140,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2362,usability,Close,Closes,2362,"l](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109). the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++. using namespace RooStats;. using namespace HistFactory;. // Step 1: initialize the XML files. //. // Run prepareHistFactory before in this directory. //. // Modify the GaussExample in the generated example to be:. //. // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >. // <POI>SigXsecOverSM</POI>. // <ParamSetting Const=""True"">Lumi</ParamSetting>. // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>. // </Measurement>. // Step 2: Create the RooWorkspace. //. ConfigParser parser{};. auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample. Measurement& meas = measurements.front();. // Collect the histograms from their files,. meas.CollectHistograms();. // Now, do the measurement. std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data. //. auto x = ws->var(""obs_x_channel1"");. auto data = ws->data(""asimovData"");. auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match. TCanvas c1(""c1"");. RooPlot *xframe = x->frame();. data->plotOn(xframe);. pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is. // correct. That's because if the changed alpha_syst1 value is considered. // correctly, the asimov dataset has non-integer weights. In this case, the. // plotting uses SumW2 errors instead of Poisson erros, and the weights. // squared is not filled correctly in the Asimov data that is created by. // AsymptoticCalculator::GenerateAsimovData(). But this is a completely. // different issue. ```. Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
