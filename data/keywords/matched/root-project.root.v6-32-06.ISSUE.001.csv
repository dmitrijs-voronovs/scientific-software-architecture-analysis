id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/240:105,performance,optimiz,optimization,105,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:162,performance,cach,cache,162,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:530,performance,latenc,latency,530,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:550,performance,optimiz,optimization,550,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:669,performance,content,contents,669,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:833,performance,network,network,833,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:1103,performance,CPU,CPU,1103,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:1205,performance,optimiz,optimization,1205,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:138,reliability,fail,fails,138,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:212,security,access,accessed,212,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:421,security,sign,significant,421,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:833,security,network,network,833,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:251,testability,automat,automatically,251,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:530,usability,latenc,latency,530,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:611,usability,user,user,611,"Implement ""miss cache"" for TTreeCache; The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/242:85,modifiability,refact,refactoring,85,"Put definitions of R__unlikely / R__likely in a common place.; @pcanal - this is the refactoring you requested in #240 . Since it's now more visible, I also added a few small comments in `RConfig.h` about when these macros should be utilized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/242
https://github.com/root-project/root/pull/242:85,performance,refactor,refactoring,85,"Put definitions of R__unlikely / R__likely in a common place.; @pcanal - this is the refactoring you requested in #240 . Since it's now more visible, I also added a few small comments in `RConfig.h` about when these macros should be utilized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/242
https://github.com/root-project/root/pull/243:237,availability,avail,available,237,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:4,deployability,Updat,Updating,4,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:237,reliability,availab,available,237,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:4,safety,Updat,Updating,4,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:237,safety,avail,available,237,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:4,security,Updat,Updating,4,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:52,security,loss,loss,52,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:127,security,Loss,LossFunction,127,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:146,security,Loss,LossFunction,146,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:237,security,availab,available,237,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/243:71,testability,regress,regression,71,"Lf; Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/243
https://github.com/root-project/root/pull/244:1018,availability,degrad,degradation,1018,"/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNorm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:500,deployability,releas,release,500,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:892,deployability,releas,releases,892,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:975,deployability,version,version,975,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1466,deployability,patch,patching,1466," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1489,deployability,releas,release,1489," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1602,energy efficiency,current,current,1602," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1698,energy efficiency,cloud,cloud,1698," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1891,energy efficiency,cloud,cloud,1891," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:315,integrability,event,events,315,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:710,integrability,event,events,710,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:975,integrability,version,version,975,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:557,modifiability,variab,variables,557,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:975,modifiability,version,version,975,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1052,performance,perform,performance,1052," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1235,performance,perform,performance,1235," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1339,performance,perform,performance,1339," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1799,performance,perform,performance,1799," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1992,performance,perform,performance,1992," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1018,reliability,degrad,degradation,1018,"/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNorm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:32,safety,avoid,avoid,32,"Adding an option to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1452,safety,avoid,avoid,1452," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1466,safety,patch,patching,1466," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1006,security,sign,significant,1006,"tion to TMVA/BDT to avoid the normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1466,security,patch,patching,1466," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1052,usability,perform,performance,1052," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1092,usability,user,user,1092," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1235,usability,perform,performance,1235," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1339,usability,perform,performance,1339," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1610,usability,user,users,1610," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1799,usability,perform,performance,1799," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/244:1992,usability,perform,performance,1992," normalization of weights at boost procedure which was introduced in TMVA 4.1.2; We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies. We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs). We also separate events into four categories according to number of reconstructed vertices. (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently. In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to . all categories, because the average value of eg. b-tag output from each BDT. over full training samples reflects the fraction of b events in the training samples. (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.). We found this feature is not preserved in the latest releases (after TMVA 4.1.2). due to the normalization procedure introduced in that version. In result this causes significant degradation of our flavor tagging performance,. which was reported from a user using latest ROOT/TMVA. We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1. gives very similar performance to the ROOT 5.28/TMVA 4.1.0. Therefore, we need to switch off the normalization to keep the performance,. which is realized in an option implemented in this pull request. We hope this will be accepted, to avoid us from patching this to every release of ROOT. we use for studies using LCFIPlus flavor tagging feature. We set this option to non-default, so current users should not be affected by this change. ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png). B-tag performance with the SkipNormalization option. ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png). B-tag performance without the SkipNormalization option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/244
https://github.com/root-project/root/pull/245:142,energy efficiency,optim,optimisation,142,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/245:132,modifiability,paramet,parameter,132,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/245:6,safety,valid,validation,6,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/245:111,safety,valid,validation,111,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/245:258,safety,input,input,258,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/245:6,security,validat,validation,6,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/245:111,security,validat,validation,111,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/245:258,usability,input,input,258,Cross-validation and HyperParameterOptimisation in TMVA; Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/245
https://github.com/root-project/root/pull/246:24,availability,state,state,24,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:212,availability,state,state,212,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:239,availability,state,state,239,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:24,integrability,state,state,24,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:212,integrability,state,state,212,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:239,integrability,state,state,239,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:77,modifiability,refact,refactored,77,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:77,performance,refactor,refactored,77,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:65,safety,test,testing,65,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:50,security,sign,signals,50,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:88,security,sign,signal,88,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:160,security,sign,signals,160,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:278,security,sign,signals,278,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:324,security,sign,signal,324,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:65,testability,test,testing,65,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:254,testability,simpl,simply,254,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:254,usability,simpl,simply,254,"Properly reset terminal state for various obscure signals.; When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/248:17,availability,redund,redundant,17,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:106,availability,redund,redundant,106,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:17,deployability,redundan,redundant,17,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:106,deployability,redundan,redundant,106,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:17,reliability,redundan,redundant,17,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:106,reliability,redundan,redundant,106,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:17,safety,redund,redundant,17,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:106,safety,redund,redundant,106,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/248:125,usability,behavi,behaviour,125,"Remove wrong and redundant null pointer check; I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/248
https://github.com/root-project/root/pull/249:7,availability,redund,redundant,7,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:7,deployability,redundan,redundant,7,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:147,energy efficiency,core,core,147,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:343,integrability,repositor,repository,343,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:343,interoperability,repositor,repository,343,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:7,reliability,redundan,redundant,7,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:7,safety,redund,redundant,7,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:42,safety,Safe,SafeDelete,42,"Remove redundant null pointer check; See [SafeDelete definition](https://github.com/root-mirror/root/blob/edfa4cc5d8c02c626dbc3f0e9283f8fd9b28698b/core/base/inc/RConfig.h#L465). It seems that new static analyzer exhumes lots of ancient legacy. Do I (we) need to give attention to such cases? And it seems that there is no ""Issues"" tab in this repository. I have got some suspicious places and I'm not sure how to fix them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/252:96,energy efficiency,reduc,reduction,96,VarTransformHandler class; Adding new VarTransformHandler class for unsupervised dimensionality reduction methods. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/252
https://github.com/root-project/root/pull/253:18,availability,state,statements,18,Add missing break statements;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/253
https://github.com/root-project/root/pull/253:18,integrability,state,statements,18,Add missing break statements;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/253
https://github.com/root-project/root/pull/254:14,integrability,sub,subexpressions,14,Fix identical subexpressions in if condition;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/254
https://github.com/root-project/root/pull/254:4,security,ident,identical,4,Fix identical subexpressions in if condition;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/254
https://github.com/root-project/root/pull/255:27,safety,valid,validation,27,Fix typo in the tmva cross validation evaluation code; Fix typo in the tmva cross validation evaluation code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/255
https://github.com/root-project/root/pull/255:82,safety,valid,validation,82,Fix typo in the tmva cross validation evaluation code; Fix typo in the tmva cross validation evaluation code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/255
https://github.com/root-project/root/pull/255:27,security,validat,validation,27,Fix typo in the tmva cross validation evaluation code; Fix typo in the tmva cross validation evaluation code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/255
https://github.com/root-project/root/pull/255:82,security,validat,validation,82,Fix typo in the tmva cross validation evaluation code; Fix typo in the tmva cross validation evaluation code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/255
https://github.com/root-project/root/pull/257:50,energy efficiency,core,core,50,Replaced tbb by Roots own ThreadPool in the multi-core deep neural network implementation. ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/257
https://github.com/root-project/root/pull/257:67,performance,network,network,67,Replaced tbb by Roots own ThreadPool in the multi-core deep neural network implementation. ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/257
https://github.com/root-project/root/pull/257:67,security,network,network,67,Replaced tbb by Roots own ThreadPool in the multi-core deep neural network implementation. ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/257
https://github.com/root-project/root/pull/258:35,energy efficiency,optim,optimization,35,"More comments for 238, basket size optimization ; is this correct, or should it be the last commit only?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/258
https://github.com/root-project/root/pull/258:35,performance,optimiz,optimization,35,"More comments for 238, basket size optimization ; is this correct, or should it be the last commit only?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/258
https://github.com/root-project/root/pull/260:7,availability,redund,redundant,7,Remove redundant null pointer checks;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/260
https://github.com/root-project/root/pull/260:7,deployability,redundan,redundant,7,Remove redundant null pointer checks;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/260
https://github.com/root-project/root/pull/260:7,reliability,redundan,redundant,7,Remove redundant null pointer checks;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/260
https://github.com/root-project/root/pull/260:7,safety,redund,redundant,7,Remove redundant null pointer checks;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/260
https://github.com/root-project/root/pull/261:14,integrability,sub,subexpressions,14,Fix identical subexpressions in if condition;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/261
https://github.com/root-project/root/pull/261:4,security,ident,identical,4,Fix identical subexpressions in if condition;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/261
https://github.com/root-project/root/pull/262:11,energy efficiency,reduc,reduce,11,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:25,energy efficiency,alloc,allocation,25,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:50,energy efficiency,Reduc,Reduce,50,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:87,energy efficiency,alloc,allocated,87,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:121,interoperability,standard,standard,121,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:18,performance,memor,memory,18,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:71,performance,memor,memory,71,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:18,usability,memor,memory,18,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:39,usability,minim,minimizer,39,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:71,usability,memor,memory,71,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:104,usability,minim,minimizer,104,"TMVA, DNN, reduce memory allocation in minimizer; Reduce the amount of memory which is allocated by the minimizer in the standard DNN algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/264:14,integrability,sub,subexpressions,14,Fix identical subexpressions in if condition;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/264
https://github.com/root-project/root/pull/264:4,security,ident,identical,4,Fix identical subexpressions in if condition;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/264
https://github.com/root-project/root/pull/266:12,modifiability,paramet,parameter,12,Remove type parameter from destructor invocation; Me have never seen templated destructors before.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/266
https://github.com/root-project/root/pull/267:41,availability,operat,operator,41,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:67,availability,error,error,67,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:128,availability,error,error,128,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:186,availability,error,error,186,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:67,performance,error,error,67,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:128,performance,error,error,128,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:186,performance,error,error,186,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:67,safety,error,error,67,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:128,safety,error,error,128,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:186,safety,error,error,186,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:67,usability,error,error,67,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:128,usability,error,error,128,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/267:186,usability,error,error,186,Fix condition which was incorrect due to operator precedence; `int error = fSocket->Send(fMessage) <= 0` is evaluated as . `int error = (fSocket->Send(fMessage) <= 0)` and not as. `(int error = fSocket->Send(fMessage)) <= 0`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/267
https://github.com/root-project/root/pull/268:6,availability,error,error,6,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:119,availability,error,errors,119,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:6,performance,error,error,6,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:119,performance,error,errors,119,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:0,safety,avoid,avoid,0,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:6,safety,error,error,6,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:119,safety,error,errors,119,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:6,usability,error,error,6,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/268:119,usability,error,errors,119,avoid error when copy&pasting code from doxygen; copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/268
https://github.com/root-project/root/pull/270:48,availability,error,errors,48,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:0,deployability,Updat,Update,0,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:113,interoperability,share,share,113,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:38,modifiability,pac,packaging,38,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:48,performance,error,errors,48,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:0,safety,Updat,Update,0,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:32,safety,avoid,avoid,32,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:48,safety,error,errors,48,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:0,security,Updat,Update,0,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:48,usability,error,errors,48,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/270:145,usability,help,help,145,Update FSF address; In order to avoid packaging errors from rpmlint:. root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/270
https://github.com/root-project/root/pull/272:120,deployability,build,build,120,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/272:20,integrability,messag,message,20,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/272:83,integrability,messag,message,83,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/272:20,interoperability,messag,message,20,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/272:83,interoperability,messag,message,83,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/272:13,usability,statu,status,13,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/272:76,usability,statu,status,76,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/272:240,usability,user,user,240,"[TMVA] cmake status message if PyMVA is dropped due to missing numpy; Print status message during cmake if PyMVA is not build and python is activated but numpy is not found. Otherwise, a missing numpy drops PyMVA silently (and confuses the user).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/272
https://github.com/root-project/root/pull/273:34,safety,Test,Test,34,"[TMVA] Add bold headers for Train/Test/EvaluateAllMethods; Add bold header to TrainAllmethods, TestAllMethods and EvaluateAllMethods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/273
https://github.com/root-project/root/pull/273:95,safety,Test,TestAllMethods,95,"[TMVA] Add bold headers for Train/Test/EvaluateAllMethods; Add bold header to TrainAllmethods, TestAllMethods and EvaluateAllMethods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/273
https://github.com/root-project/root/pull/273:34,testability,Test,Test,34,"[TMVA] Add bold headers for Train/Test/EvaluateAllMethods; Add bold header to TrainAllmethods, TestAllMethods and EvaluateAllMethods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/273
https://github.com/root-project/root/pull/273:95,testability,Test,TestAllMethods,95,"[TMVA] Add bold headers for Train/Test/EvaluateAllMethods; Add bold header to TrainAllmethods, TestAllMethods and EvaluateAllMethods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/273
https://github.com/root-project/root/pull/274:60,energy efficiency,measur,measured,60,[TMVA] Move GetMvaValues call so that timing information is measured correctly; `GetMvaValues` call is not placed inside constructor of `Timer` and call of `ElapsedSeconds` and therefore the duration is not measured correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/274
https://github.com/root-project/root/pull/274:207,energy efficiency,measur,measured,207,[TMVA] Move GetMvaValues call so that timing information is measured correctly; `GetMvaValues` call is not placed inside constructor of `Timer` and call of `ElapsedSeconds` and therefore the duration is not measured correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/274
https://github.com/root-project/root/pull/274:137,performance,Time,Timer,137,[TMVA] Move GetMvaValues call so that timing information is measured correctly; `GetMvaValues` call is not placed inside constructor of `Timer` and call of `ElapsedSeconds` and therefore the duration is not measured correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/274
https://github.com/root-project/root/pull/276:111,interoperability,standard,standard,111,"TMVA, preparations for multiclass handling in DNN; - implementing preparations for multiclass handling in DNN (standard implementation). - minor changes to tmva tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/276
https://github.com/root-project/root/pull/277:1113,availability,state,state,1113,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:983,deployability,continu,continuation-style,983,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:1173,deployability,stack,stack,1173,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:372,energy efficiency,CPU,CPU,372,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:766,energy efficiency,Cpu,CpuTime,766,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:657,integrability,sub,sub-directory,657,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:1113,integrability,state,state,1113,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:1202,integrability,Event,Event,1202,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:212,modifiability,maintain,maintain,212,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:85,performance,parallel,parallelize,85,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:191,performance,parallel,parallel,191,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:295,performance,parallel,parallelize,295,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:372,performance,CPU,CPU,372,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:376,performance,time,time,376,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:766,performance,Cpu,CpuTime,766,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:898,performance,parallel,parallelize,898,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:1254,performance,parallel,parallelize,1254,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:212,safety,maintain,maintain,212,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:651,safety,test,test,651,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:1908,safety,compl,completed,1908,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:350,security,sign,significant,350,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:457,security,access,access,457,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:1908,security,compl,completed,1908,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:651,testability,test,test,651,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:1179,testability,trace,traces,1179,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:243,usability,interact,interacting,243,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:398,usability,satisfa,satisfactory,398,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:583,usability,hint,hints,583,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:866,usability,efficien,efficiency,866,"First-pass IMT implementation of FlushBaskets.; This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this? Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```. RealTime=76.340815 seconds, CpuTime=131.770000 seconds. ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```. #11 0x00007f00743e80fe in R__zipMultipleAlgorithm . #12 0x00007f00729aec25 in TBasket::WriteBuffer . #13 0x00007f00729b53f3 in TBranch::WriteBasket . #14 0x00007f00729b5c95 in TBranch::Fill . #15 0x00007f00729cb630 in TBranchElement::Fill. #16 0x00007f00729cb418 in TBranchElement::Fill . #17 0x00007f00729cb418 in TBranchElement::Fill . #18 0x00007f0072a063f3 in TTree::Fill. ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/278:198,availability,error,error,198,[TMVA] PyRunString helper function to call python code from string; Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:198,performance,error,error,198,[TMVA] PyRunString helper function to call python code from string; Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:198,safety,error,error,198,[TMVA] PyRunString helper function to call python code from string; Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:19,usability,help,helper,19,[TMVA] PyRunString helper function to call python code from string; Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:76,usability,help,helper,76,[TMVA] PyRunString helper function to call python code from string; Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:198,usability,error,error,198,[TMVA] PyRunString helper function to call python code from string; Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/279:81,availability,error,error,81,"TThreadExecutor: Moved tbb headers to the source file.; Fixed one missing header error, limited parallel reduction to floats and doubles ¯_(ツ)_/¯.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/279
https://github.com/root-project/root/pull/279:105,energy efficiency,reduc,reduction,105,"TThreadExecutor: Moved tbb headers to the source file.; Fixed one missing header error, limited parallel reduction to floats and doubles ¯_(ツ)_/¯.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/279
https://github.com/root-project/root/pull/279:81,performance,error,error,81,"TThreadExecutor: Moved tbb headers to the source file.; Fixed one missing header error, limited parallel reduction to floats and doubles ¯_(ツ)_/¯.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/279
https://github.com/root-project/root/pull/279:96,performance,parallel,parallel,96,"TThreadExecutor: Moved tbb headers to the source file.; Fixed one missing header error, limited parallel reduction to floats and doubles ¯_(ツ)_/¯.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/279
https://github.com/root-project/root/pull/279:81,safety,error,error,81,"TThreadExecutor: Moved tbb headers to the source file.; Fixed one missing header error, limited parallel reduction to floats and doubles ¯_(ツ)_/¯.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/279
https://github.com/root-project/root/pull/279:81,usability,error,error,81,"TThreadExecutor: Moved tbb headers to the source file.; Fixed one missing header error, limited parallel reduction to floats and doubles ¯_(ツ)_/¯.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/279
https://github.com/root-project/root/pull/280:49,interoperability,specif,specific,49,[TMVA] Add PyMVA method PyKeras and enable PyMVA specific unit-tests; Add PyMVA method PyKeras and enable PyMVA specific unit-tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:112,interoperability,specif,specific,112,[TMVA] Add PyMVA method PyKeras and enable PyMVA specific unit-tests; Add PyMVA method PyKeras and enable PyMVA specific unit-tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:63,safety,test,tests,63,[TMVA] Add PyMVA method PyKeras and enable PyMVA specific unit-tests; Add PyMVA method PyKeras and enable PyMVA specific unit-tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:126,safety,test,tests,126,[TMVA] Add PyMVA method PyKeras and enable PyMVA specific unit-tests; Add PyMVA method PyKeras and enable PyMVA specific unit-tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:58,testability,unit,unit-tests,58,[TMVA] Add PyMVA method PyKeras and enable PyMVA specific unit-tests; Add PyMVA method PyKeras and enable PyMVA specific unit-tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:121,testability,unit,unit-tests,121,[TMVA] Add PyMVA method PyKeras and enable PyMVA specific unit-tests; Add PyMVA method PyKeras and enable PyMVA specific unit-tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/281:38,availability,error,error-handling,38,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:124,availability,error,error-handling,124,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:405,energy efficiency,current,currently,405,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:38,performance,error,error-handling,38,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:124,performance,error,error-handling,124,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:22,safety,valid,validation,22,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:38,safety,error,error-handling,38,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:124,safety,error,error-handling,124,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:230,safety,prevent,prevents,230,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:22,security,validat,validation,22,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:230,security,preven,prevents,230,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:38,usability,error,error-handling,38,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:124,usability,error,error-handling,124,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:279,usability,user,users,279,"[TMVA] Clean-up cross-validation, add error-handling and example; Changes:. - Clean-up coding style and add comments. - Add error-handling for the cases. - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users). - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/282:234,deployability,log,log,234,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:92,energy efficiency,CPU,CPU,92,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:92,performance,CPU,CPU,92,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:210,performance,perform,performance,210,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:234,safety,log,log,234,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:234,security,log,log,234,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:307,security,loss,loss,307,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:234,testability,log,log,234,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:71,usability,support,support,71,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:125,usability,support,support,125,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:210,usability,perform,performance,210,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/282:248,usability,interact,interactive,248,DNN Multi-class implementation and smaller fixes.; - Added multi-class support for CUDA and CPU backend. - Added multi-class support to MethodDNN. - Switched floating point types to single precision for better performance. - Disabled log output in interactive mode. - Removed regularization contribution in loss computation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/282
https://github.com/root-project/root/pull/283:77,deployability,version,version,77,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:101,deployability,build,build,101,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:146,deployability,depend,dependent,146,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:77,integrability,version,version,77,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:146,integrability,depend,dependent,146,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:77,modifiability,version,version,77,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:146,modifiability,depend,dependent,146,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:93,reliability,doe,doesn,93,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:146,safety,depend,dependent,146,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:146,testability,depend,dependent,146,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:64,usability,minim,minimum,64,[TMVA/CMake] Fix CMake setup for DNN CUDA implementation; - Set minimum CUDA version to 8.0 (doesn't build otherwise). - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/284:18,safety,permiss,permissions,18,Remove executable permissions from header files;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/284
https://github.com/root-project/root/pull/285:37,integrability,event,events,37,[TMVA] Enable weights for validation events in PyKeras method; More a bugfix than a new feature. Missed it during first implementation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/285
https://github.com/root-project/root/pull/285:26,safety,valid,validation,26,[TMVA] Enable weights for validation events in PyKeras method; More a bugfix than a new feature. Missed it during first implementation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/285
https://github.com/root-project/root/pull/285:26,security,validat,validation,26,[TMVA] Enable weights for validation events in PyKeras method; More a bugfix than a new feature. Missed it during first implementation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/285
https://github.com/root-project/root/pull/286:27,energy efficiency,optim,optimisation,27,[TMVA] Add fix for the BDT optimisation and also for the Variable importance. Fix bug for CV datasets in DataLoader; Allow the training to be done multiple times for the BDT by setting a flag to false. Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/286
https://github.com/root-project/root/pull/286:57,modifiability,Variab,Variable,57,[TMVA] Add fix for the BDT optimisation and also for the Variable importance. Fix bug for CV datasets in DataLoader; Allow the training to be done multiple times for the BDT by setting a flag to false. Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/286
https://github.com/root-project/root/pull/286:227,modifiability,Variab,VariableImportance,227,[TMVA] Add fix for the BDT optimisation and also for the Variable importance. Fix bug for CV datasets in DataLoader; Allow the training to be done multiple times for the BDT by setting a flag to false. Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/286
https://github.com/root-project/root/pull/286:156,performance,time,times,156,[TMVA] Add fix for the BDT optimisation and also for the Variable importance. Fix bug for CV datasets in DataLoader; Allow the training to be done multiple times for the BDT by setting a flag to false. Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/286
https://github.com/root-project/root/pull/286:202,usability,Clear,Clear,202,[TMVA] Add fix for the BDT optimisation and also for the Variable importance. Fix bug for CV datasets in DataLoader; Allow the training to be done multiple times for the BDT by setting a flag to false. Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/286
https://github.com/root-project/root/pull/290:241,deployability,patch,patch,241,"Make TTreeReaderValue moveable; While the `TTreeReaderValue` is indeed not copyable for good reason, I don't see why it shouldn't be moveable (deleting the copy constructor appears to implicitly delete the move constructor). With this small patch, the following works:. ```. TFile *tf = TFile::Open(""somefile.root"");. TTreeReader reader(""T"", tf);. auto foo = std::make_tuple( TTreeReaderValue<int>(reader, ""branchname"") );. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/290
https://github.com/root-project/root/pull/290:241,safety,patch,patch,241,"Make TTreeReaderValue moveable; While the `TTreeReaderValue` is indeed not copyable for good reason, I don't see why it shouldn't be moveable (deleting the copy constructor appears to implicitly delete the move constructor). With this small patch, the following works:. ```. TFile *tf = TFile::Open(""somefile.root"");. TTreeReader reader(""T"", tf);. auto foo = std::make_tuple( TTreeReaderValue<int>(reader, ""branchname"") );. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/290
https://github.com/root-project/root/pull/290:241,security,patch,patch,241,"Make TTreeReaderValue moveable; While the `TTreeReaderValue` is indeed not copyable for good reason, I don't see why it shouldn't be moveable (deleting the copy constructor appears to implicitly delete the move constructor). With this small patch, the following works:. ```. TFile *tf = TFile::Open(""somefile.root"");. TTreeReader reader(""T"", tf);. auto foo = std::make_tuple( TTreeReaderValue<int>(reader, ""branchname"") );. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/290
https://github.com/root-project/root/pull/291:115,energy efficiency,Reduc,Reduction,115,"Fix multiple issues in Executors; - TThreadExecutor's task pool initializer is now a unique_ptr. - Removed useless Reduction resolver. - Change the way Reduce was inherited + overloaded. It was working due. to a GCC bug. See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308. (thanks, Axel). - Chunked Map is now protected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/291
https://github.com/root-project/root/pull/291:152,energy efficiency,Reduc,Reduce,152,"Fix multiple issues in Executors; - TThreadExecutor's task pool initializer is now a unique_ptr. - Removed useless Reduction resolver. - Change the way Reduce was inherited + overloaded. It was working due. to a GCC bug. See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308. (thanks, Axel). - Chunked Map is now protected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/291
https://github.com/root-project/root/pull/291:163,modifiability,inherit,inherited,163,"Fix multiple issues in Executors; - TThreadExecutor's task pool initializer is now a unique_ptr. - Removed useless Reduction resolver. - Change the way Reduce was inherited + overloaded. It was working due. to a GCC bug. See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308. (thanks, Axel). - Chunked Map is now protected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/291
https://github.com/root-project/root/pull/292:16,energy efficiency,reduc,reduction,16,Fix T*::Merge() reduction method in TExecutor; Fix TList initializing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/292
https://github.com/root-project/root/pull/293:44,deployability,version,versions,44,Make TDavixFile compatible with older davix versions again;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/293
https://github.com/root-project/root/pull/293:44,integrability,version,versions,44,Make TDavixFile compatible with older davix versions again;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/293
https://github.com/root-project/root/pull/293:16,interoperability,compatib,compatible,16,Make TDavixFile compatible with older davix versions again;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/293
https://github.com/root-project/root/pull/293:44,modifiability,version,versions,44,Make TDavixFile compatible with older davix versions again;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/293
https://github.com/root-project/root/pull/294:40,energy efficiency,Reduc,Reduce,40,Fix TList initialization and Merge() in Reduce;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/294
https://github.com/root-project/root/pull/295:35,integrability,pub,public,35,Move TDavixFileInternal out of the public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/295
https://github.com/root-project/root/pull/295:42,integrability,interfac,interface,42,Move TDavixFileInternal out of the public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/295
https://github.com/root-project/root/pull/295:42,interoperability,interfac,interface,42,Move TDavixFileInternal out of the public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/295
https://github.com/root-project/root/pull/295:42,modifiability,interfac,interface,42,Move TDavixFileInternal out of the public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/295
https://github.com/root-project/root/pull/296:104,modifiability,paramet,parameter,104,Fix for GCC compilation until bug is resolved.; Base class (TExecutor) functions with the same name and parameter list. than existing ones should not be introduced by the using-declaration. in derived classes (TThreadExecutor/TProcessExecutor). See the bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/296
https://github.com/root-project/root/pull/297:32,availability,state,statements,32,[ROOT-8459] Fix JupyROOT import statements;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/297
https://github.com/root-project/root/pull/297:32,integrability,state,statements,32,[ROOT-8459] Fix JupyROOT import statements;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/297
https://github.com/root-project/root/pull/299:116,deployability,INSTAL,INSTALL,116,"Excluded headers for CUDA and BLAS backends if not requested by user.; As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS. directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:223,deployability,depend,dependent,223,"Excluded headers for CUDA and BLAS backends if not requested by user.; As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS. directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:223,integrability,depend,dependent,223,"Excluded headers for CUDA and BLAS backends if not requested by user.; As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS. directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:223,modifiability,depend,dependent,223,"Excluded headers for CUDA and BLAS backends if not requested by user.; As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS. directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:223,safety,depend,dependent,223,"Excluded headers for CUDA and BLAS backends if not requested by user.; As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS. directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:223,testability,depend,dependent,223,"Excluded headers for CUDA and BLAS backends if not requested by user.; As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS. directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:64,usability,user,user,64,"Excluded headers for CUDA and BLAS backends if not requested by user.; As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS. directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/302:125,energy efficiency,Reduc,Reduction,125,Fix issues in Executors; - TThreadExecutor's task pool initializer was being leaked. Now is an unique_ptr. - Removed useless Reduction resolver. - Base class (TExecutor) functions with the same name and parameter list. than existing ones should not be introduced by the using-declaration. in derived classes (TThreadExecutor/TProcessExecutor). See the bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/302
https://github.com/root-project/root/pull/302:203,modifiability,paramet,parameter,203,Fix issues in Executors; - TThreadExecutor's task pool initializer was being leaked. Now is an unique_ptr. - Removed useless Reduction resolver. - Base class (TExecutor) functions with the same name and parameter list. than existing ones should not be introduced by the using-declaration. in derived classes (TThreadExecutor/TProcessExecutor). See the bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/302
https://github.com/root-project/root/pull/303:338,availability,error,error,338,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:151,deployability,integr,integration,151,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:183,deployability,integr,integration,183,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:151,integrability,integr,integration,151,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:183,integrability,integr,integration,183,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:151,interoperability,integr,integration,151,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:183,interoperability,integr,integration,183,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:7,modifiability,Refact,Refactor,7,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:96,modifiability,Refact,Refactor,96,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:151,modifiability,integr,integration,151,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:183,modifiability,integr,integration,183,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:7,performance,Refactor,Refactor,7,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:96,performance,Refactor,Refactor,96,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:338,performance,error,error,338,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:151,reliability,integr,integration,151,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:183,reliability,integr,integration,183,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:63,safety,test,tests,63,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:248,safety,test,test,248,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:338,safety,error,error,338,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:413,safety,test,test,413,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:525,safety,test,test,525,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:151,security,integr,integration,151,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:183,security,integr,integration,183,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:58,testability,unit,unit-tests,58,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:151,testability,integr,integration,151,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:183,testability,integr,integration,183,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:243,testability,unit,unit-test,243,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:413,testability,test,test,413,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:520,testability,unit,unit-test,520,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:253,usability,usab,usable,253,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:338,usability,error,error,338,"[TMVA] Refactor PyRandomForest method and add multi-class unit-tests; This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration). - Enable multi-class classification. - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification. - Add return error codes to `PyMethodBase::Unserialize()` function. - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/304:44,availability,error,error,44,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:168,availability,error,error,168,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:199,availability,error,error,199,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:337,deployability,patch,patch,337,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:50,integrability,messag,message,50,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:174,integrability,messag,message,174,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:50,interoperability,messag,message,50,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:174,interoperability,messag,message,174,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:44,performance,error,error,44,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:168,performance,error,error,168,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:199,performance,error,error,199,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:274,reliability,doe,does,274,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:44,safety,error,error,44,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:168,safety,error,error,168,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:199,safety,error,error,199,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:337,safety,patch,patch,337,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:337,security,patch,patch,337,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:44,usability,error,error,44,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:168,usability,error,error,168,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/304:199,usability,error,error,199,"Change ""TTreeReader::Reset"" to ""Restart"" in error message; As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist. Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/304
https://github.com/root-project/root/pull/305:202,integrability,event,events,202,"[TMVA] Fix multiclass classification with two classes in method DNN; It's a corner-case, but still it took me some time to figure this out. The behaviour before was returning a probability of 1 for all events (because the softmax has only one output, which gets the full probability of 1).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/305
https://github.com/root-project/root/pull/305:115,performance,time,time,115,"[TMVA] Fix multiclass classification with two classes in method DNN; It's a corner-case, but still it took me some time to figure this out. The behaviour before was returning a probability of 1 for all events (because the softmax has only one output, which gets the full probability of 1).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/305
https://github.com/root-project/root/pull/305:144,usability,behavi,behaviour,144,"[TMVA] Fix multiclass classification with two classes in method DNN; It's a corner-case, but still it took me some time to figure this out. The behaviour before was returning a probability of 1 for all events (because the softmax has only one output, which gets the full probability of 1).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/305
https://github.com/root-project/root/pull/306:31,energy efficiency,CPU,CPU,31,[TMVA] Fix print output of DNN CPU impl; Compare to the same lines in `TrainGPU()` (line 806). It's only a typo!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/306
https://github.com/root-project/root/pull/306:31,performance,CPU,CPU,31,[TMVA] Fix print output of DNN CPU impl; Compare to the same lines in `TrainGPU()` (line 806). It's only a typo!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/306
https://github.com/root-project/root/pull/308:495,deployability,version,version,495,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/308:62,energy efficiency,current,current,62,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/308:163,energy efficiency,current,currently,163,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/308:98,integrability,interfac,interface,98,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/308:495,integrability,version,version,495,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/308:98,interoperability,interfac,interface,98,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/308:98,modifiability,interfac,interface,98,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/308:495,modifiability,version,version,495,"[TMVA] Introduce private local python namespace in PyMVA; The current implementation of the PyMVA interface in `PyMethodBase` has following problem:. We are using currently a global local python namespace for **all** instances of **all** PyMVA method. So you can easily interfere with an other method running in the same factory. Most likely, this happens if you book two instances of the same method in one factory. We can solve this by introducing **private** local python namespaces. In this version, we are sharing the global namespaces with all instances of a PyMVA method (and ofc the running python instance), but create a seperate local namespace for each instance. So you can do whatever you want in your method/instance and you don't interfere with others.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/308
https://github.com/root-project/root/pull/309:124,deployability,fail,fail,124,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:66,interoperability,platform,platforms,66,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:43,modifiability,variab,variable,43,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:124,reliability,fail,fail,124,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:21,safety,avoid,avoid,21,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:119,safety,test,test,119,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:201,safety,test,test,201,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:119,testability,test,test,119,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/309:201,testability,test,test,201,Undefine HZ macro to avoid name clash with variable name; On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/309
https://github.com/root-project/root/pull/310:28,availability,error,errors,28,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:172,availability,error,errors,172,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:137,deployability,fail,fails,137,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:28,performance,error,errors,28,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:172,performance,error,errors,172,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:137,reliability,fail,fails,137,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:28,safety,error,errors,28,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:172,safety,error,errors,172,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:28,usability,error,errors,28,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:42,usability,document,documentation,42,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:109,usability,document,documentation,109,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/310:172,usability,error,errors,172,Fix global name not defined errors during documentation generation; When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:. https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/310
https://github.com/root-project/root/pull/311:40,reliability,doe,does,40,Use full paths to images; This tutorial does not use full paths to the images fore.xpm and mditestbg.xpm. These images are therefore not found during execution. The image on the documentation page therefore does not look as expected:. https://root.cern/doc/master/rose__image_8C.html. E.g. the text in the lower right corner of the images is barely readable due to this problem. This pull request addresses this issue. Note: I have used TROOT::GetTutorialDir() instead of TROOT::GetTutorialsDir() since I apply this change after appling the changes in pull request #130. If you decide to fix this issue first you need to put the s back in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/311
https://github.com/root-project/root/pull/311:207,reliability,doe,does,207,Use full paths to images; This tutorial does not use full paths to the images fore.xpm and mditestbg.xpm. These images are therefore not found during execution. The image on the documentation page therefore does not look as expected:. https://root.cern/doc/master/rose__image_8C.html. E.g. the text in the lower right corner of the images is barely readable due to this problem. This pull request addresses this issue. Note: I have used TROOT::GetTutorialDir() instead of TROOT::GetTutorialsDir() since I apply this change after appling the changes in pull request #130. If you decide to fix this issue first you need to put the s back in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/311
https://github.com/root-project/root/pull/311:178,usability,document,documentation,178,Use full paths to images; This tutorial does not use full paths to the images fore.xpm and mditestbg.xpm. These images are therefore not found during execution. The image on the documentation page therefore does not look as expected:. https://root.cern/doc/master/rose__image_8C.html. E.g. the text in the lower right corner of the images is barely readable due to this problem. This pull request addresses this issue. Note: I have used TROOT::GetTutorialDir() instead of TROOT::GetTutorialsDir() since I apply this change after appling the changes in pull request #130. If you decide to fix this issue first you need to put the s back in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/311
https://github.com/root-project/root/pull/312:497,availability,Error,Error,497,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:41,deployability,log,log,41,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:52,deployability,fail,failed,52,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:450,deployability,FAIL,FAILED,450,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:497,performance,Error,Error,497,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:52,reliability,fail,failed,52,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:450,reliability,FAIL,FAILED,450,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:41,safety,log,log,41,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:59,safety,test,test,59,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:71,safety,Test,Test,71,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:497,safety,Error,Error,497,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:41,security,log,log,41,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:41,testability,log,log,41,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:59,testability,test,test,59,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:71,testability,Test,Test,71,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/312:497,usability,Error,Error,497,Fix reference for Fedora 26; This is the log of the failed test:. ```. Test 38: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result...................................... 38 FAILED. Result = 1456040. Reference = 1463263. Error = 7223 (was 7000). ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/312
https://github.com/root-project/root/pull/313:107,deployability,depend,depending,107,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:287,deployability,depend,depend,287,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:107,integrability,depend,depending,107,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:287,integrability,depend,depend,287,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:137,interoperability,xml,xml,137,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:192,interoperability,xml,xml,192,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:301,interoperability,xml,xml,301,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:107,modifiability,depend,depending,107,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:287,modifiability,depend,depend,287,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:107,safety,depend,depending,107,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:287,safety,depend,depend,287,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:107,testability,depend,depending,107,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:287,testability,depend,depend,287,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:141,usability,support,support,141,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/313:305,usability,support,support,305,No such thing as ROOT_unfold_FOUND; There is no such thing as ROOT_unfold_FOUND. It is built conditionally depending on whether there is xml support or not. From hist/CMakeLists.txt:. ~~~. if(xml). add_subdirectory(unfold). endif(). ~~~. The veto for the tutorials should therefore also depend on the xml support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/313
https://github.com/root-project/root/pull/314:117,deployability,depend,dependent,117,[TMVA] Refactor PyMVA GTB method and adding multiclass and ranking features; **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/314
https://github.com/root-project/root/pull/314:117,integrability,depend,dependent,117,[TMVA] Refactor PyMVA GTB method and adding multiclass and ranking features; **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/314
https://github.com/root-project/root/pull/314:7,modifiability,Refact,Refactor,7,[TMVA] Refactor PyMVA GTB method and adding multiclass and ranking features; **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/314
https://github.com/root-project/root/pull/314:117,modifiability,depend,dependent,117,[TMVA] Refactor PyMVA GTB method and adding multiclass and ranking features; **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/314
https://github.com/root-project/root/pull/314:7,performance,Refactor,Refactor,7,[TMVA] Refactor PyMVA GTB method and adding multiclass and ranking features; **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/314
https://github.com/root-project/root/pull/314:117,safety,depend,dependent,117,[TMVA] Refactor PyMVA GTB method and adding multiclass and ranking features; **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/314
https://github.com/root-project/root/pull/314:117,testability,depend,dependent,117,[TMVA] Refactor PyMVA GTB method and adding multiclass and ranking features; **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/314
https://github.com/root-project/root/pull/315:240,deployability,depend,dependent,240,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:240,integrability,depend,dependent,240,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:7,modifiability,Refact,Refactor,7,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:70,modifiability,Refact,Refactor,70,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:240,modifiability,depend,dependent,240,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:7,performance,Refactor,Refactor,7,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:70,performance,Refactor,Refactor,70,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:176,safety,test,test,176,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:240,safety,depend,dependent,240,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:176,testability,test,test,176,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:240,testability,depend,dependent,240,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/315:107,usability,support,support,107,[TMVA] Refactor PyMVA AdaBoost method with multi-class and ranking; - Refactor AdaBoost. - Add multi-class support. - Add ranking feature. - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/315
https://github.com/root-project/root/pull/316:15,deployability,Updat,Update,15,TMVA Userguide Update; Added Variance Threshold method to Data Preprocessing section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:15,safety,Updat,Update,15,TMVA Userguide Update; Added Variance Threshold method to Data Preprocessing section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:15,security,Updat,Update,15,TMVA Userguide Update; Added Variance Threshold method to Data Preprocessing section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:5,usability,User,Userguide,5,TMVA Userguide Update; Added Variance Threshold method to Data Preprocessing section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/318:101,integrability,sub,subsection,101,Documentation for DNN Implementation; I was unsure whether to put the DNN documentation into its own subsection or not. So this is up for discussion. I ended up doing it for mainly two reasons:. - It allows me to reference the subsubsections. - Users with interest in DNNs probably know about neural networks and do. not necessarily want to go through the introduction to ANNs of the previous section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/318
https://github.com/root-project/root/pull/318:227,integrability,sub,subsubsections,227,Documentation for DNN Implementation; I was unsure whether to put the DNN documentation into its own subsection or not. So this is up for discussion. I ended up doing it for mainly two reasons:. - It allows me to reference the subsubsections. - Users with interest in DNNs probably know about neural networks and do. not necessarily want to go through the introduction to ANNs of the previous section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/318
https://github.com/root-project/root/pull/318:300,performance,network,networks,300,Documentation for DNN Implementation; I was unsure whether to put the DNN documentation into its own subsection or not. So this is up for discussion. I ended up doing it for mainly two reasons:. - It allows me to reference the subsubsections. - Users with interest in DNNs probably know about neural networks and do. not necessarily want to go through the introduction to ANNs of the previous section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/318
https://github.com/root-project/root/pull/318:300,security,network,networks,300,Documentation for DNN Implementation; I was unsure whether to put the DNN documentation into its own subsection or not. So this is up for discussion. I ended up doing it for mainly two reasons:. - It allows me to reference the subsubsections. - Users with interest in DNNs probably know about neural networks and do. not necessarily want to go through the introduction to ANNs of the previous section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/318
https://github.com/root-project/root/pull/318:0,usability,Document,Documentation,0,Documentation for DNN Implementation; I was unsure whether to put the DNN documentation into its own subsection or not. So this is up for discussion. I ended up doing it for mainly two reasons:. - It allows me to reference the subsubsections. - Users with interest in DNNs probably know about neural networks and do. not necessarily want to go through the introduction to ANNs of the previous section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/318
https://github.com/root-project/root/pull/318:74,usability,document,documentation,74,Documentation for DNN Implementation; I was unsure whether to put the DNN documentation into its own subsection or not. So this is up for discussion. I ended up doing it for mainly two reasons:. - It allows me to reference the subsubsections. - Users with interest in DNNs probably know about neural networks and do. not necessarily want to go through the introduction to ANNs of the previous section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/318
https://github.com/root-project/root/pull/318:245,usability,User,Users,245,Documentation for DNN Implementation; I was unsure whether to put the DNN documentation into its own subsection or not. So this is up for discussion. I ended up doing it for mainly two reasons:. - It allows me to reference the subsubsections. - Users with interest in DNNs probably know about neural networks and do. not necessarily want to go through the introduction to ANNs of the previous section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/318
https://github.com/root-project/root/pull/319:153,availability,error,error,153,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:270,availability,error,error,270,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:217,energy efficiency,alloc,allocated,217,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:192,integrability,buffer,buffer,192,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:452,integrability,event,events,452,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:488,integrability,event,eventexe,488,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:529,integrability,event,events,529,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:562,integrability,event,eventexe,562,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:610,integrability,event,events,610,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:654,integrability,event,eventexe,654,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:702,integrability,event,events,702,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:153,performance,error,error,153,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:270,performance,error,error,270,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:296,performance,memor,memory,296,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:409,performance,parallel,parallel,409,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:712,performance,parallel,parallel,712,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:153,safety,error,error,153,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:270,safety,error,error,270,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:400,safety,test,test,400,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:483,safety,TEST,TEST,483,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:557,safety,TEST,TEST,557,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:649,safety,TEST,TEST,649,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:400,testability,test,test,400,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:429,testability,simpl,simply,429,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:483,testability,TEST,TEST,483,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:557,testability,TEST,TEST,557,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:649,testability,TEST,TEST,649,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:153,usability,error,error,153,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:270,usability,error,error,270,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:296,usability,memor,memory,296,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/319:429,usability,simpl,simply,429,"[ROOT-8468] Fix multithreading unzipping; @pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib). /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner). /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/319
https://github.com/root-project/root/pull/320:141,integrability,pub,public,141,[TMVA/BDT] some head scratchers I stumbled over; A few items that surprised me when digging through the tmva code:. the Read.... methods are public virtual in the base class `Node` but private in the derived classes. The `sigEventsInNode` looks unused to me (and i have no clue why the compiler doesn't issue a warning).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/320
https://github.com/root-project/root/pull/320:295,reliability,doe,doesn,295,[TMVA/BDT] some head scratchers I stumbled over; A few items that surprised me when digging through the tmva code:. the Read.... methods are public virtual in the base class `Node` but private in the derived classes. The `sigEventsInNode` looks unused to me (and i have no clue why the compiler doesn't issue a warning).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/320
https://github.com/root-project/root/pull/321:194,energy efficiency,core,core-count,194,"Improve parallelism in TTree::Fill; Now, we create TBB tasks for compression whenever `TTree::Fill` is called and a basket must be compressed. In CMS, we saw significant speedup on KNL and high-core-count Xeons by doing this over the existing basic write IMT (likely because we have some branches that are flushed to disk much more frequently than targeted by the auto-flush routines).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:375,integrability,rout,routines,375,"Improve parallelism in TTree::Fill; Now, we create TBB tasks for compression whenever `TTree::Fill` is called and a basket must be compressed. In CMS, we saw significant speedup on KNL and high-core-count Xeons by doing this over the existing basic write IMT (likely because we have some branches that are flushed to disk much more frequently than targeted by the auto-flush routines).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:8,performance,parallel,parallelism,8,"Improve parallelism in TTree::Fill; Now, we create TBB tasks for compression whenever `TTree::Fill` is called and a basket must be compressed. In CMS, we saw significant speedup on KNL and high-core-count Xeons by doing this over the existing basic write IMT (likely because we have some branches that are flushed to disk much more frequently than targeted by the auto-flush routines).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:317,performance,disk,disk,317,"Improve parallelism in TTree::Fill; Now, we create TBB tasks for compression whenever `TTree::Fill` is called and a basket must be compressed. In CMS, we saw significant speedup on KNL and high-core-count Xeons by doing this over the existing basic write IMT (likely because we have some branches that are flushed to disk much more frequently than targeted by the auto-flush routines).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:158,security,sign,significant,158,"Improve parallelism in TTree::Fill; Now, we create TBB tasks for compression whenever `TTree::Fill` is called and a basket must be compressed. In CMS, we saw significant speedup on KNL and high-core-count Xeons by doing this over the existing basic write IMT (likely because we have some branches that are flushed to disk much more frequently than targeted by the auto-flush routines).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/322:35,integrability,batch,batch,35,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:35,performance,batch,batch,35,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:121,performance,time,times,121,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:97,safety,test,tests,97,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:110,safety,test,test,110,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:97,testability,test,tests,97,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:110,testability,test,test,110,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:15,usability,user,user,15,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:20,usability,interact,interaction,20,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/322:51,usability,document,documentation,51,Don't wait for user interaction in batch mode; The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/322
https://github.com/root-project/root/pull/323:71,deployability,build,builds,71,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:115,deployability,depend,depend,115,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:285,deployability,patch,patch,285,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:297,deployability,build,build,297,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:431,deployability,build,build,431,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:478,deployability,depend,dependency,478,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:511,deployability,instal,installed,511,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:660,deployability,build,build,660,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:755,deployability,build,build,755,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:788,deployability,build,builds,788,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:932,deployability,patch,patch,932,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:115,integrability,depend,depend,115,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:478,integrability,depend,dependency,478,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:115,modifiability,depend,depend,115,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:478,modifiability,depend,dependency,478,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:568,performance,disk,disk,568,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:576,performance,time,time,576,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:115,safety,depend,depend,115,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:285,safety,patch,patch,285,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:478,safety,depend,dependency,478,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:932,safety,patch,patch,932,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:285,security,patch,patch,285,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:932,security,patch,patch,932,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:115,testability,depend,depend,115,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:478,testability,depend,dependency,478,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:205,usability,command,command,205,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:303,usability,tool,tool,303,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:666,usability,tool,tools,666,"Correct rule generation for builtin libraries.; The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/324:16,usability,support,support,16,TDavixFile: add support for bucket name in path;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/324
https://github.com/root-project/root/pull/325:624,deployability,version,versions,624,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:624,integrability,version,versions,624,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:800,integrability,pub,public,800,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:827,integrability,pub,public,827,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:472,modifiability,inherit,inherits,472,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:624,modifiability,version,versions,624,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:1183,modifiability,inherit,inheriting,1183,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:303,safety,except,exception,303,"[RooFit] Add missing 'add' functions to RooArgSet.; This PR adds 'add' functions to RooArgSet again, that were removed in 6.06/00. ### Problem. This pyROOT code. ```python. import ROOT. set1 = ROOT.RooArgSet(). set2 = ROOT.RooArgSet(). set1.add(set2). ```. worked until 6.05/02 (included) and raises an exception since 6.06/00:. ```shell. TypeError: bool RooArgSet::add(const RooAbsArg& var, bool silent = kFALSE) =>. could not convert argument 1. ```. ### Fix. RooArgSet inherits from RooAbsCollection, so it should be possible to add a RootArgSet instance to an other RootArgSet instance via `add()`. This used to work in versions prior to 6.06/00. From [`RooArgSet.h in 6.05/02`](https://github.com/root-mirror/root/blob/v6-05-02/roofit/roofitcore/inc/RooArgSet.h#L90):. ```cpp. class RooArgSet : public RooAbsCollection {. public:. ... virtual Bool_t add(const RooAbsCollection& list, Bool_t silent=kFALSE) {...}. };. ```. This was changed in commit 283f080, where e.g. the above `add` function was replaced by. ```cpp. using RooAbsCollection::add;. ```. However, this only seems to work when the *used* function is implemented in the base class' header or re-implemented by the inheriting class' which both is not the case. Therefore, I added the functions again to the RooArgSet header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/326:180,deployability,patch,patch,180,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:12,energy efficiency,schedul,scheduler,12,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:112,energy efficiency,schedul,scheduler,112,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:274,energy efficiency,schedul,scheduler,274,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:403,energy efficiency,schedul,scheduler,403,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:22,interoperability,conflict,conflicts,22,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:91,interoperability,share,share,91,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:12,performance,schedul,scheduler,12,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:112,performance,schedul,scheduler,112,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:274,performance,schedul,scheduler,274,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:403,performance,schedul,scheduler,403,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:180,safety,patch,patch,180,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:221,safety,avoid,avoids,221,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:180,security,patch,patch,180,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:186,security,modif,modifies,186,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/326:330,usability,user,user,330,"Resolve tbb scheduler conflicts; Both EnableEmplicitMT and TThreadExecutor implementations share the. same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler. initialized by EnableEmplicitMT. * warns the user if she/he tries to change an already-set number of. threads, as the scheduler will always take the value of its first. initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/326
https://github.com/root-project/root/pull/327:415,deployability,patch,patches,415,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:432,deployability,patch,patches,432,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:159,energy efficiency,reduc,reduction,159,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:172,energy efficiency,CPU,CPU,172,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:172,performance,CPU,CPU,172,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:217,safety,review,review,217,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:415,safety,patch,patches,415,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:432,safety,patch,patches,432,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:415,security,patch,patches,415,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:432,security,patch,patches,432,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:217,testability,review,review,217,[tmva] WIP: DecisionTreeNode use static_cast instead of dynamic_cast; Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur! Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/328:58,deployability,updat,updates,58,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:72,deployability,patch,patch,72,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:133,deployability,build,build,133,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:146,deployability,updat,updates,146,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:173,deployability,version,version,173,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:215,deployability,updat,updates,215,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:173,integrability,version,version,173,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:173,modifiability,version,version,173,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:58,safety,updat,updates,58,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:72,safety,patch,patch,72,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:146,safety,updat,updates,146,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:215,safety,updat,updates,215,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:58,security,updat,updates,58,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:72,security,patch,patch,72,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:146,security,updat,updates,146,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:215,security,updat,updates,215,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/328:93,usability,support,support,93,"libAfterImage: apply changes for giflib-5 and other minor updates; Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to. keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/328
https://github.com/root-project/root/pull/329:5,deployability,instal,install,5,"Test install; Talk about throwing out the baby with the bath water... This was one of the most important fixes to the root build system ever, and it was reverted due to a tiny little nuisance that came with it. There is no sense of proportion here. Anyway I have changed the build so that it doesn't use file(COPY ...) to copy the headers to ${CMAKE_BINARY_DIR}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/329
https://github.com/root-project/root/pull/329:123,deployability,build,build,123,"Test install; Talk about throwing out the baby with the bath water... This was one of the most important fixes to the root build system ever, and it was reverted due to a tiny little nuisance that came with it. There is no sense of proportion here. Anyway I have changed the build so that it doesn't use file(COPY ...) to copy the headers to ${CMAKE_BINARY_DIR}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/329
https://github.com/root-project/root/pull/329:275,deployability,build,build,275,"Test install; Talk about throwing out the baby with the bath water... This was one of the most important fixes to the root build system ever, and it was reverted due to a tiny little nuisance that came with it. There is no sense of proportion here. Anyway I have changed the build so that it doesn't use file(COPY ...) to copy the headers to ${CMAKE_BINARY_DIR}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/329
https://github.com/root-project/root/pull/329:292,reliability,doe,doesn,292,"Test install; Talk about throwing out the baby with the bath water... This was one of the most important fixes to the root build system ever, and it was reverted due to a tiny little nuisance that came with it. There is no sense of proportion here. Anyway I have changed the build so that it doesn't use file(COPY ...) to copy the headers to ${CMAKE_BINARY_DIR}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/329
https://github.com/root-project/root/pull/329:0,safety,Test,Test,0,"Test install; Talk about throwing out the baby with the bath water... This was one of the most important fixes to the root build system ever, and it was reverted due to a tiny little nuisance that came with it. There is no sense of proportion here. Anyway I have changed the build so that it doesn't use file(COPY ...) to copy the headers to ${CMAKE_BINARY_DIR}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/329
https://github.com/root-project/root/pull/329:0,testability,Test,Test,0,"Test install; Talk about throwing out the baby with the bath water... This was one of the most important fixes to the root build system ever, and it was reverted due to a tiny little nuisance that came with it. There is no sense of proportion here. Anyway I have changed the build so that it doesn't use file(COPY ...) to copy the headers to ${CMAKE_BINARY_DIR}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/329
https://github.com/root-project/root/pull/330:27,availability,error,error,27,Fix stupid token delimiter error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/330
https://github.com/root-project/root/pull/330:27,performance,error,error,27,Fix stupid token delimiter error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/330
https://github.com/root-project/root/pull/330:27,safety,error,error,27,Fix stupid token delimiter error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/330
https://github.com/root-project/root/pull/330:11,security,token,token,11,Fix stupid token delimiter error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/330
https://github.com/root-project/root/pull/330:27,usability,error,error,27,Fix stupid token delimiter error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/330
https://github.com/root-project/root/pull/332:167,deployability,patch,patch,167,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/332:55,energy efficiency,Current,Currently,55,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/332:248,integrability,configur,configuring,248,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/332:248,modifiability,configur,configuring,248,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/332:167,safety,patch,patch,167,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/332:224,safety,valid,valid,224,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/332:167,security,patch,patch,167,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/332:248,security,configur,configuring,248,Only use the first path to libc++ in the overlay.yaml; Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/332
https://github.com/root-project/root/pull/333:69,deployability,integr,integrate,69,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:69,integrability,integr,integrate,69,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:69,interoperability,integr,integrate,69,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:69,modifiability,integr,integrate,69,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:738,modifiability,variab,variables,738,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:69,reliability,integr,integrate,69,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:187,safety,safe,safely,187,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:423,safety,valid,valid,423,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:599,safety,detect,detect,599,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:69,security,integr,integrate,69,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:599,security,detect,detect,599,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:643,security,access,access,643,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:69,testability,integr,integrate,69,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/333:373,usability,indicat,indicates,373,"[TDF] Minor improvements; Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction. can safely assume that the previous node in the chain still exists when it is. being constructed. * fPrevData is now a reference instead of a raw pointer in all classes:. a reference better indicates that we always expect fPrevData to be a valid. node of the chain. In fact, the only case when this condition might not be. met is when the TDataFrameImpl object goes out-of-scope before other nodes. of the chain; we detect this case and throw before trying to access. invalid fPrevData pointers/references. * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/333
https://github.com/root-project/root/pull/334:118,integrability,filter,filters,118,"[TDF] Add cutflow reports; Add a `Report` method to `TDataFrameInterface`, that prints cutflow reports for. all named filters (i.e. filters for which a name has been specified). TDataFrame df(tree, filePtr);. auto c = df.Filter(f, branchList, ""myfilter"").Count();. std::cout << ""count "" << *c << std::endl;. df.Report();. Calling `Report` on a call graph node prints the stats for all named filters. in the chain section between the original `TDataFrame` and that node (included). Thanks to Axel for the original implementation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/334
https://github.com/root-project/root/pull/334:132,integrability,filter,filters,132,"[TDF] Add cutflow reports; Add a `Report` method to `TDataFrameInterface`, that prints cutflow reports for. all named filters (i.e. filters for which a name has been specified). TDataFrame df(tree, filePtr);. auto c = df.Filter(f, branchList, ""myfilter"").Count();. std::cout << ""count "" << *c << std::endl;. df.Report();. Calling `Report` on a call graph node prints the stats for all named filters. in the chain section between the original `TDataFrame` and that node (included). Thanks to Axel for the original implementation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/334
https://github.com/root-project/root/pull/334:221,integrability,Filter,Filter,221,"[TDF] Add cutflow reports; Add a `Report` method to `TDataFrameInterface`, that prints cutflow reports for. all named filters (i.e. filters for which a name has been specified). TDataFrame df(tree, filePtr);. auto c = df.Filter(f, branchList, ""myfilter"").Count();. std::cout << ""count "" << *c << std::endl;. df.Report();. Calling `Report` on a call graph node prints the stats for all named filters. in the chain section between the original `TDataFrame` and that node (included). Thanks to Axel for the original implementation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/334
https://github.com/root-project/root/pull/334:391,integrability,filter,filters,391,"[TDF] Add cutflow reports; Add a `Report` method to `TDataFrameInterface`, that prints cutflow reports for. all named filters (i.e. filters for which a name has been specified). TDataFrame df(tree, filePtr);. auto c = df.Filter(f, branchList, ""myfilter"").Count();. std::cout << ""count "" << *c << std::endl;. df.Report();. Calling `Report` on a call graph node prints the stats for all named filters. in the chain section between the original `TDataFrame` and that node (included). Thanks to Axel for the original implementation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/334
https://github.com/root-project/root/pull/334:166,interoperability,specif,specified,166,"[TDF] Add cutflow reports; Add a `Report` method to `TDataFrameInterface`, that prints cutflow reports for. all named filters (i.e. filters for which a name has been specified). TDataFrame df(tree, filePtr);. auto c = df.Filter(f, branchList, ""myfilter"").Count();. std::cout << ""count "" << *c << std::endl;. df.Report();. Calling `Report` on a call graph node prints the stats for all named filters. in the chain section between the original `TDataFrame` and that node (included). Thanks to Axel for the original implementation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/334
https://github.com/root-project/root/pull/335:25,deployability,modul,modulemap,25,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:83,deployability,configurat,configuration,83,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:148,deployability,modul,modulemap,148,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:239,deployability,modul,modulemap,239,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:83,integrability,configur,configuration,83,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:176,integrability,configur,configure,176,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:25,modifiability,modul,modulemap,25,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:83,modifiability,configur,configuration,83,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:148,modifiability,modul,modulemap,148,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:176,modifiability,configur,configure,176,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:239,modifiability,modul,modulemap,239,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:25,safety,modul,modulemap,25,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:148,safety,modul,modulemap,148,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:239,safety,modul,modulemap,239,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:83,security,configur,configuration,83,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/335:176,security,configur,configure,176,Use overlay file for STL modulemap for all source files; We use a dummy map during configuration to pass the CMake compiler steps. with the enabled modulemap overlay. We later configure this overlay file. correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/335
https://github.com/root-project/root/pull/336:249,availability,redund,redundancy,249,"[TDF] minor fixes; * remove unused variable fTmpBranches from TDataFrameImpl. * inizialize fLastCheckedEntry to -1 for all threads. * total size of collection returned by Take is now a ULong64_t. * {Ret,Arg}Type_t -> {Ret,Args}_t: more readable, no redundancy. * minor text fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/336
https://github.com/root-project/root/pull/336:249,deployability,redundan,redundancy,249,"[TDF] minor fixes; * remove unused variable fTmpBranches from TDataFrameImpl. * inizialize fLastCheckedEntry to -1 for all threads. * total size of collection returned by Take is now a ULong64_t. * {Ret,Arg}Type_t -> {Ret,Args}_t: more readable, no redundancy. * minor text fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/336
https://github.com/root-project/root/pull/336:35,modifiability,variab,variable,35,"[TDF] minor fixes; * remove unused variable fTmpBranches from TDataFrameImpl. * inizialize fLastCheckedEntry to -1 for all threads. * total size of collection returned by Take is now a ULong64_t. * {Ret,Arg}Type_t -> {Ret,Args}_t: more readable, no redundancy. * minor text fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/336
https://github.com/root-project/root/pull/336:249,reliability,redundan,redundancy,249,"[TDF] minor fixes; * remove unused variable fTmpBranches from TDataFrameImpl. * inizialize fLastCheckedEntry to -1 for all threads. * total size of collection returned by Take is now a ULong64_t. * {Ret,Arg}Type_t -> {Ret,Args}_t: more readable, no redundancy. * minor text fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/336
https://github.com/root-project/root/pull/336:249,safety,redund,redundancy,249,"[TDF] minor fixes; * remove unused variable fTmpBranches from TDataFrameImpl. * inizialize fLastCheckedEntry to -1 for all threads. * total size of collection returned by Take is now a ULong64_t. * {Ret,Arg}Type_t -> {Ret,Args}_t: more readable, no redundancy. * minor text fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/336
https://github.com/root-project/root/pull/337:76,deployability,depend,depending,76,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:76,integrability,depend,depending,76,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:132,integrability,event,event,132,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:37,interoperability,conflict,conflicting,37,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:76,modifiability,depend,depending,76,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:76,safety,depend,depending,76,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:76,testability,depend,depending,76,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:49,usability,behavi,behaviours,49,Add the new TScheduler class; Solves conflicting behaviours between classes depending on tbb. See more here: https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/338:0,safety,Test,Test,0,Test for Jenkins CI; Small change to see if the project gets properly built in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/338
https://github.com/root-project/root/pull/338:0,testability,Test,Test,0,Test for Jenkins CI; Small change to see if the project gets properly built in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/338
https://github.com/root-project/root/pull/339:21,safety,test,testing,21,Added whitespace for testing Jenkins; Job should be triggered now,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/339
https://github.com/root-project/root/pull/339:21,testability,test,testing,21,Added whitespace for testing Jenkins; Job should be triggered now,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/339
https://github.com/root-project/root/pull/340:0,safety,Test,Test,0,Test for Jenkins CI; Testing whether bot actually comments on PRs of users that are not in the admin list of the bot.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:21,safety,Test,Testing,21,Test for Jenkins CI; Testing whether bot actually comments on PRs of users that are not in the admin list of the bot.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:0,testability,Test,Test,0,Test for Jenkins CI; Testing whether bot actually comments on PRs of users that are not in the admin list of the bot.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:21,testability,Test,Testing,21,Test for Jenkins CI; Testing whether bot actually comments on PRs of users that are not in the admin list of the bot.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:69,usability,user,users,69,Test for Jenkins CI; Testing whether bot actually comments on PRs of users that are not in the admin list of the bot.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/341:11,availability,redund,redundant,11,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:84,availability,redund,redundant,84,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:11,deployability,redundan,redundant,11,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:76,deployability,contain,contain,76,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:84,deployability,redundan,redundant,84,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:200,deployability,patch,patch,200,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:359,deployability,patch,patch,359,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:399,deployability,contain,contained,399,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:322,energy efficiency,current,current,322,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:11,reliability,redundan,redundant,11,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:84,reliability,redundan,redundant,84,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:274,reliability,pra,practical,274,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:11,safety,redund,redundant,11,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:84,safety,redund,redundant,84,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:200,safety,patch,patch,200,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:359,safety,patch,patch,359,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:200,security,patch,patch,200,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:359,security,patch,patch,359,"Remove all redundant header guards around #include directives; Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree. #include ""TTree.h"". #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/343:8,modifiability,Refact,Refactoring,8,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:159,modifiability,Refact,Refactor,159,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:209,modifiability,variab,variable,209,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:8,performance,Refactor,Refactoring,8,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:159,performance,Refactor,Refactor,159,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:76,safety,test,testing,76,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:259,safety,test,tests,259,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:305,safety,test,test,305,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:454,safety,test,test,454,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:71,testability,unit,unit-testing,71,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:254,testability,unit,unit-tests,254,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:300,testability,unit,unit-test,300,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:454,testability,test,test,454,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking; This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost. - Add variable ranking to these classifiers. - Add unit-tests for the sklearn classifiers. - Add unit-test for PyKeras multiclass classification. - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/345:37,deployability,log,logic,37,[TDF] Only compile the type guessing logic when needed;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/345
https://github.com/root-project/root/pull/345:37,safety,log,logic,37,[TDF] Only compile the type guessing logic when needed;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/345
https://github.com/root-project/root/pull/345:37,security,log,logic,37,[TDF] Only compile the type guessing logic when needed;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/345
https://github.com/root-project/root/pull/345:37,testability,log,logic,37,[TDF] Only compile the type guessing logic when needed;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/345
https://github.com/root-project/root/pull/346:208,deployability,integr,integration,208,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:145,integrability,interfac,interface,145,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:208,integrability,integr,integration,208,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:94,interoperability,compatib,compatibility,94,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:145,interoperability,interfac,interface,145,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:208,interoperability,integr,integration,208,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:145,modifiability,interfac,interface,145,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:208,modifiability,integr,integration,208,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:18,performance,parallel,parallelization,18,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:243,performance,parallel,parallelization,243,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:208,reliability,integr,integration,208,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:208,security,integr,integration,208,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:208,testability,integr,integration,208,PR#1 from fitting parallelization + vectorization; Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/347:63,energy efficiency,reduc,reduces,63,[TDF] template TDFInterface on virtual base classes only; This reduces the different specializations of TDFInterface that have to be instantiated to three.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/347
https://github.com/root-project/root/pull/348:725,availability,operat,operation,725,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:31,deployability,log,logic,31,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:122,deployability,Build,BuildAndBook,122,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:163,deployability,Build,BuildAndBook,163,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:179,deployability,Build,BuildAndBook,179,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:528,deployability,Build,BuildAndBook,528,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:677,deployability,Build,BuildAndBook,677,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:704,deployability,build,building,704,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:220,modifiability,paramet,parameter,220,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:615,performance,perform,perform,615,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:31,safety,log,logic,31,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:443,safety,except,exceptions,443,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:31,security,log,logic,31,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:309,security,sign,signals,309,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:6,testability,Simpl,Simplify,6,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:31,testability,log,logic,31,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:71,testability,Simpl,SimpleAction,71,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:108,testability,Simpl,SimpleAction,108,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:6,usability,Simpl,Simplify,6,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:71,usability,Simpl,SimpleAction,71,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:108,usability,Simpl,SimpleAction,108,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/348:615,usability,perform,perform,615,"[TDF] Simplify action creation logic; - removed nested template struct SimpleAction. - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook. - BuildAndBook now only takes one template parameter instead of three. - the default type of histogram weights is now `void` (which signals that we are. not filling a weighted histogram). - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which. in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used. to decide whether to perform runtime type guessing or not. Multiple overloads of. `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/348
https://github.com/root-project/root/pull/349:83,deployability,log,logic,83,mathmore/GSLInterpolator: Warn about suppression of further warnings; The previous logic was such that the warning about suppressed further. warnings never executed. This commit also improves formatting according. to the coding conventions. Fixes: https://sft.its.cern.ch/jira/browse/ROOT-8572,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/349
https://github.com/root-project/root/pull/349:192,interoperability,format,formatting,192,mathmore/GSLInterpolator: Warn about suppression of further warnings; The previous logic was such that the warning about suppressed further. warnings never executed. This commit also improves formatting according. to the coding conventions. Fixes: https://sft.its.cern.ch/jira/browse/ROOT-8572,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/349
https://github.com/root-project/root/pull/349:83,safety,log,logic,83,mathmore/GSLInterpolator: Warn about suppression of further warnings; The previous logic was such that the warning about suppressed further. warnings never executed. This commit also improves formatting according. to the coding conventions. Fixes: https://sft.its.cern.ch/jira/browse/ROOT-8572,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/349
https://github.com/root-project/root/pull/349:83,security,log,logic,83,mathmore/GSLInterpolator: Warn about suppression of further warnings; The previous logic was such that the warning about suppressed further. warnings never executed. This commit also improves formatting according. to the coding conventions. Fixes: https://sft.its.cern.ch/jira/browse/ROOT-8572,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/349
https://github.com/root-project/root/pull/349:83,testability,log,logic,83,mathmore/GSLInterpolator: Warn about suppression of further warnings; The previous logic was such that the warning about suppressed further. warnings never executed. This commit also improves formatting according. to the coding conventions. Fixes: https://sft.its.cern.ch/jira/browse/ROOT-8572,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/349
https://github.com/root-project/root/pull/352:356,availability,error,error,356,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:386,availability,ERROR,ERROR,386,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:447,availability,error,error,447,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:583,availability,down,download,583,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:674,availability,down,down,674,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:828,availability,down,download,828,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:356,performance,error,error,356,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:386,performance,ERROR,ERROR,386,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:447,performance,error,error,447,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:356,safety,error,error,356,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:386,safety,ERROR,ERROR,386,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:392,safety,Input,InputArguments,392,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:447,safety,error,error,447,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:508,safety,test,test,508,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:508,testability,test,test,508,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:356,usability,error,error,356,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:386,usability,ERROR,ERROR,386,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:392,usability,Input,InputArguments,392,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:447,usability,error,error,447,"Roo stream parser fix; RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...). Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```. [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. ```. You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/353:84,availability,error,error,84,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:17,deployability,build,builddir,17,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:26,deployability,build,build,26,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:32,deployability,BUILD,BUILD,32,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:84,performance,error,error,84,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:51,safety,test,test,51,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:84,safety,error,error,84,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:51,testability,test,test,51,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/353:84,usability,error,error,84,"Missing header; /builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'. using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/353
https://github.com/root-project/root/pull/354:101,integrability,interfac,interface,101,"[TDF] Move callables instead of copying them whenever possible; This is an internal change. The user interface remains unchanged, as we probably want to copy callables passed to `TDataFrame` by value in all cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/354
https://github.com/root-project/root/pull/354:101,interoperability,interfac,interface,101,"[TDF] Move callables instead of copying them whenever possible; This is an internal change. The user interface remains unchanged, as we probably want to copy callables passed to `TDataFrame` by value in all cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/354
https://github.com/root-project/root/pull/354:101,modifiability,interfac,interface,101,"[TDF] Move callables instead of copying them whenever possible; This is an internal change. The user interface remains unchanged, as we probably want to copy callables passed to `TDataFrame` by value in all cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/354
https://github.com/root-project/root/pull/354:96,usability,user,user,96,"[TDF] Move callables instead of copying them whenever possible; This is an internal change. The user interface remains unchanged, as we probably want to copy callables passed to `TDataFrame` by value in all cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/354
https://github.com/root-project/root/pull/356:16,availability,failur,failure,16,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx; Explicitly specifying the default template parameter seems to do the trick,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/356
https://github.com/root-project/root/pull/356:10,deployability,build,build,10,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx; Explicitly specifying the default template parameter seems to do the trick,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/356
https://github.com/root-project/root/pull/356:16,deployability,fail,failure,16,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx; Explicitly specifying the default template parameter seems to do the trick,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/356
https://github.com/root-project/root/pull/356:72,interoperability,specif,specifying,72,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx; Explicitly specifying the default template parameter seems to do the trick,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/356
https://github.com/root-project/root/pull/356:104,modifiability,paramet,parameter,104,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx; Explicitly specifying the default template parameter seems to do the trick,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/356
https://github.com/root-project/root/pull/356:16,performance,failur,failure,16,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx; Explicitly specifying the default template parameter seems to do the trick,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/356
https://github.com/root-project/root/pull/356:16,reliability,fail,failure,16,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx; Explicitly specifying the default template parameter seems to do the trick,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/356
https://github.com/root-project/root/pull/357:10,energy efficiency,Reduc,Reduce,10,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:83,energy efficiency,reduc,reduceTree,83,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:120,energy efficiency,Reduc,Reduce,120,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:249,energy efficiency,Reduc,Reduce,249,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:217,integrability,Filter,Filter,217,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:365,integrability,sub,submitted,365,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:351,safety,test,test,351,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:346,testability,unit,unit,346,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:351,testability,test,test,351,"[TDF] add Reduce action; example usage:. ```c++. ROOT::Experimental::TDataFrame d(""reduceTree"", &f, {""i""});. auto r = d.Reduce([](int a, int b) { return a + b; }, {""i""}); // sum all branch values. auto rDefBranch = d.Filter([]() { return true; }). .Reduce([](int a, int b) { return a*b; }, {}, 1); // multiply all branch values. ```. A PR with a unit test has been submitted to the roottest repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/358:10,energy efficiency,Reduc,Reduce,10,[TDF] Add Reduce to docs;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/358
https://github.com/root-project/root/pull/359:1420,availability,Error,Error,1420,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1515,availability,error,error,1515,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1678,availability,failur,failure,1678,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:117,deployability,Fail,Failed,117,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:268,deployability,Fail,Failed,268,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:325,deployability,Fail,Failed,325,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:379,deployability,Fail,Failed,379,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:442,deployability,Fail,Failed,442,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:896,deployability,Fail,Failed,896,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:953,deployability,Fail,Failed,953,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1007,deployability,Fail,Failed,1007,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1070,deployability,Fail,Failed,1070,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1405,deployability,FAIL,FAILED,1405,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1430,deployability,build,builddir,1430,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1439,deployability,build,build,1439,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1445,deployability,BUILD,BUILD,1445,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1470,deployability,modul,modules,1470,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1678,deployability,fail,failure,1678,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1504,integrability,messag,message,1504,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1504,interoperability,messag,message,1504,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1470,modifiability,modul,modules,1470,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1420,performance,Error,Error,1420,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1515,performance,error,error,1515,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1678,performance,failur,failure,1678,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:117,reliability,Fail,Failed,117,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:268,reliability,Fail,Failed,268,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:325,reliability,Fail,Failed,325,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:379,reliability,Fail,Failed,379,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:442,reliability,Fail,Failed,442,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:896,reliability,Fail,Failed,896,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:953,reliability,Fail,Failed,953,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1007,reliability,Fail,Failed,1007,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1070,reliability,Fail,Failed,1070,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1405,reliability,FAIL,FAILED,1405,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1678,reliability,fail,failure,1678,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:8,safety,test,test,8,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:44,safety,Test,Test,44,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:63,safety,test,testSampleQuantiles,63,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:134,safety,Test,Test,134,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:157,safety,Test,Testing,157,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:199,safety,Test,Testing,199,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:241,safety,Test,Testing,241,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:437,safety,Test,Test,437,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:461,safety,Test,Testing,461,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:503,safety,Test,Testing,503,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:545,safety,Test,Testing,545,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:587,safety,Test,Testing,587,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:629,safety,Test,Testing,629,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:671,safety,Test,Testing,671,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:713,safety,Test,Testing,713,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:755,safety,Test,Test,755,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:785,safety,Test,Testing,785,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:827,safety,Test,Testing,827,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:869,safety,Test,Testing,869,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1065,safety,Test,Test,1065,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1089,safety,Test,Testing,1089,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1131,safety,Test,Testing,1131,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1173,safety,Test,Testing,1173,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1215,safety,Test,Testing,1215,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1257,safety,Test,Testing,1257,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1299,safety,Test,Testing,1299,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1341,safety,Test,Testing,1341,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1383,safety,Test,Test,1383,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1420,safety,Error,Error,1420,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1470,safety,modul,modules,1470,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1515,safety,error,error,1515,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1673,safety,test,test,1673,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:8,testability,test,test,8,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:44,testability,Test,Test,44,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:63,testability,test,testSampleQuantiles,63,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:134,testability,Test,Test,134,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:157,testability,Test,Testing,157,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:199,testability,Test,Testing,199,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:241,testability,Test,Testing,241,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:437,testability,Test,Test,437,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:461,testability,Test,Testing,461,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:503,testability,Test,Testing,503,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:545,testability,Test,Testing,545,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:587,testability,Test,Testing,587,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:629,testability,Test,Testing,629,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:671,testability,Test,Testing,671,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:713,testability,Test,Testing,713,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:755,testability,Test,Test,755,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:785,testability,Test,Testing,785,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:827,testability,Test,Testing,827,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:869,testability,Test,Testing,869,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1065,testability,Test,Test,1065,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1089,testability,Test,Testing,1089,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1131,testability,Test,Testing,1131,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1173,testability,Test,Testing,1173,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1215,testability,Test,Testing,1215,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1257,testability,Test,Testing,1257,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1299,testability,Test,Testing,1299,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1341,testability,Test,Testing,1341,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1383,testability,Test,Test,1383,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1673,testability,test,test,1673,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1420,usability,Error,Error,1420,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:1515,usability,error,error,1515,Fix for test suite on Fedora 26 i686; 7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec. Test ordered data .... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test data in random order.... Testing for type 7 :		.............	 OK ! Testing for type 1 :		.............	 OK ! Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7. .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5. Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8. .... Test Failed for type 2. Testing for type 3 :		.............	 OK ! Testing for type 4 :		.............	 OK ! Testing for type 5 :		.............	 OK ! Testing for type 6 :		.............	 OK ! Testing for type 7 :		.............	 OK ! Testing for type 8 :		.............	 OK ! Testing for type 9 :		.............	 OK ! Test sample quantiles FAILED . CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):. error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/360:79,availability,Down,Download,79,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:123,availability,avail,available,123,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:136,availability,servic,service-spi,136,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:0,deployability,Updat,Update,0,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:13,deployability,version,version,13,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:49,deployability,Updat,Update,49,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:62,deployability,version,version,62,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:136,deployability,servic,service-spi,136,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:194,deployability,instal,installation,194,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:239,deployability,instal,install,239,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:281,deployability,Instal,Install,281,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:13,integrability,version,version,13,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:62,integrability,version,version,62,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:136,integrability,servic,service-spi,136,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:225,integrability,Configur,Configure,225,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:13,modifiability,version,version,13,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:62,modifiability,version,version,62,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:136,modifiability,servic,service-spi,136,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:225,modifiability,Configur,Configure,225,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:123,reliability,availab,available,123,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:0,safety,Updat,Update,0,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:49,safety,Updat,Update,49,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:123,safety,avail,available,123,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:0,security,Updat,Update,0,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:49,security,Updat,Update,49,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:123,security,availab,available,123,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:225,security,Configur,Configure,225,Update Vc to version 1.3.0 in CMake externals; - Update Vc to version 1.3.0. - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch). - Use same compiler options and installation prefix as ROOT. - Configure and install Vc into CMake binary directory. - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/361:7,availability,redund,redundant,7,Remove redundant checks in TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/361
https://github.com/root-project/root/pull/361:7,deployability,redundan,redundant,7,Remove redundant checks in TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/361
https://github.com/root-project/root/pull/361:7,reliability,redundan,redundant,7,Remove redundant checks in TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/361
https://github.com/root-project/root/pull/361:7,safety,redund,redundant,7,Remove redundant checks in TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/361
https://github.com/root-project/root/pull/362:313,deployability,fail,fail,313,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:335,deployability,build,build,335,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:393,deployability,build,build,393,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:240,performance,parallel,parallel,240,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:166,reliability,doe,does,166,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:313,reliability,fail,fail,313,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:45,safety,test,tests,45,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:64,safety,test,tests,64,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:193,safety,test,tests,193,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:301,safety,test,tests,301,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:363,safety,test,testDetails,363,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:379,safety,test,test,379,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:453,safety,test,tests,453,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:45,testability,test,tests,45,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:64,testability,test,tests,64,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:193,testability,test,tests,193,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:301,testability,test,tests,301,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:363,testability,test,testDetails,363,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:379,testability,test,test,379,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/362:453,testability,test,tests,453,"Attempt to solve race conditions on roostats tests; Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697. This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/362
https://github.com/root-project/root/pull/363:504,deployability,patch,patch,504,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:732,deployability,manag,management,732,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:732,energy efficiency,manag,management,732,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:185,integrability,pub,public,185,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:483,integrability,encapsulat,encapsulated,483,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:301,interoperability,standard,standard,301,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1016,interoperability,convers,conversion,1016,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:483,modifiability,encapsul,encapsulated,483,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:636,reliability,doe,doesn,636,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:504,safety,patch,patch,504,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:732,safety,manag,management,732,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:504,security,patch,patch,504,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:981,usability,user,user,981,"[WIP] [RooFit] enable exporting TTree from RooDataSet which uses Vector storage; Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,. Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/364:15,integrability,interfac,interface,15,Add a chunking interface to TProcessExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:15,interoperability,interfac,interface,15,Add a chunking interface to TProcessExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:15,modifiability,interfac,interface,15,Add a chunking interface to TProcessExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/365:6,deployability,depend,dependencies,6,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:136,deployability,depend,dependency,136,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:6,integrability,depend,dependencies,6,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:136,integrability,depend,dependency,136,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:6,modifiability,depend,dependencies,6,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:136,modifiability,depend,dependency,136,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:6,safety,depend,dependencies,6,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:27,safety,test,tests,27,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:136,safety,depend,dependency,136,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:6,testability,depend,dependencies,6,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:27,testability,test,tests,27,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/365:136,testability,depend,dependency,136,Fixed dependencies between tests on roostats; Extracted the code that makes generates an example file into its own file and made this a dependency of the others.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/365
https://github.com/root-project/root/pull/366:46,availability,Operat,Operations,46,[TDF] Better interplay between TDFActions and Operations;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/367:166,deployability,integr,integration,166,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:166,integrability,integr,integration,166,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:75,interoperability,BinD,BinData,75,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:166,interoperability,integr,integration,166,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:75,modifiability,BinD,BinData,75,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:166,modifiability,integr,integration,166,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:18,performance,parallel,parallelization,18,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:201,performance,parallel,parallelization,201,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:166,reliability,integr,integration,166,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:166,security,integr,integration,166,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:166,testability,integr,integration,166,"PR#2 from fitting parallelization + vectorization; Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/368:80,safety,test,testSummary,80,Fixed issue being stuck on non x64 arch; Fixes this issue: http://cdash.cern.ch/testSummary.php?project=1&name=tutorial-hist-candlehisto&date=2017-02-24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/368
https://github.com/root-project/root/pull/368:80,testability,test,testSummary,80,Fixed issue being stuck on non x64 arch; Fixes this issue: http://cdash.cern.ch/testSummary.php?project=1&name=tutorial-hist-candlehisto&date=2017-02-24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/368
https://github.com/root-project/root/pull/369:23,energy efficiency,Optim,OptimizeBaskets,23,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:101,energy efficiency,Optim,OptimizeBaskets,101,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:332,energy efficiency,Optim,OptimizeBaskets,332,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:23,performance,Optimiz,OptimizeBaskets,23,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:101,performance,Optimiz,OptimizeBaskets,101,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:332,performance,Optimiz,OptimizeBaskets,332,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:42,safety,avoid,avoid,42,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:86,safety,test,testing,86,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:86,testability,test,testing,86,"Small change to TTree::OptimizeBaskets to avoid disc reads; Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/370:201,availability,error,error,201,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/370:188,deployability,contain,contained,188,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/370:94,integrability,filter,filters,94,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/370:55,interoperability,share,shared,55,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/370:228,interoperability,mismatch,mismatch,228,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/370:201,performance,error,error,201,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/370:201,safety,error,error,201,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/370:201,usability,error,error,201,"[TDF] minor fixes; - using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies). - the output of tdf001_introduction contained an error due to a branch name mismatch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/370
https://github.com/root-project/root/pull/371:100,deployability,stack,stack,100,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:413,deployability,stack,stack,413,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:437,deployability,stack,stack,437,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:452,deployability,stack,stack,452,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:479,deployability,stack,stack,479,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:73,interoperability,bind,bindings,73,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:73,modifiability,bind,bindings,73,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:199,reliability,doe,does,199,"Give TMultiGraph and THStack an __iter__ method; In order for the Python bindings to pick up that a stack and a multi graph are iterable, they need the `begin` and `end` methods implemented. This PR does just that. With these changes one can natively iterate over the histograms/graphs in those objects:. ```{python}. import ROOT. h1 = ROOT.TH1D(""h1"", ""h1"", 100, 0, 100). h2 = ROOT.TH1D(""h2"", ""h2"", 100, 0, 100). stack = ROOT.THStack(). stack.Add(h1). stack.Add(h2). for hist in stack:. print hist.GetTitle(). g1 = ROOT.TGraph(). g2 = ROOT.TGraph(). mg = ROOT.TMultiGraph(). mg.Add(g1). mg.Add(g2). print list(mg). ```. One debatable choice is whether `end` should directly return `TIter::End()` or return `fHists->end()`.The former is directly copied from `TList::end` but could potentially change(?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/372:15,performance,perform,perform,15,Add a class to perform compensate summation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/372
https://github.com/root-project/root/pull/372:15,usability,perform,perform,15,Add a class to perform compensate summation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/372
https://github.com/root-project/root/pull/373:8,usability,document,documentation,8,Improve documentation of the Executors;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/373
https://github.com/root-project/root/pull/375:34,deployability,updat,updated,34,"Master pymva sk 0.18; Hi guys,. * updated PyMVA with support for scikit-learn >= 0.18. * support for python 2 and 3. Best. Omar. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/375
https://github.com/root-project/root/pull/375:34,safety,updat,updated,34,"Master pymva sk 0.18; Hi guys,. * updated PyMVA with support for scikit-learn >= 0.18. * support for python 2 and 3. Best. Omar. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/375
https://github.com/root-project/root/pull/375:34,security,updat,updated,34,"Master pymva sk 0.18; Hi guys,. * updated PyMVA with support for scikit-learn >= 0.18. * support for python 2 and 3. Best. Omar. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/375
https://github.com/root-project/root/pull/375:53,usability,support,support,53,"Master pymva sk 0.18; Hi guys,. * updated PyMVA with support for scikit-learn >= 0.18. * support for python 2 and 3. Best. Omar. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/375
https://github.com/root-project/root/pull/375:72,usability,learn,learn,72,"Master pymva sk 0.18; Hi guys,. * updated PyMVA with support for scikit-learn >= 0.18. * support for python 2 and 3. Best. Omar. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/375
https://github.com/root-project/root/pull/375:89,usability,support,support,89,"Master pymva sk 0.18; Hi guys,. * updated PyMVA with support for scikit-learn >= 0.18. * support for python 2 and 3. Best. Omar. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/375
https://github.com/root-project/root/pull/376:20,availability,error,errors,20,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1722,availability,error,error,1722,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:29,deployability,build,builddir,29,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:38,deployability,build,build,38,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:44,deployability,BUILD,BUILD,44,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:252,deployability,build,builddir,252,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:261,deployability,build,build,261,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:267,deployability,BUILD,BUILD,267,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:452,deployability,build,builddir,452,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:461,deployability,build,build,461,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:467,deployability,BUILD,BUILD,467,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:652,deployability,build,builddir,652,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:661,deployability,build,build,661,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:667,deployability,BUILD,BUILD,667,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:852,deployability,build,builddir,852,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:861,deployability,build,build,861,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:867,deployability,BUILD,BUILD,867,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1075,deployability,build,builddir,1075,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1084,deployability,build,build,1084,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1090,deployability,BUILD,BUILD,1090,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1298,deployability,build,builddir,1298,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1307,deployability,build,build,1307,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1313,deployability,BUILD,BUILD,1313,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1445,deployability,build,builddir,1445,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1454,deployability,build,build,1454,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1460,deployability,BUILD,BUILD,1460,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1645,deployability,build,builddir,1645,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1654,deployability,build,build,1654,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1660,deployability,BUILD,BUILD,1660,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:4,interoperability,format,format,4,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:114,interoperability,format,format,114,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:337,interoperability,format,format,337,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:537,interoperability,format,format,537,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:737,interoperability,format,format,737,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:937,interoperability,format,format,937,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1160,interoperability,format,format,1160,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1383,interoperability,format,format,1383,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1530,interoperability,format,format,1530,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1729,interoperability,format,format,1729,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1764,interoperability,format,format,1764,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1790,interoperability,format,format-security,1790,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:20,performance,error,errors,20,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1722,performance,error,error,1722,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:20,safety,error,errors,20,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1722,safety,error,error,1722,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1797,security,secur,security,1797,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:20,usability,error,errors,20,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:1722,usability,error,error,1722,"Fix format warnings/errors; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]. /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/377:116,deployability,build,builds,116,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:192,deployability,fail,failing,192,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:258,deployability,build,build,258,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:7,energy efficiency,draw,drawing,7,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:74,energy efficiency,draw,draw,74,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:140,energy efficiency,draw,drawing,140,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:18,integrability,batch,batch,18,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:161,integrability,batch,batch,161,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:18,performance,batch,batch,18,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:161,performance,batch,batch,161,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:192,reliability,fail,failing,192,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:200,safety,test,test,200,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:228,safety,test,testDetails,228,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:244,safety,test,test,244,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:200,testability,test,test,200,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:228,testability,test,testDetails,228,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/377:244,testability,test,test,244,"Ignore drawing on batch mode for mlpRegression tutorial; When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:. http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/377
https://github.com/root-project/root/pull/379:23,modifiability,paramet,parameters,23,coverity bugfix 93580: parameters for day month year in wrong order;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/379
https://github.com/root-project/root/pull/380:277,energy efficiency,draw,draw,277,"Multiclass ROC; Adding support for generation of multiclass 1 vs. all ROC curve plots. I also have two files for testing the binary and multiclass code paths, but am unsure of where to put these if anywhere. They are 2 standalone cxx files to generate data, train classifiers, draw the roc curves and succeeds if they do not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:113,safety,test,testing,113,"Multiclass ROC; Adding support for generation of multiclass 1 vs. all ROC curve plots. I also have two files for testing the binary and multiclass code paths, but am unsure of where to put these if anywhere. They are 2 standalone cxx files to generate data, train classifiers, draw the roc curves and succeeds if they do not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:113,testability,test,testing,113,"Multiclass ROC; Adding support for generation of multiclass 1 vs. all ROC curve plots. I also have two files for testing the binary and multiclass code paths, but am unsure of where to put these if anywhere. They are 2 standalone cxx files to generate data, train classifiers, draw the roc curves and succeeds if they do not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:23,usability,support,support,23,"Multiclass ROC; Adding support for generation of multiclass 1 vs. all ROC curve plots. I also have two files for testing the binary and multiclass code paths, but am unsure of where to put these if anywhere. They are 2 standalone cxx files to generate data, train classifiers, draw the roc curves and succeeds if they do not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/381:8,testability,regress,regression,8,Tut mlp regression fix; Reverts commit #0680ec9 and use the old triangulation instead as suggested by @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/381
https://github.com/root-project/root/pull/382:40,deployability,instal,install,40,Allow both absolute and relative python install paths; https://sft.its.cern.ch/jira/browse/ROOT-8692.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/382
https://github.com/root-project/root/pull/383:16,deployability,build,builds,16,Fix ROOT nighly builds failing to configure with CMake;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:23,deployability,fail,failing,23,Fix ROOT nighly builds failing to configure with CMake;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:34,integrability,configur,configure,34,Fix ROOT nighly builds failing to configure with CMake;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:34,modifiability,configur,configure,34,Fix ROOT nighly builds failing to configure with CMake;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:23,reliability,fail,failing,23,Fix ROOT nighly builds failing to configure with CMake;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:34,security,configur,configure,34,Fix ROOT nighly builds failing to configure with CMake;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/384:21,availability,error,errors,21,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:53,availability,redund,redundant,53,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:82,availability,state,statement,82,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:136,availability,error,error,136,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:53,deployability,redundan,redundant,53,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:82,integrability,state,statement,82,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:21,performance,error,errors,21,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:136,performance,error,error,136,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:53,reliability,redundan,redundant,53,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:21,safety,error,errors,21,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:53,safety,redund,redundant,53,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:136,safety,error,error,136,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:21,usability,error,errors,21,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:136,usability,error,error,136,Fixed several covert errors; coverity 94012: removed redundant unreachable return statement			89a4a67. coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137. coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/385:22,availability,error,errors,22,fixed 2 more coverity errors; coverity 94049: class member not initialised. coverity 94053: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/385
https://github.com/root-project/root/pull/385:22,performance,error,errors,22,fixed 2 more coverity errors; coverity 94049: class member not initialised. coverity 94053: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/385
https://github.com/root-project/root/pull/385:22,safety,error,errors,22,fixed 2 more coverity errors; coverity 94049: class member not initialised. coverity 94053: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/385
https://github.com/root-project/root/pull/385:22,usability,error,errors,22,fixed 2 more coverity errors; coverity 94049: class member not initialised. coverity 94053: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/385
https://github.com/root-project/root/pull/386:15,deployability,build,build,15,Fix cxxmodules build failing because of rtti-requirement in Rtypes.h; This PR contains the approach with using config_macro to generate a RTTI and a non-RTTI module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:21,deployability,fail,failing,21,Fix cxxmodules build failing because of rtti-requirement in Rtypes.h; This PR contains the approach with using config_macro to generate a RTTI and a non-RTTI module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:78,deployability,contain,contains,78,Fix cxxmodules build failing because of rtti-requirement in Rtypes.h; This PR contains the approach with using config_macro to generate a RTTI and a non-RTTI module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:158,deployability,modul,module,158,Fix cxxmodules build failing because of rtti-requirement in Rtypes.h; This PR contains the approach with using config_macro to generate a RTTI and a non-RTTI module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:158,modifiability,modul,module,158,Fix cxxmodules build failing because of rtti-requirement in Rtypes.h; This PR contains the approach with using config_macro to generate a RTTI and a non-RTTI module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:21,reliability,fail,failing,21,Fix cxxmodules build failing because of rtti-requirement in Rtypes.h; This PR contains the approach with using config_macro to generate a RTTI and a non-RTTI module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:158,safety,modul,module,158,Fix cxxmodules build failing because of rtti-requirement in Rtypes.h; This PR contains the approach with using config_macro to generate a RTTI and a non-RTTI module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/388:0,energy efficiency,Adapt,Adapt,0,Adapt TTreeProcessorMT to use TThreadExecutor; This also abstracts TTreeProcessorMT from the tbb libraries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/388
https://github.com/root-project/root/pull/388:0,integrability,Adapt,Adapt,0,Adapt TTreeProcessorMT to use TThreadExecutor; This also abstracts TTreeProcessorMT from the tbb libraries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/388
https://github.com/root-project/root/pull/388:57,integrability,abstract,abstracts,57,Adapt TTreeProcessorMT to use TThreadExecutor; This also abstracts TTreeProcessorMT from the tbb libraries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/388
https://github.com/root-project/root/pull/388:0,interoperability,Adapt,Adapt,0,Adapt TTreeProcessorMT to use TThreadExecutor; This also abstracts TTreeProcessorMT from the tbb libraries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/388
https://github.com/root-project/root/pull/388:0,modifiability,Adapt,Adapt,0,Adapt TTreeProcessorMT to use TThreadExecutor; This also abstracts TTreeProcessorMT from the tbb libraries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/388
https://github.com/root-project/root/pull/388:57,modifiability,abstract,abstracts,57,Adapt TTreeProcessorMT to use TThreadExecutor; This also abstracts TTreeProcessorMT from the tbb libraries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/388
https://github.com/root-project/root/pull/389:155,availability,echo,echo,155,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:20,deployability,modul,modulemap,20,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:118,deployability,build,build,118,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:135,deployability,fail,fails,135,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:169,deployability,modul,modulemap,169,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:249,deployability,modul,modulemap,249,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:20,modifiability,modul,modulemap,20,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:169,modifiability,modul,modulemap,169,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:249,modifiability,modul,modulemap,249,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:30,reliability,doe,doesn,30,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:135,reliability,fail,fails,135,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:20,safety,modul,modulemap,20,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:169,safety,modul,modulemap,169,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/389:249,safety,modul,modulemap,249,This fixes that the modulemap doesn't get correctly copied.; It seems that execvp can't handle such longs args on the build nodes and. fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual. modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/390:0,energy efficiency,Adapt,Adapt,0,Adapt TTree::GetEntry to use TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/390
https://github.com/root-project/root/pull/390:0,integrability,Adapt,Adapt,0,Adapt TTree::GetEntry to use TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/390
https://github.com/root-project/root/pull/390:0,interoperability,Adapt,Adapt,0,Adapt TTree::GetEntry to use TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/390
https://github.com/root-project/root/pull/390:0,modifiability,Adapt,Adapt,0,Adapt TTree::GetEntry to use TThreadExecutor;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/390
https://github.com/root-project/root/pull/391:39,usability,document,documentation,39,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide; - Add PyMVA introduction and Keras documentation to TMVA Users Guide. - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:61,usability,User,Users,61,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide; - Add PyMVA introduction and Keras documentation to TMVA Users Guide. - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:67,usability,Guid,Guide,67,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide; - Add PyMVA introduction and Keras documentation to TMVA Users Guide. - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:109,usability,document,documentation,109,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide; - Add PyMVA introduction and Keras documentation to TMVA Users Guide. - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:131,usability,User,Users,131,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide; - Add PyMVA introduction and Keras documentation to TMVA Users Guide. - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:137,usability,Guid,Guide,137,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide; - Add PyMVA introduction and Keras documentation to TMVA Users Guide. - Set default options for PyKeras method correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/393:754,availability,failur,failures,754,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:130,deployability,build,build,130,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:257,deployability,build,build,257,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:344,deployability,instal,installed,344,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:354,deployability,version,version,354,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:466,deployability,instal,installed,466,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:532,deployability,instal,installed,532,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:592,deployability,instal,installed,592,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:665,deployability,configurat,configurations,665,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:700,deployability,build,build,700,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:754,deployability,fail,failures,754,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:883,energy efficiency,current,currently,883,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:354,integrability,version,version,354,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:665,integrability,configur,configurations,665,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:354,modifiability,version,version,354,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:665,modifiability,configur,configurations,665,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:754,performance,failur,failures,754,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:754,reliability,fail,failures,754,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:282,safety,avoid,avoid,282,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:691,safety,test,test,691,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:665,security,configur,configurations,665,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:691,testability,test,test,691,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:948,usability,progress,progress,948,"Add VecCore as an external project; This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/394:590,availability,mask,masks,590,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1284,deployability,instal,install,1284,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1367,deployability,instal,install,1367,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:791,integrability,transform,transformations,791,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:225,interoperability,Specif,Specifically,225,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:791,interoperability,transform,transformations,791,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:0,modifiability,Exten,Extend,0,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:79,modifiability,exten,extends,79,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:248,modifiability,Exten,Extends,248,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:461,modifiability,scal,scalar,461,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:479,modifiability,scenario,scenarios,479,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:893,modifiability,extens,extensive,893,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1115,modifiability,scal,scalar,1115,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:614,safety,avoid,avoid,614,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:636,safety,compl,complete,636,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1003,safety,test,tests,1003,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1047,safety,test,test,1047,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1164,safety,Test,Tested,1164,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:636,security,compl,complete,636,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:777,security,Rotat,Rotation,777,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1003,testability,test,tests,1003,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1040,testability,simpl,simple,1040,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1047,testability,test,test,1047,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1164,testability,Test,Tested,1164,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:41,usability,support,support,41,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:184,usability,support,support,184,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:714,usability,support,support,714,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1040,usability,simpl,simple,1040,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1200,usability,command,command,1200,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1260,usability,User,Users,1260,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1343,usability,User,Users,1343,"Extend templation in GenVector to better support vectorised Vc types.; This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types. 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/395:0,modifiability,Exten,Extend,0,Extend the use of TThreadExecutor in ROOT and fix documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/395
https://github.com/root-project/root/pull/395:50,usability,document,documentation,50,Extend the use of TThreadExecutor in ROOT and fix documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/395
https://github.com/root-project/root/pull/396:22,deployability,modul,modulemap,22,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:157,deployability,modul,modulemap,157,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:139,interoperability,format,formatting,139,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:22,modifiability,modul,modulemap,22,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:157,modifiability,modul,modulemap,157,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:32,performance,content,contents,32,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:51,performance,content,contents,51,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:22,safety,modul,modulemap,22,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:157,safety,modul,modulemap,157,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/396:104,usability,command,command,104,Fix generation of the modulemap contents.; The old contents still had the escaped newlines for the bash command in it. This also fixes the formatting of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/396
https://github.com/root-project/root/pull/397:191,energy efficiency,reduc,reduction,191,Add and apply the new TThreadExecutor::Foreach interface; This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/397
https://github.com/root-project/root/pull/397:47,integrability,interfac,interface,47,Add and apply the new TThreadExecutor::Foreach interface; This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/397
https://github.com/root-project/root/pull/397:75,integrability,interfac,interface,75,Add and apply the new TThreadExecutor::Foreach interface; This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/397
https://github.com/root-project/root/pull/397:47,interoperability,interfac,interface,47,Add and apply the new TThreadExecutor::Foreach interface; This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/397
https://github.com/root-project/root/pull/397:75,interoperability,interfac,interface,75,Add and apply the new TThreadExecutor::Foreach interface; This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/397
https://github.com/root-project/root/pull/397:47,modifiability,interfac,interface,47,Add and apply the new TThreadExecutor::Foreach interface; This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/397
https://github.com/root-project/root/pull/397:75,modifiability,interfac,interface,75,Add and apply the new TThreadExecutor::Foreach interface; This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/397
https://github.com/root-project/root/pull/398:19,availability,error,error,19,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:154,deployability,fail,fail,154,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:177,deployability,build,building,177,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:200,deployability,modul,modules,200,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:200,modifiability,modul,modules,200,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:19,performance,error,error,19,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:154,reliability,fail,fail,154,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:19,safety,error,error,19,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:167,safety,test,test,167,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:200,safety,modul,modules,200,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:167,testability,test,test,167,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/398:19,usability,error,error,19,"Fixed redifinition error on 'Compare'; We have another class with the name Compare in TMatrixTBase.h, so we add a. anonymous namespace here that we don't fail on this test when building with. enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/398
https://github.com/root-project/root/pull/399:54,availability,state,statement,54,Fixed 5 coverity bugs in 4 files; 68713: removed dead statement. 67156: set an uninitialised class member fNBins. 67100: set an uninitialised class member fNBins. 67054: copy paste error fixed. 63262: uninitialised class member fFuncPtr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/399
https://github.com/root-project/root/pull/399:181,availability,error,error,181,Fixed 5 coverity bugs in 4 files; 68713: removed dead statement. 67156: set an uninitialised class member fNBins. 67100: set an uninitialised class member fNBins. 67054: copy paste error fixed. 63262: uninitialised class member fFuncPtr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/399
https://github.com/root-project/root/pull/399:54,integrability,state,statement,54,Fixed 5 coverity bugs in 4 files; 68713: removed dead statement. 67156: set an uninitialised class member fNBins. 67100: set an uninitialised class member fNBins. 67054: copy paste error fixed. 63262: uninitialised class member fFuncPtr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/399
https://github.com/root-project/root/pull/399:181,performance,error,error,181,Fixed 5 coverity bugs in 4 files; 68713: removed dead statement. 67156: set an uninitialised class member fNBins. 67100: set an uninitialised class member fNBins. 67054: copy paste error fixed. 63262: uninitialised class member fFuncPtr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/399
https://github.com/root-project/root/pull/399:181,safety,error,error,181,Fixed 5 coverity bugs in 4 files; 68713: removed dead statement. 67156: set an uninitialised class member fNBins. 67100: set an uninitialised class member fNBins. 67054: copy paste error fixed. 63262: uninitialised class member fFuncPtr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/399
https://github.com/root-project/root/pull/399:181,usability,error,error,181,Fixed 5 coverity bugs in 4 files; 68713: removed dead statement. 67156: set an uninitialised class member fNBins. 67100: set an uninitialised class member fNBins. 67054: copy paste error fixed. 63262: uninitialised class member fFuncPtr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/399
https://github.com/root-project/root/pull/400:40,availability,failur,failure,40,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1350,availability,Error,Error,1350,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1399,availability,Error,Error,1399,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1494,availability,error,error,1494,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:40,deployability,fail,failure,40,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:138,deployability,Fail,Failed,138,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:878,deployability,FAIL,FAILED,878,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1380,deployability,FAIL,FAILED,1380,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1409,deployability,build,builddir,1409,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1418,deployability,build,build,1418,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1424,deployability,BUILD,BUILD,1424,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1449,deployability,modul,modules,1449,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1483,integrability,messag,message,1483,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1483,interoperability,messag,message,1483,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1449,modifiability,modul,modules,1449,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:40,performance,failur,failure,40,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1350,performance,Error,Error,1350,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1399,performance,Error,Error,1399,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1494,performance,error,error,1494,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:40,reliability,fail,failure,40,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:138,reliability,Fail,Failed,138,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:878,reliability,FAIL,FAILED,878,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1380,reliability,FAIL,FAILED,1380,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:8,safety,test,test,8,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:35,safety,test,test,35,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:65,safety,Test,Test,65,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:84,safety,test,testSpecFunc,84,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1350,safety,Error,Error,1350,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1375,safety,Test,Test,1375,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1399,safety,Error,Error,1399,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1449,safety,modul,modules,1449,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1494,safety,error,error,1494,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:8,testability,test,test,8,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:35,testability,test,test,35,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:65,testability,Test,Test,65,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:84,testability,test,testSpecFunc,84,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1375,testability,Test,Test,1375,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1350,usability,Error,Error,1350,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1399,usability,Error,Error,1399,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/400:1494,usability,error,error,1494,"Fix for test if i686; This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec. tgamma(9.0) :	 OK. lgamma(0.1) :	 OK. inc_gamma(1,0.001) :	 OK. inc_gamma(100,99) :	 OK. inc_gamma_c(100,99) :	 OK. inc_gamma_c(1000,1000.1) :	 OK. erf(0.5) :	 OK. erfc(-1.0) :	 OK. beta(1.0, 5.0) :	 OK. inc_beta(1,1,1) :	 OK. inc_beta(0.5,0.1,1.0) :	 OK. assoc_laguerre(4, 2, 0.5) :	 OK. assoc_legendre(10, 1, -0.5) :	 OK. comp_ellint_1(0.50) :	 OK. comp_ellint_2(0.50) :	 OK. comp_ellint_3(0.5, 0.5) :	 OK. conf_hyperg(1, 1.5, 1) :	 OK. cyl_bessel_i(1.0, 1.0) :	 OK. cyl_bessel_j(0.75, 1.0) :	 OK. cyl_bessel_k(1.0, 1.0) :	 OK. cyl_neumann(0.75, 1.0) :	 OK. ellint_1(0.50, PI/3.0) :	 OK. ellint_2(0.50, PI/3.0) :	 OK. ellint_3(-0.50, 0.5, PI/3.0) :	 OK. expint(1.0) :	 OK. hyperg(8, -8, 1, 0.5) :	 OK. laguerre(4, 1.) :	 FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). legendre(10, -0.5) :	 OK. riemann_zeta(-0.5) :	 OK. sph_bessel(1, 10.0) :	 OK. sph_legendre(3, 1, PI/2.) :	 OK. sph_neumann(0, 1.0) :	 OK. airy_Ai(-0.5) :	 OK. airy_Bi(0.5) :	 OK. airy_Ai_deriv(-2) :	 OK. airy_Bi_deriv(-3) :	 OK. airy_zero_Ai(2) :	 OK. airy_zero_Bi(2) :	 OK. airy_zero_Ai_deriv(2) :	 OK. airy_zero_Bi_deriv(2) :	 OK. Error: Special Functions Test FAILED !!!!! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/400
https://github.com/root-project/root/pull/401:40,availability,failur,failure,40,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:145,availability,Error,Error,145,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:201,availability,Error,Error,201,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:1127,availability,operat,operations,1127,...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		............,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:1169,availability,operat,operations,1169,d in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		............,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:1811,availability,operat,operations,1811,***********************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:1853,availability,operat,operations,1853,*****. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FA,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:2634,availability,operat,operations,2634,eation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		........,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:2678,availability,operat,operations,2678,ing 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		..........,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:2722,availability,operat,operations,2722,r3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		........,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:3618,availability,operat,operations,3618, XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoZPhiVector write 		................ OK. RhoZPhiVector read 		................ OK. RhoZPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:3660,availability,operat,operations,3660,EtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoZPhiVector write 		................ OK. RhoZPhiVector read 		................ OK. RhoZPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		................ OK. PxPyPzEVector write 		....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:4465,availability,operat,operations,4465,. OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoZPhiVector write 		................ OK. RhoZPhiVector read 		................ OK. RhoZPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiEVector write 		................ OK. PtEtaPhiEVector read 		................ OK. PtEtaPhiEVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:4509,availability,operat,operations,4509,K. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoZPhiVector write 		................ OK. RhoZPhiVector read 		................ OK. RhoZPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiEVector write 		................ OK. PtEtaPhiEVector read 		................ OK. PtEtaPhiEVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiMVector delta values 		...........,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:5350,availability,operat,operations,5350,xPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiEVector write 		................ OK. PtEtaPhiEVector read 		................ OK. PtEtaPhiEVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiMVector write 		................ OK. PtEtaPhiMVector read 		................ OK. PtEtaPhiMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. Px,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:5394,availability,operat,operations,5394,...... OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiEVector write 		................ OK. PtEtaPhiEVector read 		................ OK. PtEtaPhiEVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiMVector write 		................ OK. PtEtaPhiMVector read 		................ OK. PtEtaPhiMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PxPyPzMVector delta values 		................ ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:6233,availability,operat,operations,6233," PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiMVector write 		................ OK. PtEtaPhiMVector read 		................ OK. PtEtaPhiMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PxPyPzMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PxPyPzMVector write 		................ OK. PxPyPzMVector read 		................ OK. PxPyPzMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. ******************************************************************************. 	Test of SMatrix package. ******************************************************************************. SVector<double,3> creation 		................ OK. SVector<double,3> addition 		................ OK. SVector<double,3> write 		................ OK. SVector<double,3> read 		................ OK. SVector<double,3> after read 		..............",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:6275,availability,operat,operations,6275,".......... OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiMVector write 		................ OK. PtEtaPhiMVector read 		................ OK. PtEtaPhiMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PxPyPzMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PxPyPzMVector write 		................ OK. PxPyPzMVector read 		................ OK. PxPyPzMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. ******************************************************************************. 	Test of SMatrix package. ******************************************************************************. SVector<double,3> creation 		................ OK. SVector<double,3> addition 		................ OK. SVector<double,3> write 		................ OK. SVector<double,3> read 		................ OK. SVector<double,3> after read 		................ OK. SVector3_D32 write 		..............",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11410,availability,Error,Error,11410,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11505,availability,error,error,11505,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:40,deployability,fail,failure,40,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:138,deployability,Fail,Failed,138,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:194,deployability,FAIL,FAILED,194,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:479,deployability,log,lognormal,479,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:2856,deployability,FAIL,FAILED,2856,ions 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:9528,deployability,Compos,Composite,9528,",> creation 		................ OK. SMatrix<double,3,3,> addition 		................ OK. SMatrix<double,3,3,> write 		................ OK. SMatrix<double,3,3,> read 		................ OK. SMatrix<double,3,3,> after read 		................ OK. SMatrix<Double32_t,3,3,> write 		................ OK. SMatrix<Double32_t,3,3,> read 		................ OK. SMatrix<Double32_t,3,3,> after read 		................ OK. SMatrix<double,5,5,MatRepSym> creation 		................ OK. SMatrix<double,5,5,MatRepSym> addition 		................ OK. SMatrix<double,5,5,MatRepSym> write 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		............",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:9546,deployability,contain,containing,9546,"............ OK. SMatrix<double,3,3,> addition 		................ OK. SMatrix<double,3,3,> write 		................ OK. SMatrix<double,3,3,> read 		................ OK. SMatrix<double,3,3,> after read 		................ OK. SMatrix<Double32_t,3,3,> write 		................ OK. SMatrix<Double32_t,3,3,> read 		................ OK. SMatrix<Double32_t,3,3,> after read 		................ OK. SMatrix<double,5,5,MatRepSym> creation 		................ OK. SMatrix<double,5,5,MatRepSym> addition 		................ OK. SMatrix<double,5,5,MatRepSym> write 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11257,deployability,version,version,11257,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11394,deployability,Fail,Failed,11394,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11420,deployability,build,builddir,11420,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11429,deployability,build,build,11429,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11435,deployability,BUILD,BUILD,11435,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11460,deployability,modul,modules,11460,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11207,energy efficiency,Cpu,Cpu,11207,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11257,integrability,version,version,11257,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11494,integrability,messag,message,11494,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:226,interoperability,distribut,distribution,226,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:268,interoperability,distribut,distribution,268,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:314,interoperability,distribut,distribution,314,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:357,interoperability,distribut,distribution,357,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:405,interoperability,distribut,distribution,405,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:443,interoperability,distribut,distribution,443,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:489,interoperability,distribut,distribution,489,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:537,interoperability,distribut,distribution,537,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:580,interoperability,distribut,distribution,580,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:624,interoperability,distribut,distribution,624,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:1084,interoperability,convers,conversion,1084,hcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		............,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:1767,interoperability,convers,conversion,1767,or package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.6101,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:2590,interoperability,convers,conversion,2590,addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		........,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:3574,interoperability,convers,conversion,3574,OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoZPhiVector write 		................ OK. RhoZPhiVector read 		................ OK. RhoZPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.......,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:4417,interoperability,convers,conversion,4417,....... OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoZPhiVector write 		................ OK. RhoZPhiVector read 		................ OK. RhoZPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiEVector write 		................ OK. PtEtaPhiEVector read 		................ OK. PtEtaPhiEVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		...............,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:5302,interoperability,convers,conversion,5302,. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiEVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiEVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiEVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiEVector write 		................ OK. PtEtaPhiEVector read 		................ OK. PtEtaPhiEVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiMVector write 		................ OK. PtEtaPhiMVector read 		................ OK. PtEtaPhiMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:6185,interoperability,convers,conversion,6185,"OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PtEtaPhiMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PtEtaPhiMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PtEtaPhiMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PtEtaPhiMVector write 		................ OK. PtEtaPhiMVector read 		................ OK. PtEtaPhiMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PxPyPzMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PxPyPzMVector write 		................ OK. PxPyPzMVector read 		................ OK. PxPyPzMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. ******************************************************************************. 	Test of SMatrix package. ******************************************************************************. SVector<double,3> creation 		................ OK. SVector<double,3> addition 		................ OK. SVector<double,3> write 		................ OK. SVector<double,3> read 		................ O",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11494,interoperability,messag,message,11494,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:775,modifiability,pac,package,775,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:6911,modifiability,pac,package,6911,"ad 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PxPyPzMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PxPyPzMVector write 		................ OK. PxPyPzMVector read 		................ OK. PxPyPzMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. ******************************************************************************. 	Test of SMatrix package. ******************************************************************************. SVector<double,3> creation 		................ OK. SVector<double,3> addition 		................ OK. SVector<double,3> write 		................ OK. SVector<double,3> read 		................ OK. SVector<double,3> after read 		................ OK. SVector3_D32 write 		................ OK. SVector3_D32 read 		................ OK. SVector3_D32 after read 		................ OK. SVector<double,4> creation 		................ OK. SVector<double,4> addition 		................ OK. SVector<double,4> write 		................ OK. SVector<double,4> read 		................ OK. SVector<double,4> after read 		................ OK. SVector4_D32 write 		................ OK. SVector4_D32 read 		................ OK. SVector4_D32 after read 		................ OK. SVector<double,6> creation 		................ OK. SVector<double,6> addition 		................ OK. SVector<double,6> write 		................ OK. SVector<double,6> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:9528,modifiability,Compos,Composite,9528,",> creation 		................ OK. SMatrix<double,3,3,> addition 		................ OK. SMatrix<double,3,3,> write 		................ OK. SMatrix<double,3,3,> read 		................ OK. SMatrix<double,3,3,> after read 		................ OK. SMatrix<Double32_t,3,3,> write 		................ OK. SMatrix<Double32_t,3,3,> read 		................ OK. SMatrix<Double32_t,3,3,> after read 		................ OK. SMatrix<double,5,5,MatRepSym> creation 		................ OK. SMatrix<double,5,5,MatRepSym> addition 		................ OK. SMatrix<double,5,5,MatRepSym> write 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		............",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11257,modifiability,version,version,11257,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11460,modifiability,modul,modules,11460,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:40,performance,failur,failure,40,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:145,performance,Error,Error,145,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:201,performance,Error,Error,201,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11187,performance,Time,Time,11187,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11207,performance,Cpu,Cpu,11207,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11211,performance,Time,Time,11211,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11410,performance,Error,Error,11410,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11505,performance,error,error,11505,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:40,reliability,fail,failure,40,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:138,reliability,Fail,Failed,138,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:194,reliability,FAIL,FAILED,194,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:2856,reliability,FAIL,FAILED,2856,ions 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. Polar3DVector write 		................ OK. Polar3DVector read 		................ OK. Polar3DVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoEtaPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . XYZVector delta values 		.............. RhoEtaPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK. XYZVector after read 		................ OK. RhoEtaPhiVector write 		................ OK. RhoEtaPhiVector read 		................ OK. RhoEtaPhiVector after read 		................ OK. XYZVector_D32 write 		................ OK. XYZVector_D32 read 		................ OK. XYZVector_D32 after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> RhoZPhiVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. RhoZPhiVector operations 		................ OK. XYZVector delta values 		.............. RhoZPhiVector delta values 		................ OK. XYZVector write 		................ OK. XYZVector read 		................ OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11394,reliability,Fail,Failed,11394,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:8,safety,test,test,8,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:35,safety,test,test,35,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:65,safety,Test,Test,65,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:75,safety,test,test-stressmathcore,75,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:145,safety,Error,Error,145,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:201,safety,Error,Error,201,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:479,safety,log,lognormal,479,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:741,safety,Test,Test,741,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:6895,safety,Test,Test,6895,"ector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PxPyPzMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PxPyPzMVector write 		................ OK. PxPyPzMVector read 		................ OK. PxPyPzMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. ******************************************************************************. 	Test of SMatrix package. ******************************************************************************. SVector<double,3> creation 		................ OK. SVector<double,3> addition 		................ OK. SVector<double,3> write 		................ OK. SVector<double,3> read 		................ OK. SVector<double,3> after read 		................ OK. SVector3_D32 write 		................ OK. SVector3_D32 read 		................ OK. SVector3_D32 after read 		................ OK. SVector<double,4> creation 		................ OK. SVector<double,4> addition 		................ OK. SVector<double,4> write 		................ OK. SVector<double,4> read 		................ OK. SVector<double,4> after read 		................ OK. SVector4_D32 write 		................ OK. SVector4_D32 read 		................ OK. SVector4_D32 after read 		................ OK. SVector<double,6> creation 		................ OK. SVector<double,6> addition 		................ OK. SVector<double,6> write 		................ OK. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:9518,safety,Test,Test,9518,"ix<double,3,3,> creation 		................ OK. SMatrix<double,3,3,> addition 		................ OK. SMatrix<double,3,3,> write 		................ OK. SMatrix<double,3,3,> read 		................ OK. SMatrix<double,3,3,> after read 		................ OK. SMatrix<Double32_t,3,3,> write 		................ OK. SMatrix<Double32_t,3,3,> read 		................ OK. SMatrix<Double32_t,3,3,> after read 		................ OK. SMatrix<double,5,5,MatRepSym> creation 		................ OK. SMatrix<double,5,5,MatRepSym> addition 		................ OK. SMatrix<double,5,5,MatRepSym> write 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 	",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:9661,safety,Test,Test,9661,"... OK. SMatrix<double,3,3,> read 		................ OK. SMatrix<double,3,3,> after read 		................ OK. SMatrix<Double32_t,3,3,> write 		................ OK. SMatrix<Double32_t,3,3,> read 		................ OK. SMatrix<Double32_t,3,3,> after read 		................ OK. SMatrix<double,5,5,MatRepSym> creation 		................ OK. SMatrix<double,5,5,MatRepSym> addition 		................ OK. SMatrix<double,5,5,MatRepSym> write 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:10094,safety,test,test,10094,"rite 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. **********",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:10563,safety,test,test,10563,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11389,safety,Test,Test,11389,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11410,safety,Error,Error,11410,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11460,safety,modul,modules,11460,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11505,safety,error,error,11505,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:479,security,log,lognormal,479,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:8,testability,test,test,8,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:35,testability,test,test,35,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:65,testability,Test,Test,65,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:75,testability,test,test-stressmathcore,75,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:479,testability,log,lognormal,479,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:741,testability,Test,Test,741,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:6895,testability,Test,Test,6895,"ector_D32 after read 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector addition 		................ OK. PxPyPzEVector creation 		................ OK. PxPyPzEVector setting 		................ OK. PxPyPzEVector -> PxPyPzMVector 		................ OK. Vector conversion 		................ OK. PxPyPzEVector operations 		.............. PxPyPzMVector operations 		................ OK. PxPyPzEVector delta values 		.............. PxPyPzMVector delta values 		................ OK. PxPyPzEVector write 		................ OK. PxPyPzEVector read 		................ OK. PxPyPzEVector after read 		................ OK. PxPyPzMVector write 		................ OK. PxPyPzMVector read 		................ OK. PxPyPzMVector after read 		................ OK. PxPyPzEVector_D32 write 		................ OK. PxPyPzEVector_D32 read 		................ OK. PxPyPzEVector_D32 after read 		................ OK. ******************************************************************************. 	Test of SMatrix package. ******************************************************************************. SVector<double,3> creation 		................ OK. SVector<double,3> addition 		................ OK. SVector<double,3> write 		................ OK. SVector<double,3> read 		................ OK. SVector<double,3> after read 		................ OK. SVector3_D32 write 		................ OK. SVector3_D32 read 		................ OK. SVector3_D32 after read 		................ OK. SVector<double,4> creation 		................ OK. SVector<double,4> addition 		................ OK. SVector<double,4> write 		................ OK. SVector<double,4> read 		................ OK. SVector<double,4> after read 		................ OK. SVector4_D32 write 		................ OK. SVector4_D32 read 		................ OK. SVector4_D32 after read 		................ OK. SVector<double,6> creation 		................ OK. SVector<double,6> addition 		................ OK. SVector<double,6> write 		................ OK. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:9518,testability,Test,Test,9518,"ix<double,3,3,> creation 		................ OK. SMatrix<double,3,3,> addition 		................ OK. SMatrix<double,3,3,> write 		................ OK. SMatrix<double,3,3,> read 		................ OK. SMatrix<double,3,3,> after read 		................ OK. SMatrix<Double32_t,3,3,> write 		................ OK. SMatrix<Double32_t,3,3,> read 		................ OK. SMatrix<Double32_t,3,3,> after read 		................ OK. SMatrix<double,5,5,MatRepSym> creation 		................ OK. SMatrix<double,5,5,MatRepSym> addition 		................ OK. SMatrix<double,5,5,MatRepSym> write 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 	",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:9661,testability,Test,Test,9661,"... OK. SMatrix<double,3,3,> read 		................ OK. SMatrix<double,3,3,> after read 		................ OK. SMatrix<Double32_t,3,3,> write 		................ OK. SMatrix<Double32_t,3,3,> read 		................ OK. SMatrix<Double32_t,3,3,> after read 		................ OK. SMatrix<double,5,5,MatRepSym> creation 		................ OK. SMatrix<double,5,5,MatRepSym> addition 		................ OK. SMatrix<double,5,5,MatRepSym> write 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:10094,testability,test,test,10094,"rite 		................ OK. SMatrix<double,5,5,MatRepSym> read 		................ OK. SMatrix<double,5,5,MatRepSym> after read		................ OK. SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK. SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK. ******************************************************************************. 	Test of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. **********",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:10563,testability,test,test,10563,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11389,testability,Test,Test,11389,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:145,usability,Error,Error,145,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:201,usability,Error,Error,201,Fix for test if i686; This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec. Beta distribution 		................ OK. Gamma distribution 		................ OK. Chisquare distribution 		................ OK. Normal distribution 		................ OK. BreitWigner distribution 		................ OK. F distribution 		................ OK. lognormal distribution 		................ OK. Exponential distribution 		................ OK. Landau distribution 		................ OK. Uniform distribution 		................ OK. ******************************************************************************. 	Test of Physics Vector (GenVector package). ******************************************************************************. XYVector creation 		................ OK. XYVector addition 		................ OK. XYVector creation 		................ OK. XYVector setting 		................ OK. XYVector -> Polar2DVector 		................ OK. Vector conversion 		................ OK. XYVector operations 		.............. Polar2DVector operations 		................ OK. XYVector delta values 		.............. Polar2DVector delta values 		................ OK. XYVector write 		................ OK. XYVector read 		................ OK. XYVector after read 		................ OK. Polar2DVector write 		................ OK. Polar2DVector read 		................ OK. Polar2DVector after read 		................ OK. XYZVector creation 		................ OK. XYZVector addition 		................ OK. XYZVector creation 		................ OK. XYZVector setting 		................ OK. XYZVector -> Polar3DVector 		................ OK. Vector conversion 		................ OK. XYZVector operations 		.............. Polar3DVector operations 		................ OK. XYZVector delta values 		.............. Polar3DVector delta values 		................ OK. XYZVector write 		.....,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11410,usability,Error,Error,11410,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/401:11505,usability,error,error,11505,est of a Composite Object (containing Vector's and Matrices). ******************************************************************************. Test Using CINT library. TrackD creation 		................ OK. TrackD addition 		................ OK. TrackD write 		................ OK. TrackD read 		................ OK. TrackD after read 		................ OK. TrackD32 creation 		................ OK. TrackD32 addition 		................ OK. TrackD32 write 		................ OK. TrackD32 read 		................ OK. TrackD32 after read 		................ OK. TrackD32 Double32 test 		................ OK. TrackErrD creation 		................ OK. TrackErrD addition 		................ OK. TrackErrD write 		................ OK. TrackErrD read 		................ OK. TrackErrD after read 		................ OK. TrackErrD32 creation 		................ OK. TrackErrD32 addition 		................ OK. TrackErrD32 write 		................ OK. TrackErrD32 read 		................ OK. TrackErrD32 after read 		................ OK. TrackErrD32 Double32 test 		................ OK. VecTrack<TrackD> creation 		................ OK. VecTrack<TrackD> addition 		................ OK. VecTrack<TrackD> write 		................ OK. VecTrack<TrackD> read 		................ OK. VecTrack<TrackD> after read 		................ OK. VecTrack<TrackErrD> creation 		................ OK. VecTrack<TrackErrD> addition 		................ OK. VecTrack<TrackErrD> write 		................ OK. VecTrack<TrackErrD> read 		................ OK. VecTrack<TrackErrD> after read 		................ OK. ******************************************************************************. stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds. ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06. *******************************************************************************. stressMathCore Test Failed !! CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):. error code: 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/401
https://github.com/root-project/root/pull/402:5,availability,down,download,5,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:181,availability,down,downloads,181,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:269,availability,down,downloaded,269,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:435,availability,down,downloaded,435,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:519,availability,down,download,519,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:153,deployability,build,build,153,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:570,deployability,build,building,570,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:84,energy efficiency,current,currently,84,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:605,performance,network,network,605,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:14,safety,test,test,14,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:39,safety,test,test,39,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:65,safety,Test,TestData,65,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:232,safety,test,test,232,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:249,safety,test,test,249,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:323,safety,Test,TestData,323,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:383,safety,test,test-stressproof,383,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:492,safety,test,test,492,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:605,security,network,network,605,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:613,security,access,access,613,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:14,testability,test,test,14,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:39,testability,test,test,39,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:65,testability,Test,TestData,65,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:232,testability,test,test,232,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:249,testability,test,test,249,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:323,testability,Test,TestData,323,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:383,testability,test,test-stressproof,383,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/402:492,testability,test,test,492,"Only download test data if running the test that needs them; The TestData target is currently declared ALL, which means it is always executed during the build. However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/402
https://github.com/root-project/root/pull/403:58,availability,avail,available,58,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:189,performance,network,network,189,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:58,reliability,availab,available,58,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:58,safety,avail,available,58,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:175,safety,test,tests,175,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:58,security,availab,available,58,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:189,security,network,network,189,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:197,security,access,access,197,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/403:175,testability,test,tests,175,Try local file before trying remote file; These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/403
https://github.com/root-project/root/pull/404:98,availability,down,downloaded,98,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:9,performance,cach,cache,9,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:109,performance,cach,cache,109,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:207,performance,network,network,207,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:50,safety,test,testing,50,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:134,safety,test,tests,134,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:175,safety,test,tests,175,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:20,security,access,accessing,20,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:207,security,network,network,207,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:215,security,access,access,215,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:50,testability,test,testing,50,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:134,testability,test,tests,134,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/404:175,testability,test,tests,175,"Use file cache when accessing remote files during testing; This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/404
https://github.com/root-project/root/pull/406:0,availability,Restor,Restore,0,Restore s390x support in root-config; The s390x arch was lost from root-config. This restores the functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/406
https://github.com/root-project/root/pull/406:85,availability,restor,restores,85,Restore s390x support in root-config; The s390x arch was lost from root-config. This restores the functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/406
https://github.com/root-project/root/pull/406:0,reliability,Restor,Restore,0,Restore s390x support in root-config; The s390x arch was lost from root-config. This restores the functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/406
https://github.com/root-project/root/pull/406:85,reliability,restor,restores,85,Restore s390x support in root-config; The s390x arch was lost from root-config. This restores the functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/406
https://github.com/root-project/root/pull/406:14,usability,support,support,14,Restore s390x support in root-config; The s390x arch was lost from root-config. This restores the functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/406
https://github.com/root-project/root/pull/407:400,availability,echo,echo,400,"Fix for ROOT-8704: add begin/end of line matches in thisroot.sh and thisroot.csh; when removing old paths make sure that $path:, :$path and $path are only matched. at the beginning, at the end, or match the whole string. This fixes a problem with removing parts of a path. For example. ```. export ROOTSYS=/my/path. export LD_LIBRARY_PATH=/other/path:/my/path/lib:/my/path/lib/subdir. . thisroot.sh. echo $LD_LIBRARY_PATH. ```. would output the path to the root libraries followed by `:/other/path/subdir/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/407
https://github.com/root-project/root/pull/407:377,integrability,sub,subdir,377,"Fix for ROOT-8704: add begin/end of line matches in thisroot.sh and thisroot.csh; when removing old paths make sure that $path:, :$path and $path are only matched. at the beginning, at the end, or match the whole string. This fixes a problem with removing parts of a path. For example. ```. export ROOTSYS=/my/path. export LD_LIBRARY_PATH=/other/path:/my/path/lib:/my/path/lib/subdir. . thisroot.sh. echo $LD_LIBRARY_PATH. ```. would output the path to the root libraries followed by `:/other/path/subdir/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/407
https://github.com/root-project/root/pull/407:498,integrability,sub,subdir,498,"Fix for ROOT-8704: add begin/end of line matches in thisroot.sh and thisroot.csh; when removing old paths make sure that $path:, :$path and $path are only matched. at the beginning, at the end, or match the whole string. This fixes a problem with removing parts of a path. For example. ```. export ROOTSYS=/my/path. export LD_LIBRARY_PATH=/other/path:/my/path/lib:/my/path/lib/subdir. . thisroot.sh. echo $LD_LIBRARY_PATH. ```. would output the path to the root libraries followed by `:/other/path/subdir/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/407
https://github.com/root-project/root/pull/408:125,deployability,build,build,125,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:177,deployability,build,buildid,177,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:277,deployability,build,building,277,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:298,modifiability,extens,extensive,298,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:247,performance,time,time,247,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:19,safety,test,tests,19,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:48,safety,Test,Tests,48,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:220,safety,test,tests,220,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:308,safety,test,testing,308,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:427,safety,test,tests,427,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:19,testability,test,tests,19,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:48,testability,Test,Tests,48,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:220,testability,test,tests,220,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:308,testability,test,testing,308,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/408:427,testability,test,tests,427,"Label longtest for tests running over 1 minute; Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399. This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/408
https://github.com/root-project/root/pull/409:78,deployability,automat,automatically,78,"use TAttMarker enums in histpalettecolor tutorial; looking at the new ""Colors automatically picked in palette"" documentation, I thought it would be nicer if the tutorial advertises the human readable kFullCircle enum values instead of 21, 22, …",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/409
https://github.com/root-project/root/pull/409:78,testability,automat,automatically,78,"use TAttMarker enums in histpalettecolor tutorial; looking at the new ""Colors automatically picked in palette"" documentation, I thought it would be nicer if the tutorial advertises the human readable kFullCircle enum values instead of 21, 22, …",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/409
https://github.com/root-project/root/pull/409:111,usability,document,documentation,111,"use TAttMarker enums in histpalettecolor tutorial; looking at the new ""Colors automatically picked in palette"" documentation, I thought it would be nicer if the tutorial advertises the human readable kFullCircle enum values instead of 21, 22, …",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/409
https://github.com/root-project/root/pull/413:200,availability,echo,echo,200,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:6,deployability,instal,install,6,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:63,deployability,instal,installed,63,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:696,deployability,continu,continuing,696,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:489,energy efficiency,current,current,489,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:126,integrability,messag,message,126,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:126,interoperability,messag,message,126,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:90,reliability,doe,does,90,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:111,safety,except,except,111,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:401,security,sign,signals,401,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:454,security,sign,signal,454,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/413:497,usability,behavi,behavior,497,"Don't install a SIGPIPE handler; The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```. echo 'std::cout << ""foo"" << std::endl;' | root -l |& true. python -c 'import ROOT; print ""foo""' |& true. ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/413
https://github.com/root-project/root/pull/415:18,deployability,modul,modulemaps,18,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:38,deployability,infrastructur,infrastructure,38,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:71,deployability,modul,modulemaps,71,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:110,deployability,build,builds,110,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:153,deployability,modul,module,153,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:211,deployability,modul,module,211,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:218,deployability,build,builds,218,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:263,deployability,modul,modulemaps,263,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:324,deployability,modul,modulemaps,324,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:247,interoperability,specif,specify,247,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:18,modifiability,modul,modulemaps,18,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:71,modifiability,modul,modulemaps,71,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:153,modifiability,modul,module,153,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:211,modifiability,modul,module,211,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:263,modifiability,modul,modulemaps,263,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:324,modifiability,modul,modulemaps,324,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:18,safety,modul,modulemaps,18,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:71,safety,modul,modulemaps,71,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:153,safety,modul,module,153,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:211,safety,modul,module,211,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:263,safety,modul,modulemaps,263,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:277,safety,prevent,prevent,277,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:324,safety,modul,modulemaps,324,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/415:277,security,preven,prevent,277,Moved to explicit modulemaps; The old infrastructure of using implicit modulemaps wasn't suitable for nightly builds because other projects would create module maps for their own libraries which could break our module builds. So we now explicitly specify our own modulemaps to prevent from crashing due to bugs in unrelated modulemaps that may land in our include path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/415
https://github.com/root-project/root/pull/417:4,deployability,depend,dependency,4,Add dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/417
https://github.com/root-project/root/pull/417:4,integrability,depend,dependency,4,Add dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/417
https://github.com/root-project/root/pull/417:4,modifiability,depend,dependency,4,Add dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/417
https://github.com/root-project/root/pull/417:4,safety,depend,dependency,4,Add dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/417
https://github.com/root-project/root/pull/417:4,testability,depend,dependency,4,Add dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/417
https://github.com/root-project/root/pull/418:6,deployability,Updat,Update,6,"[TDF] Update user guide; - add Histo{2D,3D}, Profile{1D,2D} to docs. - Extra actions are now called Queries. - temporary branch -> temporary column. - Histo -> Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/418
https://github.com/root-project/root/pull/418:45,energy efficiency,Profil,Profile,45,"[TDF] Update user guide; - add Histo{2D,3D}, Profile{1D,2D} to docs. - Extra actions are now called Queries. - temporary branch -> temporary column. - Histo -> Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/418
https://github.com/root-project/root/pull/418:45,performance,Profil,Profile,45,"[TDF] Update user guide; - add Histo{2D,3D}, Profile{1D,2D} to docs. - Extra actions are now called Queries. - temporary branch -> temporary column. - Histo -> Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/418
https://github.com/root-project/root/pull/418:6,safety,Updat,Update,6,"[TDF] Update user guide; - add Histo{2D,3D}, Profile{1D,2D} to docs. - Extra actions are now called Queries. - temporary branch -> temporary column. - Histo -> Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/418
https://github.com/root-project/root/pull/418:6,security,Updat,Update,6,"[TDF] Update user guide; - add Histo{2D,3D}, Profile{1D,2D} to docs. - Extra actions are now called Queries. - temporary branch -> temporary column. - Histo -> Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/418
https://github.com/root-project/root/pull/418:13,usability,user,user,13,"[TDF] Update user guide; - add Histo{2D,3D}, Profile{1D,2D} to docs. - Extra actions are now called Queries. - temporary branch -> temporary column. - Histo -> Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/418
https://github.com/root-project/root/pull/418:18,usability,guid,guide,18,"[TDF] Update user guide; - add Histo{2D,3D}, Profile{1D,2D} to docs. - Extra actions are now called Queries. - temporary branch -> temporary column. - Histo -> Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/418
https://github.com/root-project/root/pull/420:6,deployability,depend,dependencies,6,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:222,deployability,build,build,222,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:6,integrability,depend,dependencies,6,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:6,modifiability,depend,dependencies,6,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:6,safety,depend,dependencies,6,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:192,safety,test,testDetails,192,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:208,safety,test,test,208,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:6,testability,depend,dependencies,6,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:192,testability,test,testDetails,192,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/420:208,testability,test,test,208,"Fixed dependencies for TMVA tutorials; This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/420
https://github.com/root-project/root/pull/421:145,modifiability,Layer,Layer,145,"Remove ""using namespace"" from TMVA/MethodDNN.h; The `using namespace` in the top level of `TMVA/MethodDNN.h` imported. generic names like `class Layer` into the global scope. This fixes ROOT-8713.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/421
https://github.com/root-project/root/pull/423:691,availability,Operat,Operation,691,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:277,deployability,log,logically,277,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1168,deployability,depend,depends,1168,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1266,deployability,depend,dependency,1266,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1457,deployability,depend,dependency,1457,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1565,deployability,depend,dependency,1565,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1061,energy efficiency,green,green-lit,1061,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:79,integrability,Sub,Submitting,79,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1168,integrability,depend,depends,1168,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1266,integrability,depend,dependency,1266,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1457,integrability,depend,dependency,1457,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1565,integrability,depend,dependency,1565,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:129,interoperability,platform,platforms,129,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:816,interoperability,format,format,816,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:999,interoperability,format,formatting,999,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1168,modifiability,depend,depends,1168,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1266,modifiability,depend,dependency,1266,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1457,modifiability,depend,dependency,1457,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1565,modifiability,depend,dependency,1565,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:117,safety,test,test,117,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:156,safety,test,tests,156,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:277,safety,log,logically,277,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1168,safety,depend,depends,1168,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1266,safety,depend,dependency,1266,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1457,safety,depend,dependency,1457,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1565,safety,depend,dependency,1565,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:277,security,log,logically,277,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:117,testability,test,test,117,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:156,testability,test,tests,156,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:277,testability,log,logically,277,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:924,testability,plan,plan,924,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1168,testability,depend,depends,1168,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1266,testability,depend,dependency,1266,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1457,testability,depend,dependency,1457,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1565,testability,depend,dependency,1565,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:69,usability,progress,progress,69,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:104,usability,feedback,feedback,104,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:763,usability,help,helper,763,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:789,usability,help,helpers,789,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/423:1364,usability,help,helper,1364,"[TDF] Split TDataFrame.hxx into multiple files; This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`. - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`. - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`. - `TActionResultProxy.hxx`: class `TActionResultProxy`. - `TDFOperations.{hxx,cxx}`: all `*Operation` classes. - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**. - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency. - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`. - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`. - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/423
https://github.com/root-project/root/pull/424:52,modifiability,paramet,parameter,52,[DOC] Let doxygen document EnableImplicitMT default parameter; @couet and I agreed this was a reasonable solution to the problem of ROOT not documenting that `EnableImplicitMT` has a default value for the `numThreads` parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/424
https://github.com/root-project/root/pull/424:218,modifiability,paramet,parameter,218,[DOC] Let doxygen document EnableImplicitMT default parameter; @couet and I agreed this was a reasonable solution to the problem of ROOT not documenting that `EnableImplicitMT` has a default value for the `numThreads` parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/424
https://github.com/root-project/root/pull/424:18,usability,document,document,18,[DOC] Let doxygen document EnableImplicitMT default parameter; @couet and I agreed this was a reasonable solution to the problem of ROOT not documenting that `EnableImplicitMT` has a default value for the `numThreads` parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/424
https://github.com/root-project/root/pull/424:141,usability,document,documenting,141,[DOC] Let doxygen document EnableImplicitMT default parameter; @couet and I agreed this was a reasonable solution to the problem of ROOT not documenting that `EnableImplicitMT` has a default value for the `numThreads` parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/424
https://github.com/root-project/root/pull/425:20,deployability,modul,modulemap,20,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:41,deployability,configurat,configuration,41,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:74,deployability,build,builds,74,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:81,deployability,fail,fail,81,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:110,deployability,modul,modulemap,110,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:139,deployability,fail,failed,139,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:153,deployability,configurat,configuration,153,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:66,energy efficiency,current,current,66,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:41,integrability,configur,configuration,41,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:153,integrability,configur,configuration,153,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:20,modifiability,modul,modulemap,20,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:41,modifiability,configur,configuration,41,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:110,modifiability,modul,modulemap,110,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:153,modifiability,configur,configuration,153,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:55,performance,time,time,55,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:167,performance,time,time,167,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:81,reliability,fail,fail,81,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:139,reliability,fail,failed,139,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:20,safety,modul,modulemap,20,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:104,safety,valid,valid,104,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:110,safety,modul,modulemap,110,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:134,safety,test,test,134,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:41,security,configur,configuration,41,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:153,security,configur,configuration,153,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/425:134,testability,test,test,134,Copy the stl.cppmap modulemap now during configuration time.; The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/425
https://github.com/root-project/root/pull/426:11,deployability,depend,dependencies,11,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:176,deployability,depend,depend,176,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:250,deployability,depend,depend,250,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:374,deployability,depend,depend,374,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:11,integrability,depend,dependencies,11,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:176,integrability,depend,depend,176,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:250,integrability,depend,depend,250,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:374,integrability,depend,depend,374,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:11,modifiability,depend,dependencies,11,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:176,modifiability,depend,depend,176,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:250,modifiability,depend,depend,250,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:374,modifiability,depend,depend,374,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:102,performance,parallel,parallel,102,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:288,performance,parallel,parallel,288,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:11,safety,depend,dependencies,11,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:42,safety,avoid,avoiding,42,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:176,safety,depend,depend,176,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:250,safety,depend,depend,250,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:374,safety,depend,depend,374,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:11,testability,depend,dependencies,11,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:176,testability,depend,depend,176,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:250,testability,depend,depend,250,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/426:374,testability,depend,depend,374,"Cleaned up dependencies for TMVA tuts for avoiding race conditions; Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/426
https://github.com/root-project/root/pull/427:102,safety,test,test,102,"Fixes some final 'after merge' comments in PR #394; Changes the enable_if pattern in the Vc Genvector test application, to match the changes made in #394 during review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/427
https://github.com/root-project/root/pull/427:161,safety,review,review,161,"Fixes some final 'after merge' comments in PR #394; Changes the enable_if pattern in the Vc Genvector test application, to match the changes made in #394 during review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/427
https://github.com/root-project/root/pull/427:102,testability,test,test,102,"Fixes some final 'after merge' comments in PR #394; Changes the enable_if pattern in the Vc Genvector test application, to match the changes made in #394 during review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/427
https://github.com/root-project/root/pull/427:161,testability,review,review,161,"Fixes some final 'after merge' comments in PR #394; Changes the enable_if pattern in the Vc Genvector test application, to match the changes made in #394 during review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/427
https://github.com/root-project/root/pull/428:281,safety,Test,Tested,281,"Added hint path for ccache for Mac nodes; Previously, CMake would ignore the path on Mac nodes since Mac enables the flag macos_native which ignores paths under `/sw`, `/opt/local`, and `/usr/local` when calling `find_program`. Providing the path as a hint makes it find ccache. . Tested on macitois13.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/428
https://github.com/root-project/root/pull/428:281,testability,Test,Tested,281,"Added hint path for ccache for Mac nodes; Previously, CMake would ignore the path on Mac nodes since Mac enables the flag macos_native which ignores paths under `/sw`, `/opt/local`, and `/usr/local` when calling `find_program`. Providing the path as a hint makes it find ccache. . Tested on macitois13.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/428
https://github.com/root-project/root/pull/428:6,usability,hint,hint,6,"Added hint path for ccache for Mac nodes; Previously, CMake would ignore the path on Mac nodes since Mac enables the flag macos_native which ignores paths under `/sw`, `/opt/local`, and `/usr/local` when calling `find_program`. Providing the path as a hint makes it find ccache. . Tested on macitois13.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/428
https://github.com/root-project/root/pull/428:252,usability,hint,hint,252,"Added hint path for ccache for Mac nodes; Previously, CMake would ignore the path on Mac nodes since Mac enables the flag macos_native which ignores paths under `/sw`, `/opt/local`, and `/usr/local` when calling `find_program`. Providing the path as a hint makes it find ccache. . Tested on macitois13.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/428
https://github.com/root-project/root/pull/429:242,reliability,doe,does,242,Temp workaround for ccache home dir issue; Ccache has an issue reading the config file on some Linux distros when using an invalid kerberos ticket. For some reason it will attempt to access a ccache config file in the home directory which it does does not have permission to do causing ccache to exit. Approach suggested by @dpiparo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/429
https://github.com/root-project/root/pull/429:247,reliability,doe,does,247,Temp workaround for ccache home dir issue; Ccache has an issue reading the config file on some Linux distros when using an invalid kerberos ticket. For some reason it will attempt to access a ccache config file in the home directory which it does does not have permission to do causing ccache to exit. Approach suggested by @dpiparo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/429
https://github.com/root-project/root/pull/429:261,safety,permiss,permission,261,Temp workaround for ccache home dir issue; Ccache has an issue reading the config file on some Linux distros when using an invalid kerberos ticket. For some reason it will attempt to access a ccache config file in the home directory which it does does not have permission to do causing ccache to exit. Approach suggested by @dpiparo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/429
https://github.com/root-project/root/pull/429:183,security,access,access,183,Temp workaround for ccache home dir issue; Ccache has an issue reading the config file on some Linux distros when using an invalid kerberos ticket. For some reason it will attempt to access a ccache config file in the home directory which it does does not have permission to do causing ccache to exit. Approach suggested by @dpiparo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/429
https://github.com/root-project/root/pull/430:136,deployability,patch,patch,136,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:263,deployability,patch,patch,263,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:156,modifiability,pac,package,156,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:136,safety,patch,patch,136,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:263,safety,patch,patch,263,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:342,safety,review,reviews,342,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:136,security,patch,patch,136,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:263,security,patch,patch,263,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/430:342,testability,review,reviews,342,Fix relocation problems in Aarch64 (backport); This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/430
https://github.com/root-project/root/pull/431:0,deployability,Updat,Update,0,Update Enable If pattern in GenVector Vc test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/431
https://github.com/root-project/root/pull/431:0,safety,Updat,Update,0,Update Enable If pattern in GenVector Vc test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/431
https://github.com/root-project/root/pull/431:41,safety,test,test,41,Update Enable If pattern in GenVector Vc test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/431
https://github.com/root-project/root/pull/431:0,security,Updat,Update,0,Update Enable If pattern in GenVector Vc test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/431
https://github.com/root-project/root/pull/431:41,testability,test,test,41,Update Enable If pattern in GenVector Vc test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/431
https://github.com/root-project/root/pull/432:128,integrability,coupl,couple,128,[TDF] Resolve open issues of PR #423; With these commits the reshuffling of methods and objects between files should be over. A couple of layering issues have been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/432
https://github.com/root-project/root/pull/432:128,modifiability,coupl,couple,128,[TDF] Resolve open issues of PR #423; With these commits the reshuffling of methods and objects between files should be over. A couple of layering issues have been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/432
https://github.com/root-project/root/pull/432:138,modifiability,layer,layering,138,[TDF] Resolve open issues of PR #423; With these commits the reshuffling of methods and objects between files should be over. A couple of layering issues have been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/432
https://github.com/root-project/root/pull/432:128,testability,coupl,couple,128,[TDF] Resolve open issues of PR #423; With these commits the reshuffling of methods and objects between files should be over. A couple of layering issues have been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/432
https://github.com/root-project/root/pull/433:129,deployability,depend,depends,129,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/433:129,integrability,depend,depends,129,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/433:129,modifiability,depend,depends,129,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/433:129,safety,depend,depends,129,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/433:82,testability,simpl,simplification,82,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/433:129,testability,depend,depends,129,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/433:58,usability,undo,undoes,58,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/433:82,usability,simpl,simplification,82,Revert #e089bc3 and ignore tmva tutorials on ARM; This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/433
https://github.com/root-project/root/pull/435:53,deployability,resourc,resources,53,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/435:0,energy efficiency,Optim,Optimized,0,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/435:31,energy efficiency,Reduc,Reduces,31,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/435:53,energy efficiency,resourc,resources,53,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/435:0,performance,Optimiz,Optimized,0,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/435:53,performance,resourc,resources,53,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/435:53,safety,resourc,resources,53,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/435:53,testability,resourc,resources,53,"Optimized some TMVA tutorials; Reduces the amount of resources (population size, cycles, steps, etc.) required for TMVA tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/435
https://github.com/root-project/root/pull/436:9,deployability,patch,patches,9,"V6 08 00 patches; Per conversion with Philippe, this pull request includes cherry-picked fixes for #ROOT-8714 and #ROOT-8222 from the master branch, which applied clean.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/436
https://github.com/root-project/root/pull/436:22,interoperability,convers,conversion,22,"V6 08 00 patches; Per conversion with Philippe, this pull request includes cherry-picked fixes for #ROOT-8714 and #ROOT-8222 from the master branch, which applied clean.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/436
https://github.com/root-project/root/pull/436:9,safety,patch,patches,9,"V6 08 00 patches; Per conversion with Philippe, this pull request includes cherry-picked fixes for #ROOT-8714 and #ROOT-8222 from the master branch, which applied clean.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/436
https://github.com/root-project/root/pull/436:9,security,patch,patches,9,"V6 08 00 patches; Per conversion with Philippe, this pull request includes cherry-picked fixes for #ROOT-8714 and #ROOT-8222 from the master branch, which applied clean.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/436
https://github.com/root-project/root/pull/437:45,availability,error,error,45,[BOT] Minor improvements to clang-format-bot error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/437
https://github.com/root-project/root/pull/437:51,integrability,messag,message,51,[BOT] Minor improvements to clang-format-bot error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/437
https://github.com/root-project/root/pull/437:34,interoperability,format,format-bot,34,[BOT] Minor improvements to clang-format-bot error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/437
https://github.com/root-project/root/pull/437:51,interoperability,messag,message,51,[BOT] Minor improvements to clang-format-bot error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/437
https://github.com/root-project/root/pull/437:45,performance,error,error,45,[BOT] Minor improvements to clang-format-bot error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/437
https://github.com/root-project/root/pull/437:45,safety,error,error,45,[BOT] Minor improvements to clang-format-bot error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/437
https://github.com/root-project/root/pull/437:45,usability,error,error,45,[BOT] Minor improvements to clang-format-bot error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/437
https://github.com/root-project/root/pull/438:257,deployability,patch,patch,257,"Ignore tutorial-tmva-TMVAMulticlass on ARM; A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/438
https://github.com/root-project/root/pull/438:61,energy efficiency,optim,optimization,61,"Ignore tutorial-tmva-TMVAMulticlass on ARM; A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/438
https://github.com/root-project/root/pull/438:181,energy efficiency,optim,optimizing,181,"Ignore tutorial-tmva-TMVAMulticlass on ARM; A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/438
https://github.com/root-project/root/pull/438:61,performance,optimiz,optimization,61,"Ignore tutorial-tmva-TMVAMulticlass on ARM; A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/438
https://github.com/root-project/root/pull/438:181,performance,optimiz,optimizing,181,"Ignore tutorial-tmva-TMVAMulticlass on ARM; A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/438
https://github.com/root-project/root/pull/438:257,safety,patch,patch,257,"Ignore tutorial-tmva-TMVAMulticlass on ARM; A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/438
https://github.com/root-project/root/pull/438:257,security,patch,patch,257,"Ignore tutorial-tmva-TMVAMulticlass on ARM; A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/438
https://github.com/root-project/root/pull/439:10,deployability,scale,scale,10,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:77,deployability,fail,failing,77,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:149,deployability,build,build,149,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:10,energy efficiency,scale,scale,10,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:10,modifiability,scal,scale,10,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:10,performance,scale,scale,10,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:77,reliability,fail,failing,77,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:85,safety,test,test,85,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:119,safety,test,testDetails,119,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:135,safety,test,test,135,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:85,testability,test,test,85,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:119,testability,test,testDetails,119,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/439:135,testability,test,test,135,Increased scale/discrepancy for ARM on stressMathCore; This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/439
https://github.com/root-project/root/pull/442:375,deployability,log,logic,375,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:6,energy efficiency,optim,optimizations,6,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:157,energy efficiency,optim,optimization,157,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:27,integrability,event,event,27,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:126,integrability,event,event,126,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:259,integrability,Filter,Filter,259,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:415,integrability,Filter,Filter,415,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:583,integrability,interfac,interface,583,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:492,interoperability,share,shared,492,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:583,interoperability,interfac,interface,583,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:583,modifiability,interfac,interface,583,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:6,performance,optimiz,optimizations,6,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:157,performance,optimiz,optimization,157,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:930,performance,memor,memory,930,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:375,safety,log,logic,375,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:822,safety,valid,validity,822,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:375,security,log,logic,375,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:375,testability,log,logic,375,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:216,usability,behavi,behaviour,216,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/442:930,usability,memor,memory,930,"[TDF] optimizations to the event loop; In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`. `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s. `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/442
https://github.com/root-project/root/pull/443:234,deployability,releas,released,234,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/443:198,energy efficiency,optim,optimisation,198,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/443:221,integrability,sub,subsequently,221,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/443:51,performance,Cach,Caches,51,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/443:127,performance,cach,cache,127,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/443:177,performance,memor,memory,177,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/443:142,security,access,access,142,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/443:177,usability,memor,memory,177,"Fix GA evalutation of multiclass cuts taking long; Caches and precomputes data for this calculation, resulting in a. much more cache friendly access pattern. Leads to increased memory. usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/443
https://github.com/root-project/root/pull/444:12,integrability,transform,transformations,12,[TDF] Range transformations;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/444
https://github.com/root-project/root/pull/444:12,interoperability,transform,transformations,12,[TDF] Range transformations;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/444
https://github.com/root-project/root/pull/445:584,availability,error,error,584,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:16,deployability,depend,dependent,16,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:16,integrability,depend,dependent,16,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:16,modifiability,depend,dependent,16,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:584,performance,error,error,584,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:16,safety,depend,dependent,16,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:584,safety,error,error,584,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:16,testability,depend,dependent,16,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/445:584,usability,error,error,584,"Enable argument dependent lookup (ADL) in math.; This allows the header files to spell the std math functions unqualified and. this way to allow template instantiations with vector types to swap them with. vector functions. Consider:. ```cpp. namespace N {. void call(double);. }. inline namespace __1 {. using N::call; // Enables ADL in a nicer and more transparent way. template <class T>. struct S {. int f() {. using namespace N; // enables ADL but it looks ugly... call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error. return 42;. }. };. }. namespace N {. struct V{};. void call(V);. }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/445
https://github.com/root-project/root/pull/446:12,integrability,event,event,12,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:64,integrability,interfac,interface,64,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:102,integrability,event,event,102,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:64,interoperability,interfac,interface,64,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:64,modifiability,interfac,interface,64,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:117,safety,avoid,avoid,117,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:160,safety,test,tests,160,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:160,testability,test,tests,160,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/446:42,usability,support,support,42,"ROOTR fixed event loop; Hi Guys,. * Added support to check if R interface is running in the thread of event loop, to avoid segfault in scientific linux running tests. * Fixed some datatypes according to coding conventions. Cheers,. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/446
https://github.com/root-project/root/pull/448:72,availability,echo,echo,72,"[BOT] Fix clang-format-bot message; Sorry @vgvassilev, I forgot to let `echo` escape the tabs :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/448
https://github.com/root-project/root/pull/448:27,integrability,messag,message,27,"[BOT] Fix clang-format-bot message; Sorry @vgvassilev, I forgot to let `echo` escape the tabs :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/448
https://github.com/root-project/root/pull/448:16,interoperability,format,format-bot,16,"[BOT] Fix clang-format-bot message; Sorry @vgvassilev, I forgot to let `echo` escape the tabs :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/448
https://github.com/root-project/root/pull/448:27,interoperability,messag,message,27,"[BOT] Fix clang-format-bot message; Sorry @vgvassilev, I forgot to let `echo` escape the tabs :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/448
https://github.com/root-project/root/pull/449:54,interoperability,format,formatting,54,[TDF] Add ranges to user guide + a little bit of code formatting;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/449
https://github.com/root-project/root/pull/449:20,usability,user,user,20,[TDF] Add ranges to user guide + a little bit of code formatting;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/449
https://github.com/root-project/root/pull/449:25,usability,guid,guide,25,[TDF] Add ranges to user guide + a little bit of code formatting;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/449
https://github.com/root-project/root/pull/450:300,deployability,build,build,300,"Fix inf loop in test on arm; There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/450
https://github.com/root-project/root/pull/450:213,energy efficiency,optim,optimisation,213,"Fix inf loop in test on arm; There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/450
https://github.com/root-project/root/pull/450:67,interoperability,platform,platform,67,"Fix inf loop in test on arm; There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/450
https://github.com/root-project/root/pull/450:16,safety,test,test,16,"Fix inf loop in test on arm; There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/450
https://github.com/root-project/root/pull/450:326,security,access,access,326,"Fix inf loop in test on arm; There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/450
https://github.com/root-project/root/pull/450:375,security,team,team,375,"Fix inf loop in test on arm; There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/450
https://github.com/root-project/root/pull/450:16,testability,test,test,16,"Fix inf loop in test on arm; There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/450
https://github.com/root-project/root/pull/451:25,safety,test,testing,25,Add support for gtest if testing is enabled.; Add unit tests for TQObject as an example for further reference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/451
https://github.com/root-project/root/pull/451:55,safety,test,tests,55,Add support for gtest if testing is enabled.; Add unit tests for TQObject as an example for further reference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/451
https://github.com/root-project/root/pull/451:25,testability,test,testing,25,Add support for gtest if testing is enabled.; Add unit tests for TQObject as an example for further reference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/451
https://github.com/root-project/root/pull/451:50,testability,unit,unit,50,Add support for gtest if testing is enabled.; Add unit tests for TQObject as an example for further reference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/451
https://github.com/root-project/root/pull/451:55,testability,test,tests,55,Add support for gtest if testing is enabled.; Add unit tests for TQObject as an example for further reference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/451
https://github.com/root-project/root/pull/451:4,usability,support,support,4,Add support for gtest if testing is enabled.; Add unit tests for TQObject as an example for further reference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/451
https://github.com/root-project/root/pull/452:166,deployability,log,logging,166,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/452:199,modifiability,layer,layer,199,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/452:354,modifiability,layer,layer,354,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/452:166,safety,log,logging,166,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/452:240,safety,test,testPattern,240,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/452:166,security,log,logging,166,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/452:166,testability,log,logging,166,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/452:240,testability,test,testPattern,240,"Root 8563 fix out of bounds index; fixed crash from the issue tracker ROOT-8563. ""TMVA Multiclass example crash when running with argument ""DNN"""". The problem during logging the output from the last layer, due to the difference of sizes of testPattern and Output. Now the code takes into account the fact that there may be multiple outputs from the last layer of the Neural Net.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/452
https://github.com/root-project/root/pull/453:41,availability,operat,operator,41,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:461,availability,error,error,461,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:600,availability,error,error,600,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:621,availability,operat,operator,621,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:974,availability,error,error,974,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:995,availability,operat,operator,995,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:1270,availability,operat,operator,1270,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:1357,availability,operat,operation,1357,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:101,deployability,updat,update,101,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:180,deployability,updat,update,180,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:291,deployability,build,build,291,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:373,deployability,log,logs,373,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:378,deployability,build,build,378,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:477,deployability,build,build,477,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:491,deployability,build,build-new,491,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:519,deployability,build,builds,519,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:526,deployability,build,build,526,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:532,deployability,build,build,532,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:851,deployability,build,build,851,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:865,deployability,build,build-new,865,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:893,deployability,build,builds,893,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:900,deployability,build,build,900,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:906,deployability,build,build,906,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:111,modifiability,exten,extend,111,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:1301,modifiability,exten,extended,1301,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:461,performance,error,error,461,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:600,performance,error,error,600,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:974,performance,error,error,974,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:101,safety,updat,update,101,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:180,safety,updat,update,180,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:303,safety,test,tests,303,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:373,safety,log,logs,373,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:461,safety,error,error,461,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:600,safety,error,error,600,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:974,safety,error,error,974,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:1327,safety,test,test,1327,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:1414,safety,test,tests,1414,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:101,security,updat,update,101,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:180,security,updat,update,180,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:373,security,log,logs,373,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:67,testability,regress,regression,67,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:248,testability,regress,regression,248,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:303,testability,test,tests,303,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:373,testability,log,logs,373,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:1327,testability,test,test,1327,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:1414,testability,test,tests,1414,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:461,usability,error,error,461,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:600,usability,error,error,600,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
https://github.com/root-project/root/pull/453:974,usability,error,error,974,"Fix Transform3D * Plane3D multiplication operator; This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'). 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/453
