id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/8518:3065,modifiability,Modul,Module,3065,"ore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Modul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3135,modifiability,Modul,Module,3135,"included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3167,modifiability,Modul,Module,3167,"3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3189,modifiability,Modul,Module,3189,"rom /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3258,modifiability,Modul,Module,3258,"/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3290,modifiability,Modul,Module,3290,"ude/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3316,modifiability,Modul,Module,3316,"error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3434,modifiability,modul,module,3434,"~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3590,modifiability,modul,module,3590," fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3625,modifiability,Modul,Module,3625,"t, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3654,modifiability,Modul,Module,3654," -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3684,modifiability,Modul,Module,3684,"nues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3744,modifiability,Modul,Module,3744, <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /ho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3775,modifiability,Modul,Module,3775,luder >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3796,modifiability,Modul,Module,3796,ilding module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3891,modifiability,Modul,Module,3891,<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3975,modifiability,Modul,Module,3975,Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4063,modifiability,Modul,Module,4063,odule test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finish,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4092,modifiability,Modul,Module,4092,nt81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4148,modifiability,Modul,Module,4148,.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to abov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4166,modifiability,Modul,Module,4166,dule lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4222,modifiability,Modul,Module,4222,�:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4240,modifiability,Modul,Module,4240,�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4275,modifiability,Modul,Module,4275, not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4328,modifiability,Modul,Module,4328,'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4349,modifiability,Modul,Module,4349,��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4356,modifiability,modul,module,4356,�(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4374,modifiability,Modul,Module,4374,<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4418,modifiability,Modul,Module,4418,rk: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4436,modifiability,Modul,Module,4436,e 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module Fit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4454,modifiability,Modul,Module,4454,ome/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4488,modifiability,Modul,Module,4488,/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not fou,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4527,modifiability,Modul,Module,4527,ng interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Mod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4916,modifiability,modul,module,4916,�2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/minicon,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5078,modifiability,modul,module,5078,not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5247,modifiability,modul,module,5247,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5397,modifiability,modul,module,5397,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5429,modifiability,Modul,Module,5429,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5458,modifiability,Modul,Module,5458,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5495,modifiability,Modul,Module,5495,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5527,modifiability,Modul,Module,5527,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2319,performance,error,error,2319,"orted from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4595,performance,Error,Error,4595,Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4613,performance,Load,LoadPCM,4613,build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/li,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4707,performance,Error,Error,4707,�ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4725,performance,Load,LoadPCM,4725,\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/li,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5545,performance,Error,Error,5545,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5563,performance,Load,LoadPCM,5563,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5657,performance,Error,Error,5657,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5675,performance,Load,LoadPCM,5675,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5863,performance,Error,Error,5863,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5881,performance,Load,LoadPCM,5881,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5975,performance,Error,Error,5975,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5993,performance,Load,LoadPCM,5993,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:8,reliability,diagno,diagnostic,8,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1721,reliability,recov,recover,1721,"ies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1915,reliability,fail,fails,1915,"odule 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2569,reliability,doe,doesn,2569,"ib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2594,reliability,fail,fails,2594,"m' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4691,reliability,doe,does,4691,=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4808,reliability,doe,does,4808,j%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5641,reliability,doe,does,5641,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5758,reliability,doe,does,5758,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5959,reliability,doe,does,5959,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:6076,reliability,doe,does,6076,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:37,safety,modul,module,37,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:178,safety,modul,modules,178,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:406,safety,modul,modules,406,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:477,safety,updat,updated,477,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:502,safety,modul,module,502,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:626,safety,modul,module,626,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:716,safety,depend,dependencies,716,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:775,safety,manag,managed,775,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:917,safety,modul,module,917,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:962,safety,test,test,962,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1062,safety,modul,module,1062," feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1129,safety,modul,module,1129,"t's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1184,safety,test,test,1184,"are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1296,safety,modul,module,1296,"://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1373,safety,modul,module-includes,1373,"'d like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1422,safety,test,test,1422,"n will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1505,safety,modul,module,1505," bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1566,safety,test,test,1566,"tional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1721,safety,recov,recover,1721,"ies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1798,safety,depend,dependency,1798,"b/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: buildi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1860,safety,patch,patch,1860," ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2004,safety,modul,module,2004,"<new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2054,safety,test,test,2054,"lding module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2110,safety,modul,module,2110,"emark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2153,safety,modul,module-includes,2153,"/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2224,safety,test,test,2224,"d]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2284,safety,test,test,2284," building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not fou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2319,safety,error,error,2319,"orted from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2703,safety,modul,modules,2703,"to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��X",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2806,safety,modul,module,2806,"issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2854,safety,test,test,2854,"ext patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2960,safety,modul,module,2960,"tive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2994,safety,Modul,Module,2994,"ilding module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3065,safety,Modul,Module,3065,"ore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Modul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3135,safety,Modul,Module,3135,"included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3167,safety,Modul,Module,3167,"3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3189,safety,Modul,Module,3189,"rom /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3258,safety,Modul,Module,3258,"/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3290,safety,Modul,Module,3290,"ude/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3316,safety,Modul,Module,3316,"error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3434,safety,modul,module,3434,"~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3483,safety,test,test,3483,"sing four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not foun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3590,safety,modul,module,3590," fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3625,safety,Modul,Module,3625,"t, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3654,safety,Modul,Module,3654," -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3684,safety,Modul,Module,3684,"nues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3744,safety,Modul,Module,3744, <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /ho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3775,safety,Modul,Module,3775,luder >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3796,safety,Modul,Module,3796,ilding module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3891,safety,Modul,Module,3891,<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3975,safety,Modul,Module,3975,Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4063,safety,Modul,Module,4063,odule test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finish,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4092,safety,Modul,Module,4092,nt81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4148,safety,Modul,Module,4148,.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to abov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4166,safety,Modul,Module,4166,dule lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4222,safety,Modul,Module,4222,�:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4240,safety,Modul,Module,4240,�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4275,safety,Modul,Module,4275, not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4328,safety,Modul,Module,4328,'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4349,safety,Modul,Module,4349,��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4356,safety,modul,module,4356,�(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4374,safety,Modul,Module,4374,<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4418,safety,Modul,Module,4418,rk: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4436,safety,Modul,Module,4436,e 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module Fit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4454,safety,Modul,Module,4454,ome/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4488,safety,Modul,Module,4488,/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not fou,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4527,safety,Modul,Module,4527,ng interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Mod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4595,safety,Error,Error,4595,Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4660,safety,test,test,4660,��2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4707,safety,Error,Error,4707,�ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4772,safety,test,test,4772, Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4916,safety,modul,module,4916,�2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/minicon,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4968,safety,test,test,4968,und. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5078,safety,modul,module,5078,not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5247,safety,modul,module,5247,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5293,safety,test,test,5293,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5397,safety,modul,module,5397,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5429,safety,Modul,Module,5429,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5458,safety,Modul,Module,5458,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5495,safety,Modul,Module,5495,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5527,safety,Modul,Module,5527,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5545,safety,Error,Error,5545,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5610,safety,test,test,5610,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5657,safety,Error,Error,5657,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5722,safety,test,test,5722,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5863,safety,Error,Error,5863,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5928,safety,test,test,5928,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5975,safety,Error,Error,5975,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:6040,safety,test,test,6040,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:477,security,updat,updated,477,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1721,security,recov,recover,1721,"ies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1860,security,patch,patch,1860," ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:8,testability,diagno,diagnostic,8,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:575,testability,context,context,575,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:716,testability,depend,dependencies,716,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:962,testability,test,test,962,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1184,testability,test,test,1184,"are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1422,testability,test,test,1422,"n will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1566,testability,test,test,1566,"tional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1798,testability,depend,dependency,1798,"b/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: buildi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2054,testability,test,test,2054,"lding module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2224,testability,test,test,2224,"d]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2284,testability,test,test,2284," building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not fou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2854,testability,test,test,2854,"ext patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3483,testability,test,test,3483,"sing four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not foun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4660,testability,test,test,4660,��2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4772,testability,test,test,4772, Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4968,testability,test,test,4968,und. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5293,testability,test,test,5293,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5610,testability,test,test,5610,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5722,testability,test,test,5722,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5928,testability,test,test,5928,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:6040,testability,test,test,6040,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1956,usability,interact,interactive,1956,"test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building mo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2319,usability,error,error,2319,"orted from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2758,usability,interact,interactive,2758,"ues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2903,usability,interact,interactive,2903,".pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not fou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3386,usability,interact,interactive,3386,"'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3533,usability,interact,interactive,3533,"ialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4595,usability,Error,Error,4595,Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4707,usability,Error,Error,4707,�ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4868,usability,interact,interactive,4868,�8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5021,usability,interact,interactive,5021,VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/min,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5199,usability,interact,interactive,5199,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5340,usability,interact,interactive,5340,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5545,usability,Error,Error,5545,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5657,usability,Error,Error,5657,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5863,usability,Error,Error,5863,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5975,usability,Error,Error,5975,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8519:416,availability,down,downloaded,416,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:395,deployability,version,versions,395,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:395,integrability,version,versions,395,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:395,modifiability,version,versions,395,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:0,usability,Document,Documentation,0,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:257,usability,support,supports,257,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:381,usability,document,documentation,381,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:432,usability,document,documentation,432,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:515,usability,document,documentation,515,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:662,usability,behavi,behavior,662,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:672,usability,Document,Documentation,672,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8519:729,usability,document,documentation,729,"Documentation for RooChi2Var missing; - [github] Checked for duplicates. ### Describe the bug. On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT. Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now). Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior. Documentation should be present. ### To Reproduce. Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/pull/8520:207,deployability,automat,automatically,207,"[cmake] check for internet connection. Fixes #8292; This should fix an issue with external packages requiring an internet connection when working offline. If there is no internet connection, they are either automatically disabled or raise a `FATAL_ERROR` if the `fail-on-missing` flag is `ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8520
https://github.com/root-project/root/pull/8520:263,deployability,fail,fail-on-missing,263,"[cmake] check for internet connection. Fixes #8292; This should fix an issue with external packages requiring an internet connection when working offline. If there is no internet connection, they are either automatically disabled or raise a `FATAL_ERROR` if the `fail-on-missing` flag is `ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8520
https://github.com/root-project/root/pull/8520:91,modifiability,pac,packages,91,"[cmake] check for internet connection. Fixes #8292; This should fix an issue with external packages requiring an internet connection when working offline. If there is no internet connection, they are either automatically disabled or raise a `FATAL_ERROR` if the `fail-on-missing` flag is `ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8520
https://github.com/root-project/root/pull/8520:263,reliability,fail,fail-on-missing,263,"[cmake] check for internet connection. Fixes #8292; This should fix an issue with external packages requiring an internet connection when working offline. If there is no internet connection, they are either automatically disabled or raise a `FATAL_ERROR` if the `fail-on-missing` flag is `ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8520
https://github.com/root-project/root/pull/8520:207,testability,automat,automatically,207,"[cmake] check for internet connection. Fixes #8292; This should fix an issue with external packages requiring an internet connection when working offline. If there is no internet connection, they are either automatically disabled or raise a `FATAL_ERROR` if the `fail-on-missing` flag is `ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8520
https://github.com/root-project/root/pull/8522:179,interoperability,standard,standards,179,"Avoid undefined behavior in RANLUX++; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already in earlier standards and works in practice because hardware uses two's complement. Fixes #8503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8522
https://github.com/root-project/root/pull/8522:202,reliability,pra,practice,202,"Avoid undefined behavior in RANLUX++; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already in earlier standards and works in practice because hardware uses two's complement. Fixes #8503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8522
https://github.com/root-project/root/pull/8522:0,safety,Avoid,Avoid,0,"Avoid undefined behavior in RANLUX++; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already in earlier standards and works in practice because hardware uses two's complement. Fixes #8503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8522
https://github.com/root-project/root/pull/8522:239,safety,compl,complement,239,"Avoid undefined behavior in RANLUX++; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already in earlier standards and works in practice because hardware uses two's complement. Fixes #8503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8522
https://github.com/root-project/root/pull/8522:239,security,compl,complement,239,"Avoid undefined behavior in RANLUX++; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already in earlier standards and works in practice because hardware uses two's complement. Fixes #8503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8522
https://github.com/root-project/root/pull/8522:16,usability,behavi,behavior,16,"Avoid undefined behavior in RANLUX++; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already in earlier standards and works in practice because hardware uses two's complement. Fixes #8503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8522
https://github.com/root-project/root/pull/8522:81,usability,behavi,behavior,81,"Avoid undefined behavior in RANLUX++; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already in earlier standards and works in practice because hardware uses two's complement. Fixes #8503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8522
https://github.com/root-project/root/issues/8523:5,integrability,Translat,Translate,5,"[RF] Translate all RooFit tutorials to Python; Allmost all RooFit tutorials are translated to Python now. There are just a few missing:. ```. rf212_plottingInRanges_blinding.C. rf408_RDataFrameToRooFit.C. rf514_RooCustomizer.C. rf612_recoverFromInvalidParameters.C. rf709_BarlowBeeston.C. ```. @Harshalzzzzzzz, can you please take a look if they can be translated and if they give us any ideas what we still need to pythonize? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8523
https://github.com/root-project/root/issues/8523:80,integrability,translat,translated,80,"[RF] Translate all RooFit tutorials to Python; Allmost all RooFit tutorials are translated to Python now. There are just a few missing:. ```. rf212_plottingInRanges_blinding.C. rf408_RDataFrameToRooFit.C. rf514_RooCustomizer.C. rf612_recoverFromInvalidParameters.C. rf709_BarlowBeeston.C. ```. @Harshalzzzzzzz, can you please take a look if they can be translated and if they give us any ideas what we still need to pythonize? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8523
https://github.com/root-project/root/issues/8523:353,integrability,translat,translated,353,"[RF] Translate all RooFit tutorials to Python; Allmost all RooFit tutorials are translated to Python now. There are just a few missing:. ```. rf212_plottingInRanges_blinding.C. rf408_RDataFrameToRooFit.C. rf514_RooCustomizer.C. rf612_recoverFromInvalidParameters.C. rf709_BarlowBeeston.C. ```. @Harshalzzzzzzz, can you please take a look if they can be translated and if they give us any ideas what we still need to pythonize? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8523
https://github.com/root-project/root/issues/8523:5,interoperability,Translat,Translate,5,"[RF] Translate all RooFit tutorials to Python; Allmost all RooFit tutorials are translated to Python now. There are just a few missing:. ```. rf212_plottingInRanges_blinding.C. rf408_RDataFrameToRooFit.C. rf514_RooCustomizer.C. rf612_recoverFromInvalidParameters.C. rf709_BarlowBeeston.C. ```. @Harshalzzzzzzz, can you please take a look if they can be translated and if they give us any ideas what we still need to pythonize? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8523
https://github.com/root-project/root/issues/8523:80,interoperability,translat,translated,80,"[RF] Translate all RooFit tutorials to Python; Allmost all RooFit tutorials are translated to Python now. There are just a few missing:. ```. rf212_plottingInRanges_blinding.C. rf408_RDataFrameToRooFit.C. rf514_RooCustomizer.C. rf612_recoverFromInvalidParameters.C. rf709_BarlowBeeston.C. ```. @Harshalzzzzzzz, can you please take a look if they can be translated and if they give us any ideas what we still need to pythonize? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8523
https://github.com/root-project/root/issues/8523:353,interoperability,translat,translated,353,"[RF] Translate all RooFit tutorials to Python; Allmost all RooFit tutorials are translated to Python now. There are just a few missing:. ```. rf212_plottingInRanges_blinding.C. rf408_RDataFrameToRooFit.C. rf514_RooCustomizer.C. rf612_recoverFromInvalidParameters.C. rf709_BarlowBeeston.C. ```. @Harshalzzzzzzz, can you please take a look if they can be translated and if they give us any ideas what we still need to pythonize? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8523
https://github.com/root-project/root/issues/8524:23,availability,error,error,23,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:624,availability,error,error,624,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:651,availability,Down,Download,651,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:562,deployability,fail,failed,562,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:225,energy efficiency,core,core,225,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:23,performance,error,error,23,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:624,performance,error,error,624,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:562,reliability,fail,failed,562,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:23,safety,error,error,23,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:624,safety,error,error,624,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:665,safety,test,test,665,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:671,safety,test,test,671,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:732,safety,test,test,732,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:775,safety,test,test,775,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:944,security,Team,Team,944,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:445,testability,Assert,Assertion,445,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:665,testability,test,test,665,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:671,testability,test,test,671,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:732,testability,test,test,732,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:775,testability,test,test,775,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:23,usability,error,error,23,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:588,usability,behavi,behavior,588,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:624,usability,error,error,624,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:1109,usability,help,help,1109,"Dictionary compilation error with TString + string literal + std::string; ### Describe the bug. ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```. root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed. ```. ### Expected behavior. No crash, just a compiler error. ### To Reproduce. - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt). - Rename it to .cpp. - `root -l test.cpp+`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/pull/8525:1627,availability,cluster,cluster,1627,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1627,deployability,cluster,cluster,1627,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:316,energy efficiency,model,model,316,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:359,energy efficiency,model,model,359,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:402,energy efficiency,model,model,402,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:586,energy efficiency,model,model,586,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1078,energy efficiency,current,current,1078,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1114,energy efficiency,alloc,allocated,1114,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1704,energy efficiency,Load,LoadCluster,1704,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:138,integrability,interfac,interface,138,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:138,interoperability,interfac,interface,138,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1477,interoperability,compatib,compatible,1477,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:138,modifiability,interfac,interface,138,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1188,performance,Perform,Performance,1188,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1257,performance,time,time,1257,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1635,performance,cach,caching,1635,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1704,performance,Load,LoadCluster,1704,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1779,performance,concurren,concurrent,1779,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1724,safety,test,test,1724,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1742,safety,test,test,1742,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:178,security,ident,identical,178,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:316,security,model,model,316,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:359,security,model,model,359,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:402,security,model,model,402,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:586,security,model,model,586,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1432,security,access,access,1432,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1442,security,control,controlled,1442,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1442,testability,control,controlled,1442,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1724,testability,test,test,1724,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1729,testability,mock,mocks,1729,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1742,testability,test,test,1742,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1188,usability,Perform,Performance,1188,"[ntuple] (WIP) RNTuple S3 object store backend; Add a new page source and sink that use S3 as the backing store. Davix. is used as the S3 interface. The implementation is nearly identical. to the DAOS backend and there is a lot of duplicated code. ```cpp. std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");. {. auto model = RNTupleModel::Create();. auto pt = model->MakeField<float>(""pt"");. auto vec = model->MakeField<std::vector<int>>(""vec"");. // create a new RNTuple named `my_ntuple`. // -- objects are written to /bucket/my_ntuple/. auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);. for (int i = 0; i < 100; i++) {. *pt = 42.0;. *vec = {1, 2, 3};. writer->Fill();. }. }. // opens the RNTuple at the path /bucket/my_ntuple/. auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);. ```. results in the following objects stored in the bucket:. ```shell. my_ntuple/0 # page 0, 1, ... . my_ntuple/1. my_ntuple/18446744073709551613 # footer. my_ntuple/18446744073709551614 # header. my_ntuple/18446744073709551615 # anchor. my_ntuple/2. ```. Like the current DAOS backend, one object is allocated for every page,. plus three for the header, footer, and anchor. Performance will not be. very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There. are three reserved keys:. * anchor: u64(-1). * header: u64(-2). * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:. * S3_REGION. * S3_SECRET_KEY. * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:. - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`. - [ ] implement `LoadCluster`. - [ ] test mocks. - [ ] test with real RNTuples. - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8526:70,deployability,log,logic,70,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:495,integrability,batch,batch,495,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:421,modifiability,reu,reusing,421,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:495,performance,batch,batch,495,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:70,safety,log,logic,70,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:70,security,log,logic,70,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:70,testability,log,logic,70,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:245,testability,understand,understand,245,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8526:554,usability,command,command,554,"[RF] Move creation of constraint sum out of RooAbsPdf::createNLL; The logic to create the constraint sum for a given pdf is moved to the. `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also. allows for easy creation of the constraint sum outside of. `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the. constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8528:206,energy efficiency,reduc,reduces,206,"[jupyter] let use created notebooks with nbviewer; 1. Specify several JSROOT locations when using with `require.js`. 2. Use fully qualified functions names to avoid conflicts. 3. Increase JSON compression, reduces json files",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8528
https://github.com/root-project/root/pull/8528:54,interoperability,Specif,Specify,54,"[jupyter] let use created notebooks with nbviewer; 1. Specify several JSROOT locations when using with `require.js`. 2. Use fully qualified functions names to avoid conflicts. 3. Increase JSON compression, reduces json files",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8528
https://github.com/root-project/root/pull/8528:165,interoperability,conflict,conflicts,165,"[jupyter] let use created notebooks with nbviewer; 1. Specify several JSROOT locations when using with `require.js`. 2. Use fully qualified functions names to avoid conflicts. 3. Increase JSON compression, reduces json files",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8528
https://github.com/root-project/root/pull/8528:159,safety,avoid,avoid,159,"[jupyter] let use created notebooks with nbviewer; 1. Specify several JSROOT locations when using with `require.js`. 2. Use fully qualified functions names to avoid conflicts. 3. Increase JSON compression, reduces json files",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8528
https://github.com/root-project/root/pull/8529:530,availability,avail,available,530,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1179,availability,avail,available,1179,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1206,availability,consist,consistency,1206,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:62,deployability,patch,patch,62,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:214,deployability,version,version,214,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:425,deployability,log,logic,425,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1003,deployability,patch,patch,1003,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1686,deployability,log,logic,1686,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:372,energy efficiency,current,currently,372,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:214,integrability,version,version,214,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1720,interoperability,compatib,compatible,1720,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:214,modifiability,version,version,214,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1653,modifiability,refact,refactoring,1653,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1653,performance,refactor,refactoring,1653,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:530,reliability,availab,available,530,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1179,reliability,availab,available,1179,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:62,safety,patch,patch,62,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:278,safety,test,test,278,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:425,safety,log,logic,425,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:530,safety,avail,available,530,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:612,safety,valid,valid,612,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:658,safety,valid,validate,658,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:672,safety,input,inputs,672,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1003,safety,patch,patch,1003,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1049,safety,valid,valid,1049,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1155,safety,valid,valid,1155,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1179,safety,avail,available,1179,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1291,safety,valid,valid,1291,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1626,safety,compl,complicating,1626,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1642,safety,compl,completely,1642,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1686,safety,log,logic,1686,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:62,security,patch,patch,62,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:425,security,log,logic,425,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:530,security,availab,available,530,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:658,security,validat,validate,658,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1003,security,patch,patch,1003,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1179,security,availab,available,1179,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1626,security,compl,complicating,1626,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1642,security,compl,completely,1642,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1686,security,log,logic,1686,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:278,testability,test,test,278,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:425,testability,log,logic,425,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1686,testability,log,logic,1686,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:342,usability,behavi,behavior,342,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:505,usability,user,user-readable,505,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:667,usability,user,user,667,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:672,usability,input,inputs,672,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1206,usability,consist,consistency,1206,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1270,usability,user,users,1270,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1367,usability,User,Users,1367,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1453,usability,document,documentation,1453,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1556,usability,user,users,1556,"Fix Display output when friend trees are present; Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`. 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc. 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out. I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8530:573,deployability,updat,updated,573,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:202,energy efficiency,current,currently,202,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:103,interoperability,format,format,103,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:137,modifiability,exten,extended,137,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:494,safety,test,tested,494,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:573,safety,updat,updated,573,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:299,security,Modif,Modifies,299,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:390,security,Modif,Modifies,390,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:443,security,hash,hash,443,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:573,security,updat,updated,573,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:494,testability,test,tested,494,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:78,usability,workflow,workflow,78,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:260,usability,workflow,workflow,260,clang analysis on GitHub Actions; # This Pull request:. Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:. - Adds a GH Actions workflow that runs on pull requests. - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it. - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23). - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8531:43,interoperability,format,formatted,43,"[skip-ci] The header of RooChi2Var was not formatted properly; This Pull Request fixes https://github.com/root-project/root/issues/8519. The formula defined with \f{...}{. .... \f} needs ""*"" as 1st character line otherwise this header disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8531
https://github.com/root-project/root/issues/8532:83,deployability,instal,install,83,`-DBUILD_SHARED_LIBS` never worked and should not be advertized; https://root.cern/install/build_from_source/#relevant-cmake-variables mentions `-DBUILD_SHARED_LIBS` but this isn't actually supported. We should remove the option. See https://github.com/root-project/root/issues/8448 for additional background.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8532
https://github.com/root-project/root/issues/8532:125,modifiability,variab,variables,125,`-DBUILD_SHARED_LIBS` never worked and should not be advertized; https://root.cern/install/build_from_source/#relevant-cmake-variables mentions `-DBUILD_SHARED_LIBS` but this isn't actually supported. We should remove the option. See https://github.com/root-project/root/issues/8448 for additional background.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8532
https://github.com/root-project/root/issues/8532:190,usability,support,supported,190,`-DBUILD_SHARED_LIBS` never worked and should not be advertized; https://root.cern/install/build_from_source/#relevant-cmake-variables mentions `-DBUILD_SHARED_LIBS` but this isn't actually supported. We should remove the option. See https://github.com/root-project/root/issues/8448 for additional background.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8532
https://github.com/root-project/root/issues/8533:395,modifiability,paramet,parameters,395,"docs for RooAbsPdf have some method signatures missing; - [github] Checked for duplicates. ### Describe the bug. Open the docs for [RooAbsPdf::createChi2()](https://root.cern.ch/doc/master/classRooAbsPdf.html#afa0fa22e51246c8360116b730acefa54). The function is written as. RooAbsReal * RooAbsReal::createChi2. while in the header (in the list of all methods at the top of the page), it has some parameters. virtual RooAbsReal * createChi2 (RooDataHist &data, const RooCmdArg, ...). Look at several overloaded methods too, some have missing signatures as well. ### Expected behavior. Method signatures should be present (like for other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8533
https://github.com/root-project/root/issues/8533:36,security,sign,signatures,36,"docs for RooAbsPdf have some method signatures missing; - [github] Checked for duplicates. ### Describe the bug. Open the docs for [RooAbsPdf::createChi2()](https://root.cern.ch/doc/master/classRooAbsPdf.html#afa0fa22e51246c8360116b730acefa54). The function is written as. RooAbsReal * RooAbsReal::createChi2. while in the header (in the list of all methods at the top of the page), it has some parameters. virtual RooAbsReal * createChi2 (RooDataHist &data, const RooCmdArg, ...). Look at several overloaded methods too, some have missing signatures as well. ### Expected behavior. Method signatures should be present (like for other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8533
https://github.com/root-project/root/issues/8533:540,security,sign,signatures,540,"docs for RooAbsPdf have some method signatures missing; - [github] Checked for duplicates. ### Describe the bug. Open the docs for [RooAbsPdf::createChi2()](https://root.cern.ch/doc/master/classRooAbsPdf.html#afa0fa22e51246c8360116b730acefa54). The function is written as. RooAbsReal * RooAbsReal::createChi2. while in the header (in the list of all methods at the top of the page), it has some parameters. virtual RooAbsReal * createChi2 (RooDataHist &data, const RooCmdArg, ...). Look at several overloaded methods too, some have missing signatures as well. ### Expected behavior. Method signatures should be present (like for other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8533
https://github.com/root-project/root/issues/8533:590,security,sign,signatures,590,"docs for RooAbsPdf have some method signatures missing; - [github] Checked for duplicates. ### Describe the bug. Open the docs for [RooAbsPdf::createChi2()](https://root.cern.ch/doc/master/classRooAbsPdf.html#afa0fa22e51246c8360116b730acefa54). The function is written as. RooAbsReal * RooAbsReal::createChi2. while in the header (in the list of all methods at the top of the page), it has some parameters. virtual RooAbsReal * createChi2 (RooDataHist &data, const RooCmdArg, ...). Look at several overloaded methods too, some have missing signatures as well. ### Expected behavior. Method signatures should be present (like for other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8533
https://github.com/root-project/root/issues/8533:573,usability,behavi,behavior,573,"docs for RooAbsPdf have some method signatures missing; - [github] Checked for duplicates. ### Describe the bug. Open the docs for [RooAbsPdf::createChi2()](https://root.cern.ch/doc/master/classRooAbsPdf.html#afa0fa22e51246c8360116b730acefa54). The function is written as. RooAbsReal * RooAbsReal::createChi2. while in the header (in the list of all methods at the top of the page), it has some parameters. virtual RooAbsReal * createChi2 (RooDataHist &data, const RooCmdArg, ...). Look at several overloaded methods too, some have missing signatures as well. ### Expected behavior. Method signatures should be present (like for other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8533
https://github.com/root-project/root/pull/8534:195,deployability,modul,modular,195,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:195,integrability,modular,modular,195,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:228,integrability,coupl,couple,228,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:43,interoperability,distribut,distributed,43,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:195,modifiability,modul,modular,195,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:228,modifiability,coupl,couple,228,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:195,safety,modul,modular,195,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:195,testability,modula,modular,195,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8534:228,testability,coupl,couple,228,"Range types according to headnode types in distributed RDF; This PR addresses step 2 of #8391. > Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8534
https://github.com/root-project/root/pull/8535:126,availability,state,states,126,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:341,deployability,updat,updated,341,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:126,integrability,state,states,126,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:55,interoperability,incompatib,incompatibility,55,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:230,modifiability,paramet,parameter,230,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:311,safety,test,tested,311,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:341,safety,updat,updated,341,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:341,security,updat,updated,341,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:311,testability,test,tested,311,Added TTree::GetEntry() and TTree::GetEvent() Backward incompatibility note [skip-ci]; # This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8536:261,deployability,updat,updated,261,[RF] Pythonization of RooGlobalFunc Functions in RooFit; # This Pull request:. - Pythonization of RooGlobalFunc Functions. - Implementing matplotlib Color/style conventions . - Pythonization of Tutorial files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8536
https://github.com/root-project/root/pull/8536:231,safety,test,tested,231,[RF] Pythonization of RooGlobalFunc Functions in RooFit; # This Pull request:. - Pythonization of RooGlobalFunc Functions. - Implementing matplotlib Color/style conventions . - Pythonization of Tutorial files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8536
https://github.com/root-project/root/pull/8536:261,safety,updat,updated,261,[RF] Pythonization of RooGlobalFunc Functions in RooFit; # This Pull request:. - Pythonization of RooGlobalFunc Functions. - Implementing matplotlib Color/style conventions . - Pythonization of Tutorial files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8536
https://github.com/root-project/root/pull/8536:261,security,updat,updated,261,[RF] Pythonization of RooGlobalFunc Functions in RooFit; # This Pull request:. - Pythonization of RooGlobalFunc Functions. - Implementing matplotlib Color/style conventions . - Pythonization of Tutorial files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8536
https://github.com/root-project/root/pull/8536:231,testability,test,tested,231,[RF] Pythonization of RooGlobalFunc Functions in RooFit; # This Pull request:. - Pythonization of RooGlobalFunc Functions. - Implementing matplotlib Color/style conventions . - Pythonization of Tutorial files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8536
https://github.com/root-project/root/issues/8537:273,deployability,Modul,Modules,273,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:601,deployability,Stack,Stack,601,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:640,deployability,modul,modules,640,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:710,deployability,modul,modules,710,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:774,deployability,modul,modules,774,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:1157,deployability,instal,installed,1157,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:14,integrability,configur,configuring,14,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:94,integrability,Configur,Configuring,94,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:322,integrability,messag,message,322,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:256,interoperability,share,share,256,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:322,interoperability,messag,message,322,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:14,modifiability,configur,configuring,14,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:94,modifiability,Configur,Configuring,94,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:273,modifiability,Modul,Modules,273,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:337,modifiability,pac,package,337,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:444,modifiability,pac,package,444,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:539,modifiability,variab,variables,539,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:640,modifiability,modul,modules,640,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:710,modifiability,modul,modules,710,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:774,modifiability,modul,modules,774,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:404,reliability,doe,does,404,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:141,safety,Detect,Detecting,141,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:177,safety,Detect,Detecting,177,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:273,safety,Modul,Modules,273,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:640,safety,modul,modules,640,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:710,safety,modul,modules,710,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:774,safety,modul,modules,774,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:14,security,configur,configuring,14,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:94,security,Configur,Configuring,94,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:141,security,Detect,Detecting,141,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:177,security,Detect,Detecting,177,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:1269,testability,context,context,1269,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:1058,usability,behavi,behavior,1058,"Warnings when configuring with CUDA 11.3; - [x] Checked for duplicates. ### Describe the bug. Configuring with `-DCUDA=ON` leads to. ```. -- Detecting CUDA compile features. -- Detecting CUDA compile features - done. CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):. The package name passed to `find_package_handle_standard_args` (CUDNN) does. not match the name of the calling package (CuDNN). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package). CMakeLists.txt:219 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include . -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so). ```. ### Expected behavior. Don't warn. ### To Reproduce. `cmake -Dcuda=ON <src>`. ### Setup. - centos8. - cuda 11.3 installed via yum. - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/pull/8538:67,deployability,configurat,configuration,67,"[jupyter] configure ServerApp to let use ""lab"" properly; Only then configuration of ""static"" paths is really used. Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8538:10,integrability,configur,configure,10,"[jupyter] configure ServerApp to let use ""lab"" properly; Only then configuration of ""static"" paths is really used. Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8538:67,integrability,configur,configuration,67,"[jupyter] configure ServerApp to let use ""lab"" properly; Only then configuration of ""static"" paths is really used. Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8538:10,modifiability,configur,configure,10,"[jupyter] configure ServerApp to let use ""lab"" properly; Only then configuration of ""static"" paths is really used. Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8538:67,modifiability,configur,configuration,67,"[jupyter] configure ServerApp to let use ""lab"" properly; Only then configuration of ""static"" paths is really used. Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8538:10,security,configur,configure,10,"[jupyter] configure ServerApp to let use ""lab"" properly; Only then configuration of ""static"" paths is really used. Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8538:67,security,configur,configuration,67,"[jupyter] configure ServerApp to let use ""lab"" properly; Only then configuration of ""static"" paths is really used. Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8539:53,deployability,Log,LogicalCPUBandwidthControl,53,[NFC][skip-ci] Mention why we check cgroup quotas in LogicalCPUBandwidthControl; So we don't forget in case someone [asks again](https://mattermost.web.cern.ch/root/pl/s81mayu83infbcs79z5qi3peic),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8539
https://github.com/root-project/root/pull/8539:53,safety,Log,LogicalCPUBandwidthControl,53,[NFC][skip-ci] Mention why we check cgroup quotas in LogicalCPUBandwidthControl; So we don't forget in case someone [asks again](https://mattermost.web.cern.ch/root/pl/s81mayu83infbcs79z5qi3peic),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8539
https://github.com/root-project/root/pull/8539:53,security,Log,LogicalCPUBandwidthControl,53,[NFC][skip-ci] Mention why we check cgroup quotas in LogicalCPUBandwidthControl; So we don't forget in case someone [asks again](https://mattermost.web.cern.ch/root/pl/s81mayu83infbcs79z5qi3peic),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8539
https://github.com/root-project/root/pull/8539:53,testability,Log,LogicalCPUBandwidthControl,53,[NFC][skip-ci] Mention why we check cgroup quotas in LogicalCPUBandwidthControl; So we don't forget in case someone [asks again](https://mattermost.web.cern.ch/root/pl/s81mayu83infbcs79z5qi3peic),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8539
https://github.com/root-project/root/pull/8540:547,deployability,updat,updated,547,"Cosmetic change in a comment inside TH1::LabelsInflate() in the TH1.cxx; This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:. ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8540:517,safety,test,tested,517,"Cosmetic change in a comment inside TH1::LabelsInflate() in the TH1.cxx; This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:. ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8540:547,safety,updat,updated,547,"Cosmetic change in a comment inside TH1::LabelsInflate() in the TH1.cxx; This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:. ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8540:547,security,updat,updated,547,"Cosmetic change in a comment inside TH1::LabelsInflate() in the TH1.cxx; This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:. ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8540:517,testability,test,tested,517,"Cosmetic change in a comment inside TH1::LabelsInflate() in the TH1.cxx; This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:. ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8540:404,usability,user,user-images,404,"Cosmetic change in a comment inside TH1::LabelsInflate() in the TH1.cxx; This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:. ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8541:287,deployability,updat,updated,287,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:8,safety,Prevent,Prevent,8,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:257,safety,test,tested,257,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:287,safety,updat,updated,287,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:8,security,Preven,Prevent,8,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:115,security,ident,identifier,115,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:287,security,updat,updated,287,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:257,testability,test,tested,257,[cmake] Prevent inclusion of stdatomic.h in cxxmodules:; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8542:8,safety,Prevent,Prevent,8,[cmake] Prevent inclusion of stdatomic.h in cxxmodules [v624]; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. (cherry picked from commit 7a3896a0c6c331f5bdbe6a73fd5101982c3a927b).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8542
https://github.com/root-project/root/pull/8542:8,security,Preven,Prevent,8,[cmake] Prevent inclusion of stdatomic.h in cxxmodules [v624]; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. (cherry picked from commit 7a3896a0c6c331f5bdbe6a73fd5101982c3a927b).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8542
https://github.com/root-project/root/pull/8542:121,security,ident,identifier,121,[cmake] Prevent inclusion of stdatomic.h in cxxmodules [v624]; It causes a clash of a macro defined in stdatomic with an identifier in boost. Fixes https://github.com/root-project/root/issues/6454. (cherry picked from commit 7a3896a0c6c331f5bdbe6a73fd5101982c3a927b).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8542
https://github.com/root-project/root/pull/8544:140,deployability,version,version,140,"Backport Jupyter fixes to v6.24; 1. Let use ""static"" folder correctly in `jupyter lab`. 2. If local JSROOT not found, correctly load remote version. 3. Let use produced notebooks in nbviewer. 4. Includes JSROOT bugfix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8544
https://github.com/root-project/root/pull/8544:128,energy efficiency,load,load,128,"Backport Jupyter fixes to v6.24; 1. Let use ""static"" folder correctly in `jupyter lab`. 2. If local JSROOT not found, correctly load remote version. 3. Let use produced notebooks in nbviewer. 4. Includes JSROOT bugfix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8544
https://github.com/root-project/root/pull/8544:140,integrability,version,version,140,"Backport Jupyter fixes to v6.24; 1. Let use ""static"" folder correctly in `jupyter lab`. 2. If local JSROOT not found, correctly load remote version. 3. Let use produced notebooks in nbviewer. 4. Includes JSROOT bugfix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8544
https://github.com/root-project/root/pull/8544:140,modifiability,version,version,140,"Backport Jupyter fixes to v6.24; 1. Let use ""static"" folder correctly in `jupyter lab`. 2. If local JSROOT not found, correctly load remote version. 3. Let use produced notebooks in nbviewer. 4. Includes JSROOT bugfix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8544
https://github.com/root-project/root/pull/8544:128,performance,load,load,128,"Backport Jupyter fixes to v6.24; 1. Let use ""static"" folder correctly in `jupyter lab`. 2. If local JSROOT not found, correctly load remote version. 3. Let use produced notebooks in nbviewer. 4. Includes JSROOT bugfix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8544
https://github.com/root-project/root/pull/8545:102,deployability,infrastructur,infrastructure,102,"[ntuple, browser] Use RField visitor to draw histograms; # This Pull request:. Uses the RFieldVisitor infrastructure to draw histograms in the ROOT7 browser. ## Changes or fixes:. - Adds browsing support for all numerical RNTuple types. - Fixes browsing of RNTuple collections",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8545
https://github.com/root-project/root/pull/8545:40,energy efficiency,draw,draw,40,"[ntuple, browser] Use RField visitor to draw histograms; # This Pull request:. Uses the RFieldVisitor infrastructure to draw histograms in the ROOT7 browser. ## Changes or fixes:. - Adds browsing support for all numerical RNTuple types. - Fixes browsing of RNTuple collections",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8545
https://github.com/root-project/root/pull/8545:120,energy efficiency,draw,draw,120,"[ntuple, browser] Use RField visitor to draw histograms; # This Pull request:. Uses the RFieldVisitor infrastructure to draw histograms in the ROOT7 browser. ## Changes or fixes:. - Adds browsing support for all numerical RNTuple types. - Fixes browsing of RNTuple collections",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8545
https://github.com/root-project/root/pull/8545:196,usability,support,support,196,"[ntuple, browser] Use RField visitor to draw histograms; # This Pull request:. Uses the RFieldVisitor infrastructure to draw histograms in the ROOT7 browser. ## Changes or fixes:. - Adds browsing support for all numerical RNTuple types. - Fixes browsing of RNTuple collections",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8545
https://github.com/root-project/root/pull/8546:24,deployability,version,version,24,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:205,deployability,updat,updated,205,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:24,integrability,version,version,24,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:24,modifiability,version,version,24,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:145,performance,content,content,145,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:175,safety,test,tested,175,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:205,safety,updat,updated,205,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:205,security,updat,updated,205,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:175,testability,test,tested,175,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:106,usability,support,support,106,[hist] implement long64 version of TH1I TH2I TH3I hists; # This Pull request:. ## Changes or fixes:. Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/issues/8547:297,availability,Error,Error,297,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:426,deployability,build,build,426,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:550,deployability,build,build,550,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:723,deployability,build,build,723,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:915,deployability,build,build,915,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1046,deployability,build,build,1046,"lowing simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1178,deployability,build,build,1178,"fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1328,deployability,build,build,1328,"3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1442,deployability,build,build,1442,"ling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTCon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1573,deployability,build,build,1573,". #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1705,deployability,build,build,1705,"om /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1855,deployability,build,build,1855,"text const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1987,deployability,build,build,1987,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2121,deployability,build,build,2121,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2234,deployability,build,build,2234,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2378,deployability,build,build,2378,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2522,deployability,build,build,2522,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2666,deployability,build,build,2666,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2771,deployability,build,build,2771,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2880,deployability,build,build,2880,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:297,performance,Error,Error,297,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:784,performance,Multiplex,MultiplexExternalSemaSource,784,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1239,performance,Multiplex,MultiplexExternalSemaSource,1239," Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1766,performance,Multiplex,MultiplexExternalSemaSource,1766,"ng::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/jso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:2048,performance,Multiplex,MultiplexExternalSemaSource,2048,nev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x00007f261f927c4a in TDataMember::GetOffsetCint() const () from /home/linev/build/json/lib/libCore.so. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:297,safety,Error,Error,297,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1118,safety,Compl,CompleteRedeclChain,1118,"mental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1268,safety,Compl,CompleteRedeclChain,1268," used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1645,safety,Compl,CompleteRedeclChain,1645,"ng::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1795,safety,Compl,CompleteRedeclChain,1795,"Source::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1118,security,Compl,CompleteRedeclChain,1118,"mental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1268,security,Compl,CompleteRedeclChain,1268," used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1645,security,Compl,CompleteRedeclChain,1645,"ng::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:1795,security,Compl,CompleteRedeclChain,1795,"Source::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so. #19 0x00007f261bbf330d in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /home/linev/build/json/lib/libCling.so. #20 0x00007f261d7bf2bc in clang::RecordDecl::field_begin() const () from /home/linev/build/json/lib/libCling.so. #21 0x00007f261d926d30 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #22 0x00007f261d926d81 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #23 0x00007f261d926770 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /home/linev/build/json/lib/libCling.so. #24 0x00007f261b2a028a in TClingDataMemberInfo::Offset() () from /home/linev/build/json/lib/libCling.so. #25 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:56,testability,simpl,simple,56,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:303,testability,trace,trace,303,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:56,usability,simpl,simple,56,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:297,usability,Error,Error,297,"Crash in TDataMember::GetOffsetCint() method; Following simple code crashes:. ```cpp. TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");. TDataMember *m = cl->GetDataMember(""fAttrBorder"");. printf(""offset = %d\n"", (int) m->GetOffsetCint());. ```. Method is crucial, while used in PyROOT. . Error trace:. ```. #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so. #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so. #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so. #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so. #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so. #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so. #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8549:897,availability,avail,available,897,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:897,reliability,availab,available,897,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:999,reliability,doe,does,999,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:897,safety,avail,available,897,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:738,security,access,accessible,738,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:897,security,availab,available,897,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:961,security,access,access,961,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:54,usability,Close,Close,54,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:354,usability,Close,Close,354,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:648,usability,Close,Close,648,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:698,usability,workflow,workflow,698,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:989,usability,behavi,behaviour,989,"A crash when opening a ttree and its friend on TFile::Close(); This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34. [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/pull/8550:139,deployability,releas,released,139,"Backports from master for ROOT 6.24 branch; Sorry, I thought these were already merged into the 6.24 branch, but now that 6.24/02 has been released, I realized that they were not. None of these changes are essential to have, but it would be nice to have them as part of 6.24/04 in any case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8550
https://github.com/root-project/root/issues/8551:9,deployability,Version,Version,9,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:66,deployability,fail,fails,66,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:98,deployability,version,version,98,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:756,deployability,build,build,756,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:1324,deployability,Build,Build,1324,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:9,integrability,Version,Version,9,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:98,integrability,version,version,98,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:9,modifiability,Version,Version,9,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:98,modifiability,version,version,98,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:66,reliability,fail,fails,66,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:280,security,Team,Team,280,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:956,security,Team,Team,956,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:445,usability,help,help,445,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:800,usability,behavi,behavior,800,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/issues/8551:1174,usability,help,help,1174,"Compiler Version not correctly parsed; ### Describe the bug. ROOT fails to parse the gcc compiler version in Ubuntu 18 and Ubuntu 20. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. with ""..."" is empty. Also:. ```. root [1] gSystem->GetBuildCompilerVersionStr(). (const char *) """". ```. The issue is probably here: https://github.com/root-project/root/blob/master/build/unix/compiledata.sh#L69. ### Expected behavior. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |. | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |. | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### To Reproduce. 1. Build from source on Ubuntu 18 or Ubuntu 20. 2. Call root -b. ### Setup. 1. Self-built from git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8551
https://github.com/root-project/root/pull/8552:39,energy efficiency,load,load,39,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:127,energy efficiency,load,load,127,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:260,integrability,sub,subfield,260,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:87,modifiability,exten,extends,87,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:176,modifiability,inherit,inheritance,176,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:302,modifiability,inherit,inherited,302,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:475,modifiability,inherit,inherited,475,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:39,performance,load,load,39,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:127,performance,load,load,127,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:28,usability,support,support,28,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:99,usability,support,support,99,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:564,usability,close,closes,564,"[ntuple] `RClassField`: add support to load/store class hierarchies; This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:. - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes. - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8553:29,deployability,version,version,29,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:121,deployability,version,version,121,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:200,deployability,updat,updated,200,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:29,integrability,version,version,29,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:121,integrability,version,version,121,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:29,modifiability,version,version,29,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:121,modifiability,version,version,121,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:170,safety,test,tested,170,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:200,safety,updat,updated,200,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:200,security,updat,updated,200,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:170,testability,test,tested,170,parse correctly the compiler version; # This Pull request:. ## Changes or fixes:. Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/issues/8554:42,usability,command,commands,42,"Add ability to run `RBrowser` and similar commands in ""server mode""; ### Explain what you would like to see improved. Add ability to run `RBrowser` and similar commands in ""server mode"":. When using on remote machines spawning browsers is inefficient and not desired. What could be useful is to just print the URL, which can be then opened in a browser on a different machine. I apologise if this has already been reported/implemented. I can not find any reference to this in the code or documentation. ### To Reproduce (ideal). 1. Run `root --web=url`. 2. Run `ROOT::Experimental::RBrowser b`. 3. Only URL will be printed which can be then used on another machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8554
https://github.com/root-project/root/issues/8554:160,usability,command,commands,160,"Add ability to run `RBrowser` and similar commands in ""server mode""; ### Explain what you would like to see improved. Add ability to run `RBrowser` and similar commands in ""server mode"":. When using on remote machines spawning browsers is inefficient and not desired. What could be useful is to just print the URL, which can be then opened in a browser on a different machine. I apologise if this has already been reported/implemented. I can not find any reference to this in the code or documentation. ### To Reproduce (ideal). 1. Run `root --web=url`. 2. Run `ROOT::Experimental::RBrowser b`. 3. Only URL will be printed which can be then used on another machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8554
https://github.com/root-project/root/issues/8554:488,usability,document,documentation,488,"Add ability to run `RBrowser` and similar commands in ""server mode""; ### Explain what you would like to see improved. Add ability to run `RBrowser` and similar commands in ""server mode"":. When using on remote machines spawning browsers is inefficient and not desired. What could be useful is to just print the URL, which can be then opened in a browser on a different machine. I apologise if this has already been reported/implemented. I can not find any reference to this in the code or documentation. ### To Reproduce (ideal). 1. Run `root --web=url`. 2. Run `ROOT::Experimental::RBrowser b`. 3. Only URL will be printed which can be then used on another machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8554
https://github.com/root-project/root/pull/8555:16,availability,redund,redundant,16,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:143,availability,redund,redundant,143,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:326,availability,redund,redundant,326,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:16,deployability,redundan,redundant,16,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:143,deployability,redundan,redundant,143,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:326,deployability,redundan,redundant,326,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:16,reliability,redundan,redundant,16,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:143,reliability,redundan,redundant,143,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:326,reliability,redundan,redundant,326,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:16,safety,redund,redundant,16,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:143,safety,redund,redundant,143,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:326,safety,redund,redundant,326,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:87,usability,user,user,87,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:214,usability,user,user,214,"[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent; Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g. ```. root [0] int i = 1;. root [1] (bool)i. (bool) true. root [2] bool(i). ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]. bool(i). ^~~. (bool) false. ```. For more information see the discussion [here](http://github.com/root-project/issues/8304). This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8556:534,deployability,updat,updated,534,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:504,safety,test,tested,504,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:534,safety,updat,updated,534,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:36,security,iso,isomere,36,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:112,security,iso,isomere,112,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:467,security,iso,isomers,467,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:534,security,updat,updated,534,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:504,testability,test,tested,504,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:167,usability,behavi,behavior,167,"Fix for assembling mixtures made of isomere elements.; # This Pull request:. Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:. Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8557:197,deployability,updat,updated,197,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:25,energy efficiency,CPU,CPU,25,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:132,energy efficiency,CPU,CPU,132,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:6,interoperability,specif,specifying,6,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:123,interoperability,specif,specific,123,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:25,performance,CPU,CPU,25,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:132,performance,CPU,CPU,132,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:167,safety,test,tested,167,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:197,safety,updat,updated,197,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:197,security,updat,updated,197,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:167,testability,test,tested,167,Allow specifying pthread CPU affinity; # This Pull request:. ## Changes or fixes:. Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8558:498,deployability,updat,updated,498,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:39,interoperability,Convers,Conversion,39,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:199,interoperability,Coordinat,Coordinates,199,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:468,safety,test,tested,468,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:498,safety,updat,updated,498,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:62,security,Sign,Sign,62,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:344,security,Sign,Sign,344,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:498,security,updat,updated,498,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:468,testability,test,tested,468,"Added Spherical and Cartesian TVector3 Conversion methods and Sign Function ; # This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8559:206,deployability,build,builds,206,"[RF] Replace RooMinuit with RooMinimizer in rf801_mcstudy.py tutorial; This is to syncronize the rf801_mcstudy with the C++ tutorial, and it. also fixes a crash in the Python tutorials in the MacOS nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8559
https://github.com/root-project/root/pull/8560:389,interoperability,convers,conversion,389,"[RF] New RooArgList/Set constructors for use in pyROOT; Adding constructors that create a non-owning RooArgLists/Sets from a. vector of RooAbsArg pointers. This is mainly intended for pyROOT. With cppyy, a Python list or tuple. can be implicitly converted to an `std::vector`, and by enabling implicit. construction of a RooArgList/Set from a `std::vector`, we indirectly. enable implicit conversion from a Python list/tuple to RooArgLists/Sets.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8560
https://github.com/root-project/root/pull/8561:278,deployability,updat,updated,278,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:21,performance,time,timer,21,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:124,performance,time,timer,124,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:135,performance,perform,performance,135,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:248,safety,test,tested,248,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:278,safety,updat,updated,278,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:278,security,updat,updated,278,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:248,testability,test,tested,248,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:0,usability,stop,stop,0,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:105,usability,user,user,105,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:110,usability,stop,stop,110,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:135,usability,perform,performance,135,"stop tgcommandplugin timer when remote check not needed; # This Pull request:. ## Changes or fixes:. Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8562:366,deployability,updat,updated,366,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:28,performance,time,timers,28,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:98,performance,time,timers,98,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:7,safety,safe,safe,7,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:112,safety,safe,safe,112,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:336,safety,test,tested,336,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:366,safety,updat,updated,366,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:366,security,updat,updated,366,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:336,testability,test,tested,336,thread-safe gSystem list of timers; # This Pull request:. ## Changes or fixes:. Makes the list of timers thread-safe. It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8563:20,availability,error,error,20,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:44,availability,avail,available,44,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:132,availability,error,error,132,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:20,performance,error,error,20,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:132,performance,error,error,132,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:44,reliability,availab,available,44,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:20,safety,error,error,20,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:44,safety,avail,available,44,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:132,safety,error,error,132,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:44,security,availab,available,44,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:20,usability,error,error,20,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:132,usability,error,error,132,"Fix Mac compilation error; cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:. compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8564:73,availability,failur,failures,73,"Disable tutorials/legacy/thread/threadsh1.C in v6.24; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8564
https://github.com/root-project/root/pull/8564:73,deployability,fail,failures,73,"Disable tutorials/legacy/thread/threadsh1.C in v6.24; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8564
https://github.com/root-project/root/pull/8564:73,performance,failur,failures,73,"Disable tutorials/legacy/thread/threadsh1.C in v6.24; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8564
https://github.com/root-project/root/pull/8564:73,reliability,fail,failures,73,"Disable tutorials/legacy/thread/threadsh1.C in v6.24; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8564
https://github.com/root-project/root/pull/8565:308,availability,cluster,clusters,308,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:394,availability,cluster,clusters,394,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:308,deployability,cluster,clusters,308,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:394,deployability,cluster,clusters,394,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1084,deployability,patch,patch,1084,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1415,deployability,patch,patch,1415,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1548,deployability,version,versions,1548,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:19,energy efficiency,Reduc,Reduce,19,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:983,energy efficiency,CPU,CPU,983,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1270,energy efficiency,load,load,1270,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1324,energy efficiency,reduc,reduces,1324,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1548,integrability,version,versions,1548,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:765,modifiability,paramet,parameter,765,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1548,modifiability,version,versions,1548,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:63,performance,perform,performing,63,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:74,performance,multi-thread,multi-thread,74,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:858,performance,parallel,parallelism,858,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:940,performance,parallel,parallelization,940,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:983,performance,CPU,CPU,983,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:987,performance,time,time,987,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1270,performance,load,load,1270,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1370,performance,overhead,overhead,1370,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1084,safety,patch,patch,1084,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1263,safety,avoid,avoid,1263,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1415,safety,patch,patch,1415,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1084,security,patch,patch,1084,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1310,security,sign,significantly,1310,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1415,security,patch,patch,1415,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:63,usability,perform,performing,63,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1210,usability,experien,experience,1210,"[TTreeProcessorMT] Reduce the number of tasks generated ; When performing multi-thread reads of ROOT files, we need to pick the number. of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per. worker thread"": we don't know the number of clusters in each tree before. we open the files, so we don't know the total number of clusters upfront. Instead we set a ""desired value"" of T tasks per tree and per thread, and. then when each thread opens a file it tries to make T tasks out of it (if. the file turns out to be too small, it might end up producing _less_ tasks than. desired. If we are processing `M > N` small files, we might end up producing. _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of. tasks per worker. If N is too low, parallelism will be too coarse-grained. and we might get imbalance/tails with bad parallelization. The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set. it to 24). We often see runtime improvements in benchmarks by setting it. to a lower value, e.g. 10. Again from experience, N == 10 should be a high-enough value to avoid. load imbalance between threads while it significantly reduces the amount. of tasks spawned (and the overhead that comes with it). Therefore this patch sets N to 10. More discussion:. - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre. - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8566:641,availability,operat,operator,641,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:936,availability,error,error,936,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:1017,deployability,fail,fail,1017,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:58,energy efficiency,draw,drawables,58,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:8,integrability,pub,public,8,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:93,integrability,pub,public,93,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:936,performance,error,error,936,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:1017,reliability,fail,fail,1017,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:890,safety,test,tests,890,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:936,safety,error,error,936,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:1004,safety,test,tests,1004,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:15,security,access,access,15,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:100,security,access,access,100,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:890,testability,test,tests,890,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:1004,testability,test,tests,1004,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:304,usability,Clear,Clear,304,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:398,usability,Clear,Clear,398,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:936,usability,error,error,936,"Provide public access to `RAttrValue<T>` members; In most drawables and aggregations provide public access to the attributes. One can directly assign value to such member like:. ```cpp. line->line.style = 12;. text->text.font.face = ""Arial"";. ```. And one always can check if attribute `Has()` value or `Clear()` it like:. ```cpp. if (!line->line.style.Has()) // do somthing;. text->text.font.face.Clear();. ```. Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:. ```. frame->x.labels.font.size = 12;. frame->y.ticks.color = RColor::kRed;. ```. Sometime assign operator defined in aggregation to let assign value to whole aggregation like:. ```. frame->x.labels.font = 11;. ```. This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8567:257,availability,replic,replicates,257,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:513,deployability,updat,updated,513,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:444,performance,parallel,parallelized,444,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:23,safety,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:483,safety,test,tested,483,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:513,safety,updat,updated,513,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:513,security,updat,updated,513,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:23,testability,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:483,testability,test,tested,483,"RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator; This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8568:188,interoperability,standard,standards,188,"Avoid undefined behavior in RANLUX++ [v6.24]; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already. in earlier standards and works in practice because hardware uses two's complement. Fixes #8503, backport of #8522. (cherry picked from commit b7d0cb13f6544cbefadb26a99840fc41dba32891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8568
https://github.com/root-project/root/pull/8568:211,reliability,pra,practice,211,"Avoid undefined behavior in RANLUX++ [v6.24]; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already. in earlier standards and works in practice because hardware uses two's complement. Fixes #8503, backport of #8522. (cherry picked from commit b7d0cb13f6544cbefadb26a99840fc41dba32891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8568
https://github.com/root-project/root/pull/8568:0,safety,Avoid,Avoid,0,"Avoid undefined behavior in RANLUX++ [v6.24]; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already. in earlier standards and works in practice because hardware uses two's complement. Fixes #8503, backport of #8522. (cherry picked from commit b7d0cb13f6544cbefadb26a99840fc41dba32891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8568
https://github.com/root-project/root/pull/8568:248,safety,compl,complement,248,"Avoid undefined behavior in RANLUX++ [v6.24]; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already. in earlier standards and works in practice because hardware uses two's complement. Fixes #8503, backport of #8522. (cherry picked from commit b7d0cb13f6544cbefadb26a99840fc41dba32891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8568
https://github.com/root-project/root/pull/8568:248,security,compl,complement,248,"Avoid undefined behavior in RANLUX++ [v6.24]; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already. in earlier standards and works in practice because hardware uses two's complement. Fixes #8503, backport of #8522. (cherry picked from commit b7d0cb13f6544cbefadb26a99840fc41dba32891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8568
https://github.com/root-project/root/pull/8568:16,usability,behavi,behavior,16,"Avoid undefined behavior in RANLUX++ [v6.24]; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already. in earlier standards and works in practice because hardware uses two's complement. Fixes #8503, backport of #8522. (cherry picked from commit b7d0cb13f6544cbefadb26a99840fc41dba32891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8568
https://github.com/root-project/root/pull/8568:89,usability,behavi,behavior,89,"Avoid undefined behavior in RANLUX++ [v6.24]; Left shifting a negative base is undefined behavior until C++20, cast to unsigned where it becomes implementation defined already. in earlier standards and works in practice because hardware uses two's complement. Fixes #8503, backport of #8522. (cherry picked from commit b7d0cb13f6544cbefadb26a99840fc41dba32891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8568
https://github.com/root-project/root/pull/8569:219,deployability,contain,contains,219,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:256,deployability,log,logistics,256,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:693,deployability,updat,updated,693,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:352,integrability,abstract,abstract,352,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:62,modifiability,refact,refactoring,62,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:83,modifiability,refact,refactors,83,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:312,modifiability,paramet,parameters,312,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:352,modifiability,abstract,abstract,352,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:62,performance,refactor,refactoring,62,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:83,performance,refactor,refactors,83,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:239,performance,synch,synchronization,239,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:595,performance,parallel,parallel,595,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:23,safety,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:256,safety,log,logistics,256,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:663,safety,test,tested,663,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:693,safety,updat,updated,693,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:256,security,log,logistics,256,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:693,security,updat,updated,693,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:23,testability,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:256,testability,log,logistics,256,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:663,testability,test,tested,663,"RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring; This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8570:37,safety,test,test,37,[TTreeProcessorMT] Re-enable running test with different amount of th…; My bad :sweat: .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8570
https://github.com/root-project/root/pull/8570:37,testability,test,test,37,[TTreeProcessorMT] Re-enable running test with different amount of th…; My bad :sweat: .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8570
https://github.com/root-project/root/pull/8571:236,availability,Error,Error,236,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:358,deployability,updat,updated,358,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:242,integrability,messag,messages,242,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:242,interoperability,messag,messages,242,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:236,performance,Error,Error,236,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:236,safety,Error,Error,236,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:328,safety,test,tested,328,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:358,safety,updat,updated,358,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:358,security,updat,updated,358,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:328,testability,test,tested,328,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:236,usability,Error,Error,236,Eve7 Correction in handling of removed elements ids on the client ; # This Pull request:. In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:. Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8572:220,deployability,updat,updated,220,Fix thread safety data races; # This Pull request:. ## Changes or fixes:. All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8572:11,safety,safe,safety,11,Fix thread safety data races; # This Pull request:. ## Changes or fixes:. All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8572:190,safety,test,tested,190,Fix thread safety data races; # This Pull request:. ## Changes or fixes:. All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8572:220,safety,updat,updated,220,Fix thread safety data races; # This Pull request:. ## Changes or fixes:. All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8572:220,security,updat,updated,220,Fix thread safety data races; # This Pull request:. ## Changes or fixes:. All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8572:190,testability,test,tested,190,Fix thread safety data races; # This Pull request:. ## Changes or fixes:. All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8573:18,energy efficiency,GPU,GPU,18,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:89,energy efficiency,GPU,GPU,89,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:114,energy efficiency,GPU,GPU,114,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:18,performance,GPU,GPU,18,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:89,performance,GPU,GPU,89,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:114,performance,GPU,GPU,114,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:31,testability,Regress,Regression,31,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:125,testability,regress,regression,125,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:9,usability,Learn,Learning,9,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8573:77,usability,support,support,77,Add Deep Learning GPU for TMVA Regression tutorials; WHen TMVA is built with support for GPU add the DeepLearning GPU in the regression tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8573
https://github.com/root-project/root/pull/8574:52,availability,ping,ping,52,"[webgui] use `--single-process` for chrome, improve ping.cxx test; Should avoid problems on 32bit debian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8574
https://github.com/root-project/root/pull/8574:61,safety,test,test,61,"[webgui] use `--single-process` for chrome, improve ping.cxx test; Should avoid problems on 32bit debian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8574
https://github.com/root-project/root/pull/8574:74,safety,avoid,avoid,74,"[webgui] use `--single-process` for chrome, improve ping.cxx test; Should avoid problems on 32bit debian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8574
https://github.com/root-project/root/pull/8574:61,testability,test,test,61,"[webgui] use `--single-process` for chrome, improve ping.cxx test; Should avoid problems on 32bit debian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8574
https://github.com/root-project/root/pull/8576:73,deployability,releas,releases,73,"Use relative RPATH on Linux and macOS by default; This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8576
https://github.com/root-project/root/pull/8576:292,deployability,releas,release,292,"Use relative RPATH on Linux and macOS by default; This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8576
https://github.com/root-project/root/pull/8576:349,usability,user,user,349,"Use relative RPATH on Linux and macOS by default; This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8576
https://github.com/root-project/root/issues/8578:12208,availability,Operat,Operating,12208,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12283,availability,down,download,12283,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:859,deployability,build,build,859,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:1310,deployability,build,build,1310," very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:1570,deployability,build,build,1570,"s at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /dat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:1874,deployability,build,build,1874," bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2280,deployability,build,build,2280,"ects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2614,deployability,build,build,2614,"r/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2922,deployability,build,build,2922,"vm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3217,deployability,build,build,3217,"ext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3516,deployability,build,build,3516,"0, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3799,deployability,build,build,3799,"or>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4114,deployability,build,build,4114,"ransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4397,deployability,Updat,UpdateArgsWithConversions,4397,"ator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4478,deployability,build,build,4478,"4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /dat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4750,deployability,build,build,4750," /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/proje",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:5152,deployability,build,build,5152,"rpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:5522,deployability,build,build,5522,"r/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f42",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:5779,deployability,build,build,5779,"ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:6114,deployability,build,build,6114,"4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:6427,deployability,build,build,6427,"me=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:6672,deployability,build,build,6672,"eCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:6917,deployability,build,build,6917,"r::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getatt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7095,deployability,build,build,7095,"-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7320,deployability,build,build,7320,"DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7535,deployability,build,build,7535,"gClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7778,deployability,build,build,7778,"ling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8015,deployability,build,build,8015,"pyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8273,deployability,build,build,8273,"data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8382,deployability,modul,module,8382,"backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8498,deployability,build,build,8498,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8585,deployability,modul,module,8585,"cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8702,deployability,build,build,8702,"=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8974,deployability,build,build,8974,"dd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vect",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9235,deployability,build,build,9235,"4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9458,deployability,build,build,9458,"d-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9643,deployability,build,build,9643," out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9878,deployability,build,build,9878,"f=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10103,deployability,build,build,10103,"d out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10329,deployability,build,build,10329,"=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) Bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10560,deployability,build,build,10560,"t>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and conci",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10755,deployability,build,build,10755,"ptimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that trigg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11451,deployability,build,build,11451," nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11474,deployability,build,build,11474,"628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11915,deployability,build,build,11915,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12196,deployability,version,version,12196,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12265,deployability,instal,install,12265,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12660,deployability,fail,fails,12660,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:33,energy efficiency,Load,Loading,33,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2195,energy efficiency,IdL,IdLoc,2195,"4ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:6464,energy efficiency,core,core,6464,"false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::G",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:6709,energy efficiency,core,core,6709,"ringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:6954,energy efficiency,core,core,6954,"ame=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8172,energy efficiency,optim,optimized,8172,"per/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8390,energy efficiency,optim,optimized,8390,"ingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8412,energy efficiency,optim,optimized,8412,"apper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /dat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8433,energy efficiency,optim,optimized,8433,"00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/AT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8593,energy efficiency,optim,optimized,8593,"y-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8637,energy efficiency,optim,optimized,8637,"510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8860,energy efficiency,optim,optimized,8860,"xx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8884,energy efficiency,optim,optimized,8884,"c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/Analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8909,energy efficiency,optim,optimized,8909,"getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9098,energy efficiency,optim,optimized,9098,". #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9122,energy efficiency,optim,optimized,9122," in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExtern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9144,energy efficiency,optim,optimized,9144,"tr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9170,energy efficiency,optim,optimized,9170,"imized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9345,energy efficiency,optim,optimized,9345,"510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9551,energy efficiency,optim,optimized,9551,"c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/extern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9578,energy efficiency,optim,optimized,9578," (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9757,energy efficiency,optim,optimized,9757,"dule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9779,energy efficiency,optim,optimized,9779,"007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9813,energy efficiency,optim,optimized,9813,"call_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10205,energy efficiency,optim,optimized,10205,"ts/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10227,energy efficiency,optim,optimized,10227,"ls/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10251,energy efficiency,optim,optimized,10251,"ernals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11464,energy efficiency,optim,optimised,11464,"=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2473,integrability,Transform,TransformDependentNameType,2473,"=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2807,integrability,Transform,TransformDependentNameType,2807,"...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3116,integrability,Transform,TransformType,3116,"=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/Ana",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3417,integrability,Transform,TransformType,3417,"rm<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3656,integrability,Sub,SubstType,3656,"r/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3938,integrability,Sub,SubstDefaultTemplateArgument,3938,"c/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9290,integrability,abstract,abstract,9290,"ernals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10158,integrability,abstract,abstract,10158,"llable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10615,integrability,abstract,abstract,10615,"s/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10810,integrability,abstract,abstract,10810,"ptimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12196,integrability,version,version,12196,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2195,interoperability,IdL,IdLoc,2195,"4ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2473,interoperability,Transform,TransformDependentNameType,2473,"=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2807,interoperability,Transform,TransformDependentNameType,2807,"...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3116,interoperability,Transform,TransformType,3116,"=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/Ana",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3417,interoperability,Transform,TransformType,3417,"rm<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7132,interoperability,bind,bindings,7132,"rnals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyOb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7357,interoperability,bind,bindings,7357,"teTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7572,interoperability,bind,bindings,7572,"name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7815,interoperability,bind,bindings,7815,", name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7850,interoperability,Prox,ProxyWrappers,7850,"uJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8052,interoperability,bind,bindings,8052,"hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7132,modifiability,bind,bindings,7132,"rnals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyOb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7357,modifiability,bind,bindings,7357,"teTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7572,modifiability,bind,bindings,7572,"name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:7815,modifiability,bind,bindings,7815,", name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TCling.cxx:8239. #23 0x00007faf49954765 in Cppyy::IsEnum (type_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8052,modifiability,bind,bindings,8052,"hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8382,modifiability,modul,module,8382,"backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8585,modifiability,modul,module,8585,"cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9290,modifiability,abstract,abstract,9290,"ernals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10158,modifiability,abstract,abstract,10158,"llable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10615,modifiability,abstract,abstract,10615,"s/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10810,modifiability,abstract,abstract,10810,"ptimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12196,modifiability,version,version,12196,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:33,performance,Load,Loading,33,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8172,performance,optimiz,optimized,8172,"per/src/clingwrapper.cxx:948. #24 0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8390,performance,optimiz,optimized,8390,"ingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8412,performance,optimiz,optimized,8412,"apper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /dat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8433,performance,optimiz,optimized,8433,"00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/AT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8593,performance,optimiz,optimized,8593,"y-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8637,performance,optimiz,optimized,8637,"510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8860,performance,optimiz,optimized,8860,"xx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8884,performance,optimiz,optimized,8884,"c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/Analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8909,performance,optimiz,optimized,8909,"getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9098,performance,optimiz,optimized,9098,". #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9122,performance,optimiz,optimized,9122," in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExtern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9144,performance,optimiz,optimized,9144,"tr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9170,performance,optimiz,optimized,9170,"imized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9345,performance,optimiz,optimized,9345,"510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9551,performance,optimiz,optimized,9551,"c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/extern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9578,performance,optimiz,optimized,9578," (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9757,performance,optimiz,optimized,9757,"dule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9779,performance,optimiz,optimized,9779,"007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9813,performance,optimiz,optimized,9813,"call_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10205,performance,optimiz,optimized,10205,"ts/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10227,performance,optimiz,optimized,10227,"ls/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10251,performance,optimiz,optimized,10251,"ernals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500. #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12660,reliability,fail,fails,12660,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:807,safety,test,test,807,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4397,safety,Updat,UpdateArgsWithConversions,4397,"ator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8382,safety,modul,module,8382,"backend/clingwrapper/src/clingwrapper.cxx:410. #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8585,safety,modul,module,8585,"cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510. #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541. #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324. #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978. #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140. #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449. #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422. #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963. #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11009,safety,compl,complicated,11009,"7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11484,safety,test,test,11484,"callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11869,safety,input,input,11869,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12123,safety,input,input,12123,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4397,security,Updat,UpdateArgsWithConversions,4397,"ator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10910,security,access,accessing,10910,"n/Objects/call.c:283. #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10975,security,access,access,10975,"rcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11009,security,compl,complicated,11009,"7ffdb628f800, callable=0x7faf298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11105,security,Control,Control,11105,"AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather ju",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11197,security,access,accessing,11197,"d=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:5,testability,Assert,Assertion,5,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:611,testability,understand,understand,611,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:807,testability,test,test,807,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:838,testability,assert,assertion,838,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11105,testability,Control,Control,11105,"AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather ju",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11353,testability,understand,understand,11353,"rc/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11484,testability,test,test,11484,"callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11648,testability,assert,assertion,11648," (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the ass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12475,testability,context,context,12475,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12504,testability,context,context,12504,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12650,testability,assert,assertion,12650,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12673,testability,understand,understand,12673,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:446,usability,clear,clear,446,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:494,usability,behavi,behavior,494,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:699,usability,learn,learn,699,"ROOT Assertion During Dictionary Loading (2021.06.30.); - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:1368,usability,tool,tools,1368,"""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:1628,usability,tool,tools,1628," better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```. (gdb) bt. #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:1932,usability,tool,tools,1932,".6. #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6. #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6. #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/Analysi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2338,usability,tool,tools,2338,"/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128. #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364. #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2672,usability,tool,tools,2672,"00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051. #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:2980,usability,tool,tools,2980,"0007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::RebuildDependentNameType (this=0x7ffdb628d120, Keyword=clang::ETK_Typename, . KeywordLoc=..., QualifierLoc=..., Id=0x7dcc138, IdLoc=..., DeducedTSTContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3275,usability,tool,tools,3275,"s/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:1057. #8 0x00007faf40c69016 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=..., . DeducedTSTContext=false) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3574,usability,tool,tools,3574,"d-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6295. #9 0x00007faf40c6db87 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType (this=0x7ffdb628d120, TLB=..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:542",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:3857,usability,tool,tools,3857,"..., TL=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:6282. #10 0x00007faf40c56ad3 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, TLB=..., T=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4172,usability,tool,tools,4172,"ta/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:105. #11 0x00007faf40c56212 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType (this=0x7ffdb628d120, DI=0xa0f3090). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4536,usability,tool,tools,4536,"nals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252. #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4808,usability,tool,tools,4808,"isBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605. #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:5210,usability,tool,tools,5210,"0. #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., . UpdateArgsWithConversions=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427. #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:5580,usability,tool,tools,5580," 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:5837,usability,tool,tools,5837,"e.cpp:3323. #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., . LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980. #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, . IsTypename=false, LastII=0x0, OnlyNamespace=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/ParseExprCXX.cpp:362. #18 0x00007faf400e004c in clang::Parser::TryAnnotateCXXScopeToken (this=0x1575b10, EnteringContext=false). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1994. #19 0x00007faf3f4ea7ca in cling::LookupHelper::findScope (this=0x142a600, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7ffdb628eb00, . instantiateTemplate=true) at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/cling/lib/Interpreter/LookupHelper.cpp:631. #20 0x00007faf3f41d1f3 in TClingClassInfo::TClingClassInfo (this=0x7ffdb628eb80, interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>"", intantiateTemplate=true). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:88. #21 0x00007faf3f4207f6 in TClingClassInfo::IsEnum (interp=0x131d620, name=0x209836f0 ""DataVector<xAOD::TauJet_v3>""). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/core/metacling/src/TClingClassInfo.cxx:817. #22 0x00007faf3f2d407c in TCling::ClassInfo_IsEnum (this=0x13e4e80, name=0x209836f0 ""Da",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11041,usability,help,helper,11041,"298dbaf0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89. #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11530,usability,behavi,behavior,11530,"cts/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11548,usability,clear,clear,11548,"xternals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127. #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80). at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11724,usability,behavi,behavior,11724,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11869,usability,input,input,11869,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12123,usability,input,input,12123,"tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147. ... ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. - ROOT 6.24/00. - `x86_64-centos7-gcc8-dbg`. - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context. <!--. Add any other context about the problem here. -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/pull/8579:1233,deployability,log,logic,1233,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1563,deployability,patch,patch,1563,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1569,deployability,releas,release,1569,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:964,energy efficiency,model,models,964,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:983,energy efficiency,model,model,983,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:433,integrability,compon,components,433,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:354,interoperability,specif,specific,354,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:433,interoperability,compon,components,433,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:113,modifiability,variab,variables,113,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:433,modifiability,compon,components,433,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:824,performance,memor,memory,824,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:875,performance,memor,memory,875,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:327,reliability,doe,doesn,327,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1233,safety,log,logic,1233,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1363,safety,avoid,avoiding,1363,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1493,safety,safe,safer,1493,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1563,safety,patch,patch,1563,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:964,security,model,models,964,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:983,security,model,model,983,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1233,security,log,logic,1233,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1563,security,patch,patch,1563,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1233,testability,log,logic,1233,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:824,usability,memor,memory,824,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:875,usability,memor,memory,875,"[v624][RF] Store a copy of last-used normalization set in RooAddPdf; Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8580:1263,deployability,log,logic,1263,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1511,deployability,updat,updated,1511,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1713,deployability,contain,contains,1713,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:2008,deployability,patch,patch,2008,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:2014,deployability,releas,release,2014,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:994,energy efficiency,model,models,994,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1013,energy efficiency,model,model,1013,"y of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:463,integrability,compon,components,463,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:384,interoperability,specif,specific,384,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:463,interoperability,compon,components,463,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:143,modifiability,variab,variables,143,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:463,modifiability,compon,components,463,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:854,performance,memor,memory,854,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:905,performance,memor,memory,905,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1669,performance,memor,memory,1669,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:357,reliability,doe,doesn,357,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1922,reliability,doe,doesn,1922,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1263,safety,log,logic,1263,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1393,safety,avoid,avoiding,1393,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1511,safety,updat,updated,1511,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1617,safety,avoid,avoided,1617,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1766,safety,review,reviewed,1766,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1938,safety,safe,safer,1938,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:2008,safety,patch,patch,2008,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:994,security,model,models,994,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1013,security,model,model,1013,"y of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1263,security,log,logic,1263,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1511,security,updat,updated,1511,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:2008,security,patch,patch,2008,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1263,testability,log,logic,1263,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1766,testability,review,reviewed,1766,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:854,usability,memor,memory,854,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:905,usability,memor,memory,905,"[RF] Store a copy of last-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a chang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1669,usability,memor,memory,1669,"ast-used normalization set in RooAddPdf and introduce RooArgSet::uniqueId(); Every RooFit pdf is evaluated with a set of variables to normalize over. (normalization set). A pointer to the last used normalization set is. stored in the pdf class. sometimes, pdfs are evaluated without a. normalization set in RooFit if the normalization doesn't matter. But for. a specific class the normalization always matters: the RooAddPdf Because. if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used. normalization set if you evaluate a RooAddPdf without a normalization. set. But since the pdf only has a *pointer* to the last-used. normalization set, it will have an invalid pointer if the actual. previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles. memory every 6000 RooArgSets, the invalid `_normSet` problem only gets. visible in large models, but if the model is large enough it causes. reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set. into the RooAddPdf, instead of only storing a pointer. Furthermore, the. logic to override the empty normalization set with the last-stored. normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding. the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/issues/8581:1012,deployability,API,API,1012,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1454,deployability,API,APIs,1454,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:171,energy efficiency,model,model,171,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:183,energy efficiency,model,model,183,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:231,energy efficiency,model,model,231,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:354,energy efficiency,model,model,354,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:406,energy efficiency,model,model,406,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:522,energy efficiency,core,core,522,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:622,energy efficiency,model,model,622,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:755,energy efficiency,alloc,allocated,755,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:899,energy efficiency,model,model,899,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1012,integrability,API,API,1012,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1454,integrability,API,APIs,1454,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1012,interoperability,API,API,1012,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1454,interoperability,API,APIs,1454,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:918,modifiability,deco,deconstructed,918,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:502,safety,except,exception,502,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:171,security,model,model,171,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:183,security,model,model,183,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:231,security,model,model,231,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:354,security,model,model,354,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:406,security,model,model,406,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:622,security,model,model,622,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:899,security,model,model,899,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1328,testability,context,context,1328,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:837,usability,help,help,837,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:985,usability,user,user-level,985,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1223,usability,clear,clear,1223,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1271,usability,behavi,behavior,1271,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1386,usability,user,users,1386,"[ntuple] RNTupleModel columns ownership issue; - [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:. ```cpp. // sink is destroyed before model. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. {. RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());. sink.Create(*model.get());. // uncomment to run successfully. // model = nullptr; . } . ```. ```. pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. The following sequence is seemingly to blame (worked out with @jblomer):. 1. The model owns fields. 2. On `sink.Create()`, these fields get their columns connected to the page sink . 3. The columns get their pages allocated from the page sink. 4. On destruction, the columns ask the page sink to help the free the pages. 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: . https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358. <!--. A clear and concise description of what the wrong behavior is. -->. ### Setup. ROOT master. ### Additional context. This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8582:1709,availability,state,statement,1709,"ing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3310,availability,slo,slot,3310," ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3623,availability,Down,Download,3623,"L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:469,deployability,observ,observe,469,"TThreadTimer behavior; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3739,deployability,build,build,3739,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3751,deployability,build,build,3751,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3779,deployability,build,build-debug-mode-ROOT,3779,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2426,energy efficiency,core,core,2426," 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2601,energy efficiency,core,core,2601,"Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1709,integrability,state,statement,1709,"ing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3468,integrability,configur,configurable,3468,"mer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2988,interoperability,share,share,2988," ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3468,modifiability,configur,configurable,3468,"mer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1018,performance,Time,Time,1018,"r; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1188,performance,Time,Time,1188,"sed C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Ti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1384,performance,time,times,1384,"each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1431,performance,Time,Time,1431,"imes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1452,performance,Time,Time,1452," 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1474,performance,Time,Time,1474," a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a time",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1497,performance,Time,Time,1497,"iour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1520,performance,Time,Time,1520,".."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, http",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1543,performance,Time,Time,1543,"th another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1566,performance,Time,Time,1566,"ead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1589,performance,Time,Time,1589,"eated a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1612,performance,Time,Time,1612,"cer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:1635,performance,Time,Time,1635,"t -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2006,performance,Time,Time,2006,"Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2027,performance,Time,Time,2027,""",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2050,performance,Time,Time,2050,"unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2073,performance,Time,Time,2073,"no::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2096,performance,Time,Time,2096,"chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2119,performance,Time,Time,2119,"end - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2142,performance,Time,Time,2142,";. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2165,performance,Time,Time,2165,"k: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applicat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2188,performance,Time,Time,2188,"me/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2211,performance,Time,Time,2211,"<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2472,performance,time,timer,2472,"ime/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2500,performance,time,timeout,2500,": 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2750,performance,Time,Time,2750,"). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2771,performance,Time,Time,2771,"f I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2794,performance,Time,Time,2794,"in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2817,performance,Time,Time,2817,"a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2840,performance,Time,Time,2840,"read` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2863,performance,Time,Time,2863,"code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2886,performance,Time,Time,2886,"get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ----",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2909,performance,Time,Time,2909,". The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ---------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2932,performance,Time,Time,2932,"107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. --------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2955,performance,Time,Time,2955,"steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Wel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3069,performance,tune,tune,3069,"3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3187,performance,perform,performance,3187,"ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3453,performance,time,timeout,3453,"43, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4432,performance,deadlock,deadlock,4432,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4484,performance,lock,lock,4484,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4638,performance,perform,performance-effects-in-a-root-based-data-acquisition,4638,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3310,reliability,slo,slot,3310," ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2500,safety,timeout,timeout,2500,": 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2702,safety,except,except,2702,"ut` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 107. Chunk: 2 Time/ms: 167. Chunk: 3 Time/ms: 226. Chunk: 4 Time/ms: 287. Chunk: 5 Time/ms: 347. Chunk: 6 Time/ms: 409. Chunk: 7 Time/ms: 470. Chunk: 8 Time/ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3453,safety,timeout,timeout,3453,"43, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3303,security,sign,signal-slot,3303," 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3468,security,configur,configurable,3468,"mer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4025,security,Team,Team,4025,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4484,security,lock,lock,4484,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:469,testability,observ,observe,469,"TThreadTimer behavior; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:965,testability,simul,simulate,965,"TThreadTimer behavior; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4377,testability,context,context,4377,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:13,usability,behavi,behavior,13,"TThreadTimer behavior; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:156,usability,behavi,behavior,156,"TThreadTimer behavior; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:494,usability,behavi,behaviour,494,"TThreadTimer behavior; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:599,usability,minim,minimal,599,"TThreadTimer behavior; ### Explain what you would like to see improved. After scratching my head for several hours/days, I found out the reason for a weird behavior I was seing in my ROOT-based C++ application for a DAQ system. Long story short: the DAQ acquires data in several chunks, and each chunk readout takes 50 ms. After each readout, a `TThread::Printf()` is called. This makes each iteration take much more than 50ms, sometimes 100ms, sometimes 60ms, etc. (I observe a similar timing behaviour if I call `Emit(""..."")` to communicate with another thread, instead of `Printf`.). I created a minimal reproducer:. ```. //Run as root -l test_timing.cpp+. #include <chrono>. #include ""TThread.h"". void test_timing(). {. 	const std::chrono::steady_clock::time_point tbegin = std::chrono::steady_clock::now();. for(int counter = 0; counter < 10; ++counter). {. const std::chrono::steady_clock::time_point tend = std::chrono::steady_clock::now();. usleep(50000);//simulate readout of 50ms. TThread::Printf(""Chunk: %u Time/ms: %u"",counter, static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()));. //std::cout << ""Chunk: "" << counter << "" Time/ms: "" << static_cast<unsigned int>(std::chrono::duration_cast<std::chrono::milliseconds>(tend - tbegin).count()) << std::endl;. }. }. ```. If I run this standalone example, I get as expected times in steps of 50 ms approx:. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 50. Chunk: 2 Time/ms: 100. Chunk: 3 Time/ms: 150. Chunk: 4 Time/ms: 200. Chunk: 5 Time/ms: 250. Chunk: 6 Time/ms: 301. Chunk: 7 Time/ms: 352. Chunk: 8 Time/ms: 402. Chunk: 9 Time/ms: 453. ```. (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms. ```. Chu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3187,usability,perform,performance,3187,"ms: 531. Chunk: 9 Time/ms: 592. ```. (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3488,usability,user,user,3488,"d, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4233,usability,help,help,4233,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4638,usability,perform,performance-effects-in-a-root-based-data-acquisition,4638,"ts, (except for the first iteration):. ```. Chunk: 0 Time/ms: 0. Chunk: 1 Time/ms: 111. Chunk: 2 Time/ms: 161. Chunk: 3 Time/ms: 211. Chunk: 4 Time/ms: 262. Chunk: 5 Time/ms: 312. Chunk: 6 Time/ms: 362. Chunk: 7 Time/ms: 415. Chunk: 8 Time/ms: 469. Chunk: 9 Time/ms: 521. ```. ### Optional: share how it could be improved. It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it. 3. mkdir build && cd build. 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 5. make. 6. gui/runGUI --prbs 26 -q. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |. | From heads/th1_long@v6-25-01-1451-gaed0c8868c |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/pull/8584:243,deployability,updat,updated,243,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:5,integrability,Translat,Translated,5,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:63,integrability,Translat,Translation,63,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:5,interoperability,Translat,Translated,5,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:63,interoperability,Translat,Translation,63,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:213,safety,test,tested,213,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:243,safety,updat,updated,243,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:243,security,updat,updated,243,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:213,testability,test,tested,213,[RF] Translated RooFit tutorial files; # This Pull request:. - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8585:21,performance,memor,memory,21,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8585:91,performance,memor,memory,91,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8585:0,safety,prevent,prevent,0,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8585:125,safety,test,tested,125,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8585:0,security,preven,prevent,0,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8585:125,testability,test,tested,125,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8585:21,usability,memor,memory,21,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8585:91,usability,memor,memory,91,prevent gGlobalMutex memory leak; # This Pull request:. ## Changes or fixes:. gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8586:143,availability,ping,ping,143,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:85,deployability,fail,fail,85,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:17,energy efficiency,gpu,gpu,17,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:211,integrability,batch,batch,211,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:106,interoperability,platform,platforms,106,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:165,interoperability,platform,platforms,165,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:17,performance,gpu,gpu,17,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:211,performance,batch,batch,211,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:85,reliability,fail,fail,85,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:202,safety,test,test,202,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:202,testability,test,test,202,[webgui] disbale gpu and audio in headless chrome; Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of. web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8587:161,testability,assert,assert,161,"[foundation] Skip R__ASSERT for NDEBUG:; Given the name, the expectation seems to be that `R__ASSERT(e)` will not. evaluate `e` if NDEBUG is defined, just like `assert()`. Use `(void)0` such that `R__ASSERT` can be followed by a semicolon, yet. the compiler knows that there is no instruction to be emitted. Even with this, `R__ASSERT` and `assert` provide different functionality,. with the former calling `::Fatal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8587
https://github.com/root-project/root/pull/8587:341,testability,assert,assert,341,"[foundation] Skip R__ASSERT for NDEBUG:; Given the name, the expectation seems to be that `R__ASSERT(e)` will not. evaluate `e` if NDEBUG is defined, just like `assert()`. Use `(void)0` such that `R__ASSERT` can be followed by a semicolon, yet. the compiler knows that there is no instruction to be emitted. Even with this, `R__ASSERT` and `assert` provide different functionality,. with the former calling `::Fatal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8587
https://github.com/root-project/root/pull/8588:43,modifiability,paramet,parameters,43,Document the TH2 and TH3 constructors; The parameters of the TH2 and TH3 constructors where not documented. Some user pointed it on the forum.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8588
https://github.com/root-project/root/pull/8588:0,usability,Document,Document,0,Document the TH2 and TH3 constructors; The parameters of the TH2 and TH3 constructors where not documented. Some user pointed it on the forum.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8588
https://github.com/root-project/root/pull/8588:96,usability,document,documented,96,Document the TH2 and TH3 constructors; The parameters of the TH2 and TH3 constructors where not documented. Some user pointed it on the forum.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8588
https://github.com/root-project/root/pull/8588:113,usability,user,user,113,Document the TH2 and TH3 constructors; The parameters of the TH2 and TH3 constructors where not documented. Some user pointed it on the forum.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8588
https://github.com/root-project/root/pull/8589:10,usability,support,support,10,gdml: add support for the official spelling of millimeter; Keeping also the typo in case user adjusted their file to it ... .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8589
https://github.com/root-project/root/pull/8589:89,usability,user,user,89,gdml: add support for the official spelling of millimeter; Keeping also the typo in case user adjusted their file to it ... .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8589
https://github.com/root-project/root/pull/8590:174,availability,failur,failure,174,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:194,availability,down,down,194,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:114,deployability,fail,failing,114,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:140,deployability,build,build,140,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:174,deployability,fail,failure,174,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:5,integrability,Wrap,Wrap,5,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:772,integrability,wrap,wrapping,772,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:384,modifiability,variab,variables,384,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:174,performance,failur,failure,174,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:114,reliability,fail,failing,114,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:174,reliability,fail,failure,174,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:76,safety,Test,TestGauss,76,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:92,safety,test,tests,92,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:237,security,access,accessing,237,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:76,testability,Test,TestGauss,76,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:87,testability,unit,unit,87,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:92,testability,test,tests,92,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:1016,testability,understand,understand,1016,"[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class; The `TestGauss` unit tests in roottest are failing with Jonas' ROOT. build (gcc 10 on Arch Linux). The failure was tracked down to a. `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,. where the `unordered_map` with pointers to the variables is filled via. `unordered_map::emplace`. For some reason, the key becomes a nullptr. *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a. struct that is used as the key for `RunContext::spans` solves the. problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8591:33,safety,sanit,sanitizer,33,[NFC][skip-ci] Fix some typos in sanitizer/README.md; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8591
https://github.com/root-project/root/pull/8591:33,security,sanit,sanitizer,33,[NFC][skip-ci] Fix some typos in sanitizer/README.md; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8591
https://github.com/root-project/root/pull/8592:12,availability,redund,redundant,12,[DF] Remove redundant call to TTreeReaderArray::GetSize; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8592
https://github.com/root-project/root/pull/8592:12,deployability,redundan,redundant,12,[DF] Remove redundant call to TTreeReaderArray::GetSize; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8592
https://github.com/root-project/root/pull/8592:12,reliability,redundan,redundant,12,[DF] Remove redundant call to TTreeReaderArray::GetSize; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8592
https://github.com/root-project/root/pull/8592:12,safety,redund,redundant,12,[DF] Remove redundant call to TTreeReaderArray::GetSize; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8592
https://github.com/root-project/root/pull/8593:268,deployability,updat,updated,268,[skip-ci] Added S. Ramanujan's Pi Infinite Series tutorial; # This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8593:156,energy efficiency,cool,cool,156,[skip-ci] Added S. Ramanujan's Pi Infinite Series tutorial; # This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8593:238,safety,test,tested,238,[skip-ci] Added S. Ramanujan's Pi Infinite Series tutorial; # This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8593:268,safety,updat,updated,268,[skip-ci] Added S. Ramanujan's Pi Infinite Series tutorial; # This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8593:268,security,updat,updated,268,[skip-ci] Added S. Ramanujan's Pi Infinite Series tutorial; # This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8593:238,testability,test,tested,238,[skip-ci] Added S. Ramanujan's Pi Infinite Series tutorial; # This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8594:151,deployability,depend,depends,151,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:391,deployability,depend,dependency,391,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:343,energy efficiency,model,models,343,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:151,integrability,depend,depends,151,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:322,integrability,translat,translating,322,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:391,integrability,depend,dependency,391,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:322,interoperability,translat,translating,322,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:151,modifiability,depend,depends,151,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:391,modifiability,depend,dependency,391,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:151,safety,depend,depends,151,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:229,safety,prevent,prevents,229,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:391,safety,depend,dependency,391,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:445,safety,test,tested,445,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:229,security,preven,prevents,229,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:343,security,model,models,343,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:151,testability,depend,depends,151,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:391,testability,depend,dependency,391,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:445,testability,test,tested,445,"[GSoC][TMVA][SOFIE] Restructured SOFIE ; ## Description. This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8595:186,energy efficiency,reduc,reduces,186,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:131,integrability,event,eventually,131,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:253,integrability,schema,schema,253,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:278,safety,test,test,278,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:375,safety,test,tested,375,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:403,safety,test,tests,403,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:278,testability,test,test,278,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:375,testability,test,tested,375,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:403,testability,test,tests,403,"[RF] Make RooProdPdf::_pdfNSetList a std::vector and not RooLinkedList; Part of the RooProdPdf modernization with the intention of eventually. deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs. is implemented in the `LinkDef.h`. The schma evolution is tested by. the stressRooFit tests, which are reading some RooProdPdfs from the. reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8596:2025,availability,replic,replicates,2025," the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set hig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2929,availability,sli,slightly,2929,"s yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:507,deployability,manag,managed,507,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2188,deployability,version,version,2188,"ne the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before maki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2496,deployability,fail,fails,2496,"o include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of cour",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2714,deployability,integr,integrate,2714,"y, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3066,deployability,depend,depends,3066,"hat makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3690,deployability,Updat,Update,3690,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3717,deployability,depend,dependency,3717,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:4049,deployability,updat,updated,4049,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:507,energy efficiency,manag,managed,507,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:603,energy efficiency,optim,optimization,603,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2486,energy efficiency,current,currently,2486,"will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3138,energy efficiency,current,currently,3138,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2188,integrability,version,version,2188,"ne the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before maki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2714,integrability,integr,integrate,2714,"y, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3066,integrability,depend,depends,3066,"hat makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3717,integrability,depend,dependency,3717,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2714,interoperability,integr,integrate,2714,"y, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:276,modifiability,refact,refactored,276,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1365,modifiability,paramet,parameter,1365,"s. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header tha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1412,modifiability,exten,extended,1412,"anges had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1559,modifiability,refact,refactor,1559," like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1626,modifiability,paramet,parameters,1626,"moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2188,modifiability,version,version,2188,"ne the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before maki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2714,modifiability,integr,integrate,2714,"y, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3066,modifiability,depend,depends,3066,"hat makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3717,modifiability,depend,dependency,3717,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:276,performance,refactor,refactored,276,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:603,performance,optimiz,optimization,603,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1559,performance,refactor,refactor,1559," like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2496,reliability,fail,fails,2496,"o include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of cour",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2714,reliability,integr,integrate,2714,"y, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2929,reliability,sli,slightly,2929,"s yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:23,safety,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:507,safety,manag,managed,507,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2118,safety,test,tested,2118,"is disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2286,safety,test,test,2286,"izerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2309,safety,test,testRooGradMinimizer,2309," can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this bran",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2402,safety,test,tests,2402,"ill be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2481,safety,test,test,2481,"on that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3066,safety,depend,depends,3066,"hat makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3433,safety,review,review,3433,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3505,safety,review,review,3505,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3690,safety,Updat,Update,3690,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3717,safety,depend,dependency,3717,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3899,safety,review,review,3899,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3990,safety,review,review,3990,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:4019,safety,test,tested,4019,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:4049,safety,updat,updated,4049,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:797,security,access,access,797,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2714,security,integr,integrate,2714,"y, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3690,security,Updat,Update,3690,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:4049,security,updat,updated,4049,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:23,testability,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2118,testability,test,tested,2118,"is disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2286,testability,test,test,2286,"izerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2309,testability,test,testRooGradMinimizer,2309," can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this bran",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2402,testability,test,tests,2402,"ill be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2481,testability,test,test,2481,"on that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2714,testability,integr,integrate,2714,"y, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3066,testability,depend,depends,3066,"hat makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3433,testability,review,review,3433,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3505,testability,review,review,3505,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3717,testability,depend,dependency,3717,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3899,testability,review,review,3899,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3990,testability,review,review,3990,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:4019,testability,test,tested,4019,"more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:196,usability,minim,minimization,196,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:524,usability,Minim,MinimizerFcn,524,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:978,usability,Minim,MinimizerFcn,978,"RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn; This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:. - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`. - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well. - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1750,usability,minim,minimizer,1750,"everal places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well. - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2432,usability,minim,minimization,2432,"ient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to revie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2886,usability,effectiv,effectiveness,2886,"aven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2905,usability,minim,minimization,2905,"mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comme",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/issues/8597:93,energy efficiency,draw,drawing,93,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:581,energy efficiency,Draw,Draw,581,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:1154,energy efficiency,current,current,1154,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:1218,energy efficiency,load,load,1218,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:149,interoperability,format,format,149,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:1218,performance,load,load,1218,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:834,security,Team,Team,834,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:1142,testability,context,context,1142,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:444,usability,behavi,behavior,444,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:522,usability,document,documented,522,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8597:998,usability,help,help,998,"default TH2 palette is changed when using TGeoPainter; ### Describe the bug. I have a script drawing a TH2 histogram, which by default plots in Bird format. Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior. The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce. 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```. TGLViewer* v = eM->GetDefaultGLViewer();. v->SetClearColor(kWhite);. v->SetGuideState(2,true,false,NULL);. v->SetResetCamerasOnUpdate(false);. eM->GetMainWindow()->MoveResize(1200,57,700,600);. eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8598:5,deployability,automat,automatically,5,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8598:75,deployability,automat,automatically,75,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8598:36,energy efficiency,draw,drawing,36,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8598:106,energy efficiency,draw,drawing,106,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8598:44,performance,time,time,44,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8598:114,performance,time,time,114,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8598:5,testability,automat,automatically,5,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8598:75,testability,automat,automatically,75,Call automatically LabelsDeflate at drawing time; It would be nice to call automatically LabelsDeflate at drawing time when plotting histogram with labels. It was requested here: https://root-forum.cern.ch/t/wrong-range-enabled-by-default-when-filling-a-histogram/45554/4.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8598
https://github.com/root-project/root/issues/8599:307,deployability,version,version,307,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:392,deployability,version,version,392,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:537,deployability,version,version,537,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:63,energy efficiency,current,current,63,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:307,integrability,version,version,307,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:392,integrability,version,version,392,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:537,integrability,version,version,537,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:307,modifiability,version,version,307,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:392,modifiability,version,version,392,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:537,modifiability,version,version,537,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:355,safety,safe,safe,355,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:42,usability,guid,guide,42,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:166,usability,interact,interactive,166,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:425,usability,guid,guide,425,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:568,usability,guid,guide,568,"Preserve JSROOT when generating reference guide; Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to. provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes. To be on the safe side, we should preserve JSROOT version with generated reference guide. Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files . and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/pull/8600:114,deployability,resourc,resource,114,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:114,energy efficiency,resourc,resource,114,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:39,integrability,configur,configure,39,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:39,modifiability,configur,configure,39,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:114,performance,resourc,resource,114,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:26,reliability,RCa,RCanvas,26,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:114,safety,resourc,resource,114,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:39,security,configur,configure,39,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:114,testability,resourc,resource,114,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8600:49,usability,custom,custom,49,Introduce RFont class for RCanvas; Let configure custom font - either as woff/woff2 files or just url to external resource. Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/pull/8602:48,integrability,sub,subfolder,48,"Move RCanvas tutorials into `tutorials/rcanvas` subfolder; * separate them from other v7-related tutorials (like for RBrowser). * provide common naming convention. * provide special group in doxygen . * introduce `rcanvas_update.cxx` tutorial, removing similar part from `tobject.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8602
https://github.com/root-project/root/pull/8602:5,reliability,RCa,RCanvas,5,"Move RCanvas tutorials into `tutorials/rcanvas` subfolder; * separate them from other v7-related tutorials (like for RBrowser). * provide common naming convention. * provide special group in doxygen . * introduce `rcanvas_update.cxx` tutorial, removing similar part from `tobject.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8602
https://github.com/root-project/root/pull/8602:39,reliability,rca,rcanvas,39,"Move RCanvas tutorials into `tutorials/rcanvas` subfolder; * separate them from other v7-related tutorials (like for RBrowser). * provide common naming convention. * provide special group in doxygen . * introduce `rcanvas_update.cxx` tutorial, removing similar part from `tobject.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8602
https://github.com/root-project/root/pull/8603:25,deployability,version,version,25,[skip-ci] Use the JSRoot version corresponding to the ROOT version.; as requested here: https://github.com/root-project/root/issues/8599.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8603
https://github.com/root-project/root/pull/8603:59,deployability,version,version,59,[skip-ci] Use the JSRoot version corresponding to the ROOT version.; as requested here: https://github.com/root-project/root/issues/8599.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8603
https://github.com/root-project/root/pull/8603:25,integrability,version,version,25,[skip-ci] Use the JSRoot version corresponding to the ROOT version.; as requested here: https://github.com/root-project/root/issues/8599.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8603
https://github.com/root-project/root/pull/8603:59,integrability,version,version,59,[skip-ci] Use the JSRoot version corresponding to the ROOT version.; as requested here: https://github.com/root-project/root/issues/8599.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8603
https://github.com/root-project/root/pull/8603:25,modifiability,version,version,25,[skip-ci] Use the JSRoot version corresponding to the ROOT version.; as requested here: https://github.com/root-project/root/issues/8599.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8603
https://github.com/root-project/root/pull/8603:59,modifiability,version,version,59,[skip-ci] Use the JSRoot version corresponding to the ROOT version.; as requested here: https://github.com/root-project/root/issues/8599.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8603
https://github.com/root-project/root/issues/8604:121,performance,time,time,121,"[RF] Remove ""No RooMinimizer"" code paths.; There is a large section of code that's never checked (compiled) related to a time before RooMinimizer. For example:. https://github.com/root-project/root/blob/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/roofit/roofitcore/src/RooAbsPdf.cxx#L1599-L1783. This, together with the minimiser option `OldMinuit` (see RooAbsPdf::fitTo) should be removed. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8569#discussion_r662968457_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8604
https://github.com/root-project/root/issues/8604:317,usability,minim,minimiser,317,"[RF] Remove ""No RooMinimizer"" code paths.; There is a large section of code that's never checked (compiled) related to a time before RooMinimizer. For example:. https://github.com/root-project/root/blob/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/roofit/roofitcore/src/RooAbsPdf.cxx#L1599-L1783. This, together with the minimiser option `OldMinuit` (see RooAbsPdf::fitTo) should be removed. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8569#discussion_r662968457_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8604
https://github.com/root-project/root/pull/8605:134,usability,support,support,134,[DF] Use `ROOT::Internal::TreeUtils` functions in `TreeHeadNode` class; fixes #7584. This PR addresses third step of #8391 . > Better support friends with the recently introduced ROOT::Internal::TreeUtils functions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8605
https://github.com/root-project/root/pull/8606:159,deployability,contain,contains,159,"Use helper aliases from type_traits where possible; I only did a pass in `tree/dataframe` and `core/foundation`, which is code I wrote or maintain that I know contains a lot of TMP.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8606
https://github.com/root-project/root/pull/8606:95,energy efficiency,core,core,95,"Use helper aliases from type_traits where possible; I only did a pass in `tree/dataframe` and `core/foundation`, which is code I wrote or maintain that I know contains a lot of TMP.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8606
https://github.com/root-project/root/pull/8606:138,modifiability,maintain,maintain,138,"Use helper aliases from type_traits where possible; I only did a pass in `tree/dataframe` and `core/foundation`, which is code I wrote or maintain that I know contains a lot of TMP.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8606
https://github.com/root-project/root/pull/8606:138,safety,maintain,maintain,138,"Use helper aliases from type_traits where possible; I only did a pass in `tree/dataframe` and `core/foundation`, which is code I wrote or maintain that I know contains a lot of TMP.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8606
https://github.com/root-project/root/pull/8606:4,usability,help,helper,4,"Use helper aliases from type_traits where possible; I only did a pass in `tree/dataframe` and `core/foundation`, which is code I wrote or maintain that I know contains a lot of TMP.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8606
https://github.com/root-project/root/pull/8607:210,modifiability,interm,intermediate,210,"[RF] Make RooArgList and RooArgSet constructors also accept numbers; This PR makes the necessary changes on the C++ side to be able to construct RooFit collections directly from numerical constants without the intermediate call to `RooFit::RooConst`. This works now both from C++ and Python and helps to make the Python code much more expressive and pythonic. For example this:. ```Python. px = ROOT.RooPolynomial(""px"", ""px"", x, ROOT.RooArgList(ROOT.RooFit.RooConst(-0.1), ROOT.RooFit.RooConst(0.004))). ```. becomes this:. ```Python. px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8607
https://github.com/root-project/root/pull/8607:295,usability,help,helps,295,"[RF] Make RooArgList and RooArgSet constructors also accept numbers; This PR makes the necessary changes on the C++ side to be able to construct RooFit collections directly from numerical constants without the intermediate call to `RooFit::RooConst`. This works now both from C++ and Python and helps to make the Python code much more expressive and pythonic. For example this:. ```Python. px = ROOT.RooPolynomial(""px"", ""px"", x, ROOT.RooArgList(ROOT.RooFit.RooConst(-0.1), ROOT.RooFit.RooConst(0.004))). ```. becomes this:. ```Python. px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8607
https://github.com/root-project/root/pull/8608:5,reliability,rca,rcanvas,5,"Add `rcanvas/th1_twoscales.cxx` tutorial [skip-ci]; Macro produces exactly same output as `hist/twoscales.cxx`, . but without need of extra `TGaxis` and artificial rescaling of second histogram. Produced canvas is fully interactive.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8608
https://github.com/root-project/root/pull/8608:220,usability,interact,interactive,220,"Add `rcanvas/th1_twoscales.cxx` tutorial [skip-ci]; Macro produces exactly same output as `hist/twoscales.cxx`, . but without need of extra `TGaxis` and artificial rescaling of second histogram. Produced canvas is fully interactive.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8608
https://github.com/root-project/root/pull/8609:32,energy efficiency,adapt,adapter,32,"[RF] Deprecate RooMinuit class (adapter between RooFit and minuit, got replaced by the more general RooMinimizer); See commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8609
https://github.com/root-project/root/pull/8609:32,integrability,adapt,adapter,32,"[RF] Deprecate RooMinuit class (adapter between RooFit and minuit, got replaced by the more general RooMinimizer); See commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8609
https://github.com/root-project/root/pull/8609:32,interoperability,adapt,adapter,32,"[RF] Deprecate RooMinuit class (adapter between RooFit and minuit, got replaced by the more general RooMinimizer); See commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8609
https://github.com/root-project/root/pull/8609:32,modifiability,adapt,adapter,32,"[RF] Deprecate RooMinuit class (adapter between RooFit and minuit, got replaced by the more general RooMinimizer); See commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8609
https://github.com/root-project/root/issues/8610:29,availability,error,error,29,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:412,availability,error,error,412,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:1139,availability,error,error,1139,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:251,deployability,build,build,251,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:262,deployability,instal,install,262,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:319,deployability,instal,install,319,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:328,deployability,build,build-from-source,328,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:428,deployability,Build,Building,428,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:167,energy efficiency,core,core,167,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:448,energy efficiency,core,core,448,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:567,energy efficiency,core,core,567,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:646,energy efficiency,core,core,646,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:712,energy efficiency,core,core,712,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:770,energy efficiency,core,core,770,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:836,energy efficiency,core,core,836,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:1085,energy efficiency,core,core,1085,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:29,performance,error,error,29,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:412,performance,error,error,412,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:1139,performance,error,error,1139,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:29,safety,error,error,29,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:412,safety,error,error,412,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:1139,safety,error,error,1139,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:29,usability,error,error,29,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:412,usability,error,error,412,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:1139,usability,error,error,1139,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:1342,usability,behavi,behaviour,1342,"Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root; https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o. In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,. from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,. from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,. from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:. [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:. [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/pull/8611:349,deployability,integr,integrator,349,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:407,deployability,Integr,Integration,407,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:15,integrability,messag,message,15,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:349,integrability,integr,integrator,349,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:407,integrability,Integr,Integration,407,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:15,interoperability,messag,message,15,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:349,interoperability,integr,integrator,349,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:407,interoperability,Integr,Integration,407,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:349,modifiability,integr,integrator,349,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:407,modifiability,Integr,Integration,407,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:100,reliability,doe,doesn,100,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:349,reliability,integr,integrator,349,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:407,reliability,Integr,Integration,407,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:64,safety,test,tests,64,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:82,safety,avoid,avoid,82,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:149,safety,test,test,149,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:207,safety,test,test,207,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:397,safety,Test,Test,397,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:349,security,integr,integrator,349,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:407,security,Integr,Integration,407,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:64,testability,test,tests,64,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:149,testability,test,test,149,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:207,testability,test,test,207,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:349,testability,integr,integrator,349,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:397,testability,Test,Test,397,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:407,testability,Integr,Integration,407,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:108,usability,indicat,indicate,108,"[RF] Use local message level changes in stressRooFit to silence tests; This is to avoid output that doesn't indicate any problem and only makes. the test output harder to interpret. That's how the output of test 27 was before this commit:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y). Test 27 : Integration over non-rectangular regions...............OK. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8612:55,deployability,version,version,55,"[core/foundation] Add R__DEBUG_ASSERT macro; This is a version of R__ASSERT that is only compiled in debug builds,. as it's too late to have R__ASSERT itself disappear from debug builds,. see e.g. the discussion at https://github.com/root-project/root/pull/8587.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8612
https://github.com/root-project/root/pull/8612:107,deployability,build,builds,107,"[core/foundation] Add R__DEBUG_ASSERT macro; This is a version of R__ASSERT that is only compiled in debug builds,. as it's too late to have R__ASSERT itself disappear from debug builds,. see e.g. the discussion at https://github.com/root-project/root/pull/8587.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8612
https://github.com/root-project/root/pull/8612:179,deployability,build,builds,179,"[core/foundation] Add R__DEBUG_ASSERT macro; This is a version of R__ASSERT that is only compiled in debug builds,. as it's too late to have R__ASSERT itself disappear from debug builds,. see e.g. the discussion at https://github.com/root-project/root/pull/8587.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8612
https://github.com/root-project/root/pull/8612:1,energy efficiency,core,core,1,"[core/foundation] Add R__DEBUG_ASSERT macro; This is a version of R__ASSERT that is only compiled in debug builds,. as it's too late to have R__ASSERT itself disappear from debug builds,. see e.g. the discussion at https://github.com/root-project/root/pull/8587.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8612
https://github.com/root-project/root/pull/8612:55,integrability,version,version,55,"[core/foundation] Add R__DEBUG_ASSERT macro; This is a version of R__ASSERT that is only compiled in debug builds,. as it's too late to have R__ASSERT itself disappear from debug builds,. see e.g. the discussion at https://github.com/root-project/root/pull/8587.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8612
https://github.com/root-project/root/pull/8612:55,modifiability,version,version,55,"[core/foundation] Add R__DEBUG_ASSERT macro; This is a version of R__ASSERT that is only compiled in debug builds,. as it's too late to have R__ASSERT itself disappear from debug builds,. see e.g. the discussion at https://github.com/root-project/root/pull/8587.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8612
https://github.com/root-project/root/pull/8613:209,deployability,updat,updated,209,Added Histogram Normalization Tutorial; # This Pull request:. Adds a tutorial demonstrating the 7 ways to normalize a histogram. ## Changes or fixes:. Above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8613
https://github.com/root-project/root/pull/8613:179,safety,test,tested,179,Added Histogram Normalization Tutorial; # This Pull request:. Adds a tutorial demonstrating the 7 ways to normalize a histogram. ## Changes or fixes:. Above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8613
https://github.com/root-project/root/pull/8613:209,safety,updat,updated,209,Added Histogram Normalization Tutorial; # This Pull request:. Adds a tutorial demonstrating the 7 ways to normalize a histogram. ## Changes or fixes:. Above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8613
https://github.com/root-project/root/pull/8613:209,security,updat,updated,209,Added Histogram Normalization Tutorial; # This Pull request:. Adds a tutorial demonstrating the 7 ways to normalize a histogram. ## Changes or fixes:. Above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8613
https://github.com/root-project/root/pull/8613:179,testability,test,tested,179,Added Histogram Normalization Tutorial; # This Pull request:. Adds a tutorial demonstrating the 7 ways to normalize a histogram. ## Changes or fixes:. Above. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8613
https://github.com/root-project/root/pull/8614:1637,availability,error,error,1637,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:671,deployability,stack,stack,671,"[RF] Use std::string_view for name and title in RooFit data classes constructors; In modern C++, the `std::string_view` can be used instead of C-style. strings (`const char*`) to pass strings around. The motivation to make this change now and for the data-related RooFit. classes only is pyROOT. With cppyy, Python strings get converted. to `std::strings` if you pass them to a templated function. This is. problematic if the templated function is forwarding the arguments to a. function that accepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1724,deployability,build,builds,1724,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1696,interoperability,incompatib,incompatibility,1696,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1747,interoperability,standard,standard,1747,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1788,interoperability,convers,conversion,1788,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1637,performance,error,error,1637,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1670,performance,time,time,1670,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1799,reliability,doe,does,1799,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1976,reliability,doe,doesn,1976,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1637,safety,error,error,1637,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1943,safety,test,test,1943,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:604,security,sign,signature,604,"[RF] Use std::string_view for name and title in RooFit data classes constructors; In modern C++, the `std::string_view` can be used instead of C-style. strings (`const char*`) to pass strings around. The motivation to make this change now and for the data-related RooFit. classes only is pyROOT. With cppyy, Python strings get converted. to `std::strings` if you pass them to a templated function. This is. problematic if the templated function is forwarding the arguments to a. function that accepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:677,testability,trace,trace,677,"[RF] Use std::string_view for name and title in RooFit data classes constructors; In modern C++, the `std::string_view` can be used instead of C-style. strings (`const char*`) to pass strings around. The motivation to make this change now and for the data-related RooFit. classes only is pyROOT. With cppyy, Python strings get converted. to `std::strings` if you pass them to a templated function. This is. problematic if the templated function is forwarding the arguments to a. function that accepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1943,testability,test,test,1943,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1198,usability,help,helper,1198,"he motivation to make this change now and for the data-related RooFit. classes only is pyROOT. With cppyy, Python strings get converted. to `std::strings` if you pass them to a templated function. This is. problematic if the templated function is forwarding the arguments to a. function that accepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1298,usability,user,user,1298," cppyy, Python strings get converted. to `std::strings` if you pass them to a templated function. This is. problematic if the templated function is forwarding the arguments to a. function that accepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1617,usability,user,users,1617,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1637,usability,error,error,1637,"ccepts a C-style string. In most cases, cppyy will just. tell you that the arguments don't match the function signature, but. there are corner cases in which an uninterpretable stack trace is. created. Here is a reproducer for that, inspired by the. RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python. import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>. MyClass(Args_t&&... args). : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }. {. _dataset->Print();. }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y). helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet). ```. This change should not break much user code, because a. `std::string_view` can also be implicitely constructed from a C-style. string or a TString. There is one problem if one passed a `nullptr` before, a. `std::string_view` can't be constructed from a `nullptr`. But a. `nullptr` for name and title is a mistake anyway, so it can be expected. from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14. standard, the `TString` to `string_view` conversion does not work. However, this problem is solved by templated constructors that take. `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:. ```Python. import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000). dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \. .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.). y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). x.setBins(10). y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)). rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")). rooDataSet.GetPtr().Print(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/issues/8615:319,availability,Error,ErrorType,319,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:446,availability,error,error,446,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:592,availability,error,error,592,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:319,performance,Error,ErrorType,319,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:446,performance,error,error,446,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:592,performance,error,error,592,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:485,reliability,Poisson,Poisson,485,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:515,reliability,Poisson,Poisson,515,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:646,reliability,Poisson,Poisson,646,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:319,safety,Error,ErrorType,319,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:446,safety,error,error,446,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:592,safety,error,error,592,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:9,usability,document,documentation,9,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:319,usability,Error,ErrorType,319,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:446,usability,error,error,446,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:592,usability,error,error,592,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:721,usability,document,documentation,721,"[RF] Add documentation for RooAbsData::Expected ; ### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation? I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/pull/8616:114,deployability,version,version,114,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:103,energy efficiency,optim,optimised,103,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:114,integrability,version,version,114,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:129,integrability,batch,batch,129,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:186,integrability,sub,subtree,186,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:228,integrability,batch,batch,228,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:114,modifiability,version,version,114,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:129,performance,batch,batch,129,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:228,performance,batch,batch,228,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:430,safety,test,test,430,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8616:430,testability,test,test,430,"[RF] Tweak RooAbsReal::evaluateSpan.; evaluateSpan() is a fallback for classes that don't implement an optimised. version of the batch computation function. It used to visit the entire. subtree in single-value mode to compute a batch of values. Using RooAbsReal::writeToCache(), one should be able to get away with. visiting only the next level. This should speed up computations, because. less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8617:164,deployability,updat,update,164,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:216,deployability,upgrad,upgrade,216,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:216,modifiability,upgrad,upgrade,216,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:164,safety,updat,update,164,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:164,security,updat,update,164,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:52,usability,Visual,Visual,52,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:174,usability,Visual,Visual,174,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:236,usability,Visual,Visual,236,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:316,usability,support,supporting,316,Disable the __CUDACC__ macro definition with latest Visual Studio; Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3. This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/issues/8618:581,availability,Down,Download,581,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:173,deployability,updat,update,173,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:885,deployability,scale,scale,885,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:885,energy efficiency,scale,scale,885,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:755,integrability,event,event,755,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:885,modifiability,scal,scale,885,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:885,performance,scale,scale,885,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:173,safety,updat,update,173,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:36,security,modif,modified,36,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:173,security,updat,update,173,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:1067,security,Team,Team,1067,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:276,usability,user,user-images,276,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:385,usability,behavi,behavior,385,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:464,usability,user,user-images,464,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:1231,usability,help,help,1231,"TH2 palette tick length is silently modified when passed to TGLAxisPainter; - [x] Checked for duplicates. ### Describe the bug. In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior. Palette lines stay were they were in the beginning. ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce. 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip). 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`. 3. Click one on the ""next event arrow"". 4. Click again, artefact appears. 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/pull/8620:12,safety,test,tests,12,RBox TCling tests vs ROOT7; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8620
https://github.com/root-project/root/pull/8620:93,safety,test,tested,93,RBox TCling tests vs ROOT7; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8620
https://github.com/root-project/root/pull/8620:12,testability,test,tests,12,RBox TCling tests vs ROOT7; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8620
https://github.com/root-project/root/pull/8620:93,testability,test,tested,93,RBox TCling tests vs ROOT7; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8620
https://github.com/root-project/root/pull/8621:153,energy efficiency,draw,drawn,153,TGLAxisPainter silently modified the histogram's Z axis parameters; Tick length set to a fixed value 1. The Z axis tick marks length was then wrong when drawn in a 2D canvas. This was discovered by: https://github.com/root-project/root/issues/8618.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8621
https://github.com/root-project/root/pull/8621:184,integrability,discover,discovered,184,TGLAxisPainter silently modified the histogram's Z axis parameters; Tick length set to a fixed value 1. The Z axis tick marks length was then wrong when drawn in a 2D canvas. This was discovered by: https://github.com/root-project/root/issues/8618.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8621
https://github.com/root-project/root/pull/8621:184,interoperability,discover,discovered,184,TGLAxisPainter silently modified the histogram's Z axis parameters; Tick length set to a fixed value 1. The Z axis tick marks length was then wrong when drawn in a 2D canvas. This was discovered by: https://github.com/root-project/root/issues/8618.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8621
https://github.com/root-project/root/pull/8621:56,modifiability,paramet,parameters,56,TGLAxisPainter silently modified the histogram's Z axis parameters; Tick length set to a fixed value 1. The Z axis tick marks length was then wrong when drawn in a 2D canvas. This was discovered by: https://github.com/root-project/root/issues/8618.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8621
https://github.com/root-project/root/pull/8621:24,security,modif,modified,24,TGLAxisPainter silently modified the histogram's Z axis parameters; Tick length set to a fixed value 1. The Z axis tick marks length was then wrong when drawn in a 2D canvas. This was discovered by: https://github.com/root-project/root/issues/8618.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8621
https://github.com/root-project/root/pull/8621:184,usability,discov,discovered,184,TGLAxisPainter silently modified the histogram's Z axis parameters; Tick length set to a fixed value 1. The Z axis tick marks length was then wrong when drawn in a 2D canvas. This was discovered by: https://github.com/root-project/root/issues/8618.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8621
https://github.com/root-project/root/issues/8622:637,testability,context,context,637,"PyROOT triggers a warning about [[nodiscard]] vector::empty with GCC11; ### Describe the bug. ```python. import ROOT. ROOT.gInterpreter.Declare(. """""". struct S{. std::vector<int> vec1;. };. """"""). s = ROOT.S(). if (s.vec1.empty()):. print(""s vec1 is empty""). ```. ```. $ python struct_with_vec_empty_nodiscard.py . input_line_38:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. s vec1 is empty. ```. ### Expected behavior. No warning triggered. ### Setup. ROOT 6.25 built on Fedora34 with GCC 11. ### Additional context. This is the behaviour at the root prompt. ```. root [0] std::vector<int> vec1;. root [1] vec1.empty(). ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]. vec1.empty(). ^~~~~~~~~~. (bool) true. root [2] if (vec1.empty()) {}. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8622
https://github.com/root-project/root/issues/8622:538,usability,behavi,behavior,538,"PyROOT triggers a warning about [[nodiscard]] vector::empty with GCC11; ### Describe the bug. ```python. import ROOT. ROOT.gInterpreter.Declare(. """""". struct S{. std::vector<int> vec1;. };. """"""). s = ROOT.S(). if (s.vec1.empty()):. print(""s vec1 is empty""). ```. ```. $ python struct_with_vec_empty_nodiscard.py . input_line_38:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. s vec1 is empty. ```. ### Expected behavior. No warning triggered. ### Setup. ROOT 6.25 built on Fedora34 with GCC 11. ### Additional context. This is the behaviour at the root prompt. ```. root [0] std::vector<int> vec1;. root [1] vec1.empty(). ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]. vec1.empty(). ^~~~~~~~~~. (bool) true. root [2] if (vec1.empty()) {}. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8622
https://github.com/root-project/root/issues/8622:658,usability,behavi,behaviour,658,"PyROOT triggers a warning about [[nodiscard]] vector::empty with GCC11; ### Describe the bug. ```python. import ROOT. ROOT.gInterpreter.Declare(. """""". struct S{. std::vector<int> vec1;. };. """"""). s = ROOT.S(). if (s.vec1.empty()):. print(""s vec1 is empty""). ```. ```. $ python struct_with_vec_empty_nodiscard.py . input_line_38:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. s vec1 is empty. ```. ### Expected behavior. No warning triggered. ### Setup. ROOT 6.25 built on Fedora34 with GCC 11. ### Additional context. This is the behaviour at the root prompt. ```. root [0] std::vector<int> vec1;. root [1] vec1.empty(). ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]. vec1.empty(). ^~~~~~~~~~. (bool) true. root [2] if (vec1.empty()) {}. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8622
https://github.com/root-project/root/pull/8623:136,availability,operat,operation,136,Change naming scheme of distributed snapshot; Change the naming scheme of distributed Snapshot in preparation of the removal of `Range` operation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8623
https://github.com/root-project/root/pull/8623:24,interoperability,distribut,distributed,24,Change naming scheme of distributed snapshot; Change the naming scheme of distributed Snapshot in preparation of the removal of `Range` operation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8623
https://github.com/root-project/root/pull/8623:74,interoperability,distribut,distributed,74,Change naming scheme of distributed snapshot; Change the naming scheme of distributed Snapshot in preparation of the removal of `Range` operation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8623
https://github.com/root-project/root/issues/8624:40,deployability,depend,dependencies,40,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:283,deployability,depend,depend,283,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:376,deployability,depend,dependencies,376,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:473,deployability,build,build,473,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:984,deployability,build,build,984,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:538,energy efficiency,core,core,538,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:571,energy efficiency,core,cores,571,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:1026,energy efficiency,core,core,1026,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:1099,energy efficiency,core,core,1099,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:1132,energy efficiency,core,cores,1132,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:40,integrability,depend,dependencies,40,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:283,integrability,depend,depend,283,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:376,integrability,depend,dependencies,376,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:328,interoperability,share,share,328,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:40,modifiability,depend,dependencies,40,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:283,modifiability,depend,depend,283,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:376,modifiability,depend,dependencies,376,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:176,performance,time,time,176,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:499,performance,time,time,499,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:589,performance,time,time,589,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:1061,performance,time,time,1061,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:40,safety,depend,dependencies,40,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:283,safety,depend,depend,283,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:376,safety,depend,dependencies,376,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:108,security,modif,modifying,108,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:411,security,modif,modification,411,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:958,security,modif,modification,958,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:1408,security,Team,Team,1408,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:40,testability,depend,dependencies,40,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:283,testability,depend,depend,283,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:376,testability,depend,dependencies,376,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:1758,testability,context,context,1758,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:1614,usability,help,help,1614,"ROOT recompilation speed with CMake and dependencies; ### Explain what you would like to see improved. When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved. Remove unneeded dependencies. ### To Reproduce. No-modification at all of the source code, ccache ON. 1. cd into build directory. 2. Call `time make`. 3. Takes 59 seconds with 1 core. 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:. ```. [ 76%] Built target X86CommonTableGen. [ 76%] Built target LLVMX86Info. [ 76%] Built target LLVMX86AsmParser. [ 76%] Built target LLVMX86Utils. [ 76%] Built target LLVMX86Disassembler. [ 76%] Built target LLVMX86Desc. [ 76%] Built target LLVMX86CodeGen. ```. Now, an example with modification:. 1. cd into build directory. 2. Call `touch sourceDir/core/base/src/TROOT.cxx`. 3. Call `time make`. 4. Takes 485 seconds in 1 core. 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |. | From heads/master@v6-25-01-1572-gaa21d63ca3 |. | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/pull/8625:324,deployability,updat,updated,324,Added Histogram X-Axis Range Change tutorial; # This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how the changing of the range can zoom into the histogram. As discussed in [this](https://root-forum.cern.ch/t/histogram-x-axis-range/12815) forum post. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8625
https://github.com/root-project/root/pull/8625:294,safety,test,tested,294,Added Histogram X-Axis Range Change tutorial; # This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how the changing of the range can zoom into the histogram. As discussed in [this](https://root-forum.cern.ch/t/histogram-x-axis-range/12815) forum post. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8625
https://github.com/root-project/root/pull/8625:324,safety,updat,updated,324,Added Histogram X-Axis Range Change tutorial; # This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how the changing of the range can zoom into the histogram. As discussed in [this](https://root-forum.cern.ch/t/histogram-x-axis-range/12815) forum post. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8625
https://github.com/root-project/root/pull/8625:324,security,updat,updated,324,Added Histogram X-Axis Range Change tutorial; # This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how the changing of the range can zoom into the histogram. As discussed in [this](https://root-forum.cern.ch/t/histogram-x-axis-range/12815) forum post. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8625
https://github.com/root-project/root/pull/8625:294,testability,test,tested,294,Added Histogram X-Axis Range Change tutorial; # This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how the changing of the range can zoom into the histogram. As discussed in [this](https://root-forum.cern.ch/t/histogram-x-axis-range/12815) forum post. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8625
https://github.com/root-project/root/pull/8626:221,deployability,version,version,221,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:289,deployability,version,version,289,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:221,integrability,version,version,221,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:289,integrability,version,version,289,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:221,modifiability,version,version,221,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:289,modifiability,version,version,289,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:110,security,auth,author,110,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:229,security,control,controlled,229,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:229,testability,control,controlled,229,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8626:250,usability,tool,tooling,250,"[citation.cff] Add CITATION.cff and machinery to generate it from RelNotes: [skip-ci]; For that, reformat the author list in the relnotes to make it easier / more stable to parse. `CITATION.cff`, while generated, must be version controlled such that tooling can find it. TODO: trigger in `version` target.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8626
https://github.com/root-project/root/pull/8627:105,usability,guid,guide-broken,105,[skip-ci] Set ALWAYS_DETAILED_SEC to YES; As suggested here: https://root-forum.cern.ch/t/root-reference-guide-broken/45741.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8627
https://github.com/root-project/root/pull/8628:83,availability,operat,operator,83,"Do not use `^` to redirect to stderr in fish; Recent fish versions removed the `^` operator, see e.g. https://fishshell.com/release_notes.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8628
https://github.com/root-project/root/pull/8628:58,deployability,version,versions,58,"Do not use `^` to redirect to stderr in fish; Recent fish versions removed the `^` operator, see e.g. https://fishshell.com/release_notes.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8628
https://github.com/root-project/root/pull/8628:58,integrability,version,versions,58,"Do not use `^` to redirect to stderr in fish; Recent fish versions removed the `^` operator, see e.g. https://fishshell.com/release_notes.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8628
https://github.com/root-project/root/pull/8628:58,modifiability,version,versions,58,"Do not use `^` to redirect to stderr in fish; Recent fish versions removed the `^` operator, see e.g. https://fishshell.com/release_notes.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8628
https://github.com/root-project/root/pull/8629:194,integrability,configur,configure,194,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:680,integrability,configur,configured,680,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:396,interoperability,specif,specify,396,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:194,modifiability,configur,configure,194,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:680,modifiability,configur,configured,680,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:0,reliability,RCa,RCanvas,0,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:194,security,configur,configure,194,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:680,security,configur,configured,680,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:204,usability,custom,custom,204,"RCanvas - provide enums for different style attributes; - fill style in `RAttrFill`. - line style in `RAttrLine`. - font kind in `RAttrFont`. - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. . One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner. By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8630:338,deployability,API,API,338,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:60,integrability,interfac,interface,60,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:152,integrability,interfac,interface,152,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:338,integrability,API,API,338,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:525,integrability,interfac,interface,525,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:60,interoperability,interfac,interface,60,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:152,interoperability,interfac,interface,152,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:338,interoperability,API,API,338,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:525,interoperability,interfac,interface,525,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:60,modifiability,interfac,interface,60,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:152,modifiability,interfac,interface,152,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:525,modifiability,interfac,interface,525,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:542,safety,test,test,542,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:542,testability,test,test,542,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:371,usability,support,support,371,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:457,usability,Support,Support,457,"Add several improvements to use Unuran with the DistSampler interface; This Pull request adds several improvements to use UNU.RAN using the DistSampler interface. (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. . . The major improvements are:. - Improvements in using directly the string API from `DistSampler`. - Better support for setting method and method options using the `DistSamplerOptions` class. - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface. - Add test program for all the new DistSampler functionality. This PR fixes #7332 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8632:123,integrability,messag,messages,123,"[RF] Various small fixes and improvements; Various small fixes and improvements to RooFit, described further in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8632
https://github.com/root-project/root/pull/8632:123,interoperability,messag,messages,123,"[RF] Various small fixes and improvements; Various small fixes and improvements to RooFit, described further in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8632
https://github.com/root-project/root/issues/8633:3063,availability,Error,Error,3063," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:136,deployability,modul,modules,136,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:469,deployability,manag,manager,469,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:546,deployability,toolchain,toolchain,546,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:571,deployability,depend,dependencies,571,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:661,deployability,instal,installed,661,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:671,deployability,depend,dependencies,671,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:992,deployability,build,buildsystems,992,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1023,deployability,Build,Building,1023,"package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1085,deployability,version,version,1085,"OOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1920,deployability,version,version,1920,"v\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2083,deployability,version,version,2083,"rsion 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/sc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2264,deployability,Modul,Module,2264,"mpiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2342,deployability,version,version,2342,"C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2583,deployability,Fail,Failed,2583," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2712,deployability,Build,Build,2712," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2782,deployability,build,build,2782," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3021,deployability,version,version,3021," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3093,deployability,build,buildsystems,3093," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3177,deployability,Stack,Stack,3177," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3231,deployability,build,buildsystems,3231," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3289,deployability,stack,stack,3289," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3324,deployability,build,buildsystems,3324," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3376,deployability,modul,modules,3376," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3440,deployability,modul,modules,3440," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:469,energy efficiency,manag,manager,469,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:564,integrability,inject,inject,564,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:571,integrability,depend,dependencies,571,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:671,integrability,depend,dependencies,671,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:720,integrability,configur,configured,720,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1085,integrability,version,version,1085,"OOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1920,integrability,version,version,1920,"v\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2083,integrability,version,version,2083,"rsion 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/sc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2342,integrability,version,version,2342,"C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3021,integrability,version,version,3021," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2599,interoperability,Platform,Platform,2599," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2688,interoperability,Architectur,Architecture,2688," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:136,modifiability,modul,modules,136,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:461,modifiability,pac,package,461,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:571,modifiability,depend,dependencies,571,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:671,modifiability,depend,dependencies,671,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:720,modifiability,configur,configured,720,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1085,modifiability,version,version,1085,"OOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1920,modifiability,version,version,1920,"v\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2083,modifiability,version,version,2083,"rsion 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/sc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2264,modifiability,Modul,Module,2264,"mpiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2307,modifiability,pac,package,2307," info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2342,modifiability,version,version,2342,"C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3021,modifiability,version,version,3021," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3376,modifiability,modul,modules,3376," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3440,modifiability,modul,modules,3440," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2501,performance,Performing Test,Performing Test,2501,"es. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2543,performance,Performing Test,Performing Test,2543,". -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3063,performance,Error,Error,3063," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2583,reliability,Fail,Failed,2583," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:136,safety,modul,modules,136,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:469,safety,manag,manager,469,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:571,safety,depend,dependencies,571,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:671,safety,depend,dependencies,671,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1253,safety,Detect,Detecting,1253,"ps://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Develo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1287,safety,Detect,Detecting,1287,"-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1483,safety,Detect,Detecting,1483,"or Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1516,safety,Detect,Detecting,1516,"to a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1556,safety,Detect,Detecting,1556,"to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1592,safety,Detect,Detecting,1592,"y, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1792,safety,Detect,Detecting,1792,"This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1827,safety,Detect,Detecting,1827,"`find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cpluspl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1952,safety,Detect,Detected,1952,"TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2264,safety,Modul,Module,2264,"mpiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2512,safety,Test,Test,2512,"- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2554,safety,Test,Test,2554,"Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3063,safety,Error,Error,3063," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3376,safety,modul,modules,3376," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3440,safety,modul,modules,3440," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:564,security,inject,inject,564,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:720,security,configur,configured,720,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1154,security,ident,identification,1154,"ftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1212,security,ident,identification,1212,"mented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1253,security,Detect,Detecting,1253,"ps://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Develo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1287,security,Detect,Detecting,1287,"-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1483,security,Detect,Detecting,1483,"or Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1516,security,Detect,Detecting,1516,"to a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1556,security,Detect,Detecting,1556,"to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1592,security,Detect,Detecting,1592,"y, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1792,security,Detect,Detecting,1792,"This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1827,security,Detect,Detecting,1827,"`find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cpluspl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1952,security,Detect,Detected,1952,"TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:571,testability,depend,dependencies,571,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:615,testability,hook,hook,615,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:671,testability,depend,dependencies,671,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2512,testability,Test,Test,2512,"- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2554,testability,Test,Test,2554,"Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:213,usability,undo,undocumented,213,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:226,usability,behavi,behavior,226,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:308,usability,command,commands,308,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:345,usability,tool,tools,345,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:375,usability,behavi,behavior,375,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:546,usability,tool,toolchain,546,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:698,usability,behavi,behavior,698,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:752,usability,tool,tools,752,"Don't replace CMake's find_package; - [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1037,usability,Visual,Visual,1037,"] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1391,usability,Visual,Visual,1391," in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1423,usability,Tool,Tools,1423,"ncrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1700,usability,Visual,Visual,1700,"ior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1732,usability,Tool,Tools,1732," vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:. ```. PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake .. -- Building for: Visual Studio 16 2019. -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042. -- The C compiler identification is MSVC 19.29.30037.0. -- The CXX compiler identification is MSVC 19.29.30037.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2501,usability,Perform,Performing,2501,"tures. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2543,usability,Perform,Performing,2543,"one. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:3063,usability,Error,Error,3063," info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""). -- Detected ROOT_VERSION 6.25.01. -- Looking for Python. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""). -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed). Reason given by package:. Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h. -- Looking for pthread.h - not found. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: win32. -- ROOT Compiler: MSVC 19.29.30037.0. -- ROOT Processor: AMD64. -- ROOT Architecture: win32. -- Build Type: '' (flags = ''). -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for version 3.9.2. -- Looking for ZLib. CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):. Maximum recursion depth of 1000 exceeded. Call Stack (most recent call first):. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). ... // many stack frames. D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:55 (find_package). CMakeLists.txt:220 (include). ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/pull/8634:2164,availability,slo,slower,2164,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:35,energy efficiency,Profil,Profiles,35,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:131,energy efficiency,alloc,allocations,131,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:508,energy efficiency,alloc,allocations,508,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:670,energy efficiency,alloc,alloc,670,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:678,energy efficiency,alloc,alloc,678,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:686,energy efficiency,alloc,alloc,686,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:759,energy efficiency,alloc,alloc,759,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:767,energy efficiency,alloc,alloc,767,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:775,energy efficiency,alloc,alloc,775,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:888,energy efficiency,alloc,allocations,888,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1096,energy efficiency,alloc,alloc,1096,"20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1104,energy efficiency,alloc,alloc,1104,"total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1112,energy efficiency,alloc,alloc,1112,"ntime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1659,energy efficiency,current,current,1659,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2191,energy efficiency,core,cores,2191,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:208,integrability,event,event,208,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:312,integrability,Event,Events,312,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:586,integrability,Event,Events,586,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1012,integrability,Event,Events,1012,"RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:918,modifiability,reu,reused,918,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:28,performance,cach,cache,28,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:35,performance,Profil,Profiles,35,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:525,performance,perform,performed,525,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:541,performance,time,time,541,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1614,performance,multi-thread,multi-threaded,1614,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1800,performance,cach,cache,1800,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1916,performance,cach,cached,1916,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2012,performance,cach,cache-less,2012,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2047,performance,cach,cache,2047,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2126,performance,cach,cached,2126,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2241,performance,cach,cache,2241,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2268,performance,cach,cache,2268,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2316,performance,cach,cache,2316,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2164,reliability,slo,slower,2164,"--+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```. ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval). no cache: 776188us +- 9918us. cache (128): 780214us +- 11888us. %diff: -0.5%. cache (32): 1369689us +- 33365us. %diff: -76.46%. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:525,usability,perform,performed,525,"[ntuple] (WIP) RNTuple page cache; Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of. total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of. columns. Columns are divided into pages with a fixed size, e.g. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... ```. Before this change, page allocations were performed every time a page. is flushed from a column:. ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). [dealloc] [dealloc] [dealloc]. [alloc] [alloc] [alloc]. 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. After this change, allocations are held onto and reused if possible. (up to a certain limit, which for now is hard-coded to be 32 pages). ```. Events | Column 0 | Column 1 | Column 2. -------+----------+----------+----------. [alloc] [alloc] [alloc]. 1-10 p0(40kB) p1(80kB) p2(80kB). 11-20 p3(40kB) p4(80kB) p5(80kB). ... ... ... ... [dealloc] [dealloc] [dealloc]. ```. On SSD, the following serial results were obtained for the lhcb and cms. benchmarks (average of ten cold runs, 95% confidence interval):. ```. cms. Before: 105145us +- 1338us. After: 93669us +- 2077us. %diff: 10.9%. lhcb. Before: 2111977us +- 8371us. After: 1770781us +- 11185us. %diff: 16.2%. ```. Todo: . - [x] Handle non-mappable case in `PopulatePage`. - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8636:285,deployability,updat,updated,285,[TMVA-SOFIE] fix RModel codegen bug in infer function signature; thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8636:255,safety,test,tested,255,[TMVA-SOFIE] fix RModel codegen bug in infer function signature; thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8636:285,safety,updat,updated,285,[TMVA-SOFIE] fix RModel codegen bug in infer function signature; thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8636:54,security,sign,signature,54,[TMVA-SOFIE] fix RModel codegen bug in infer function signature; thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8636:213,security,sign,signature,213,[TMVA-SOFIE] fix RModel codegen bug in infer function signature; thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8636:285,security,updat,updated,285,[TMVA-SOFIE] fix RModel codegen bug in infer function signature; thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8636:255,testability,test,tested,255,[TMVA-SOFIE] fix RModel codegen bug in infer function signature; thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8637:529,availability,cluster,cluster,529,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:640,availability,cluster,clusters,640,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:1246,availability,cluster,cluster,1246,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:529,deployability,cluster,cluster,529,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:640,deployability,cluster,clusters,640,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:1246,deployability,cluster,cluster,1246,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:224,interoperability,distribut,distributed,224,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:36,security,hash,hashable,36,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:93,security,hash,hashable,93,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8637:1185,usability,effectiv,effectively,1185,"Make FileAndIndex class ordered and hashable; The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered. Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to. For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0. Range of entries [0, 5000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1. Range of entries [5000, 10000]. Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8638:8,reliability,RCa,RCanvas,8,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:58,reliability,RCa,RCanvas,58,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:184,reliability,RCa,RCanvas,184,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:239,reliability,RCa,RCanvas,239,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:270,reliability,RCa,RCanvas,270,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:361,reliability,RCa,RCanvas,361,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:174,safety,detect,detect,174,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:174,security,detect,detect,174,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:83,usability,Clear,ClearShown,83,"Enable `RCanvas` in `jupyter lab`; Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:. * set special ""jupyter"" kind of web display. * detect if RCanvas compiled. * like with TCanvas, extract list of RCanvas after each cell. * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server. But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/issues/8639:1789,availability,Operat,Operating,1789," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:1864,availability,down,download,1864," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:2407,availability,Operat,Operating,2407," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:866,deployability,build,build,866,"(RDataFrame) AsNumpy returns Boolean branches as 'object' dtype numpy arrays; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Reading a TTree with boolean branches using `ROOT.RDataFrame` `.AsNumpy(...)` will return numpy arrays for those branches, where the dtype for the numpy arrays corresponding to the boolean branches have dtype `object`, not `bool`. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The dtype for numpy arrays created from boolean branches should have the `bool` dtype. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:1777,deployability,version,version,1777," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:1846,deployability,instal,install,1846," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:2531,deployability,releas,release,2531," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:1777,integrability,version,version,1777," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:434,interoperability,share,share,434,"(RDataFrame) AsNumpy returns Boolean branches as 'object' dtype numpy arrays; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Reading a TTree with boolean branches using `ROOT.RDataFrame` `.AsNumpy(...)` will return numpy arrays for those branches, where the dtype for the numpy arrays corresponding to the boolean branches have dtype `object`, not `bool`. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The dtype for numpy arrays created from boolean branches should have the `bool` dtype. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:1777,modifiability,version,version,1777," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:828,safety,input,input,828,"(RDataFrame) AsNumpy returns Boolean branches as 'object' dtype numpy arrays; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Reading a TTree with boolean branches using `ROOT.RDataFrame` `.AsNumpy(...)` will return numpy arrays for those branches, where the dtype for the numpy arrays corresponding to the boolean branches have dtype `object`, not `bool`. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The dtype for numpy arrays created from boolean branches should have the `bool` dtype. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:2132,security,Team,Team,2132," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:2663,testability,context,context,2663," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:2692,testability,context,context,2692," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:683,usability,behavi,behavior,683,"(RDataFrame) AsNumpy returns Boolean branches as 'object' dtype numpy arrays; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Reading a TTree with boolean branches using `ROOT.RDataFrame` `.AsNumpy(...)` will return numpy arrays for those branches, where the dtype for the numpy arrays corresponding to the boolean branches have dtype `object`, not `bool`. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The dtype for numpy arrays created from boolean branches should have the `bool` dtype. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:828,usability,input,input,828,"(RDataFrame) AsNumpy returns Boolean branches as 'object' dtype numpy arrays; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Reading a TTree with boolean branches using `ROOT.RDataFrame` `.AsNumpy(...)` will return numpy arrays for those branches, where the dtype for the numpy arrays corresponding to the boolean branches have dtype `object`, not `bool`. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The dtype for numpy arrays created from boolean branches should have the `bool` dtype. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:2278,usability,help,help,2278," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```python. >>> import ROOT. >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]). >>> rdf. {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, False, False, False,. False, False, False, False, False, False, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True, True, True, True, True, True, True, True, True, True, True,. True], dtype=object)}. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Conda:. ```. - root=6.24.0=py39hde0f152_0. - root_base=6.24.0=py39h9c0239e_0. ```. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |. | From tag , 14 April 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. Operating system (running inside singularity). ```. (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release. DISTRIB_ID=Ubuntu. DISTRIB_RELEASE=20.10. DISTRIB_CODENAME=groovy. DISTRIB_DESCRIPTION=""Ubuntu 20.10"". ```. ### Additional context. <!--. Add any other context about the problem here. -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/pull/8640:280,safety,test,tested,280,[GSoC][TMVA][SOFIE] Modified AddOutputTensorNameList in RModel; ## Description. This PR modifies the AddOutputTensorNameList() function present in RModel.hxx to use the UTILITY::Clean_name() function to process the strings before adding them into the RModel. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8640
https://github.com/root-project/root/pull/8640:20,security,Modif,Modified,20,[GSoC][TMVA][SOFIE] Modified AddOutputTensorNameList in RModel; ## Description. This PR modifies the AddOutputTensorNameList() function present in RModel.hxx to use the UTILITY::Clean_name() function to process the strings before adding them into the RModel. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8640
https://github.com/root-project/root/pull/8640:88,security,modif,modifies,88,[GSoC][TMVA][SOFIE] Modified AddOutputTensorNameList in RModel; ## Description. This PR modifies the AddOutputTensorNameList() function present in RModel.hxx to use the UTILITY::Clean_name() function to process the strings before adding them into the RModel. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8640
https://github.com/root-project/root/pull/8640:280,testability,test,tested,280,[GSoC][TMVA][SOFIE] Modified AddOutputTensorNameList in RModel; ## Description. This PR modifies the AddOutputTensorNameList() function present in RModel.hxx to use the UTILITY::Clean_name() function to process the strings before adding them into the RModel. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8640
https://github.com/root-project/root/issues/8641:758,availability,state,statement,758,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1003,availability,state,statements,1003,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1620,availability,Operat,Operating,1620,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1695,availability,down,download,1695,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:44,deployability,fail,fails,44,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1541,deployability,build,build,1541,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1608,deployability,version,version,1608,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1677,deployability,instal,install,1677,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:689,energy efficiency,current,current,689,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:758,integrability,state,statement,758,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1003,integrability,state,statements,1003,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1608,integrability,version,version,1608,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1608,modifiability,version,version,1608,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:44,reliability,fail,fails,44,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1495,safety,input,input,1495,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1868,testability,context,context,1868,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1897,testability,context,context,1897,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:456,usability,clear,clear,456,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:504,usability,behavi,behavior,504,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1133,usability,behavi,behavior,1133,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1151,usability,clear,clear,1151,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1350,usability,behavi,behavior,1350,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1495,usability,input,input,1495,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1837,usability,document,documentation,1837,"RooStats::HypoTestInverterResult::FindIndex fails if xvalue == 1; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:. <pre>. if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||. (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ). return i; . </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8642:75,availability,error,errors,75,"Switching CMAKE_CXX_STANDARD breaks build; ### Describe the bug. The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7). ```. FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm. [...]. In module 'std' imported from input_line_1:1:. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'. _M_rehash_aux(__n, __unique_keys());. ^~~~~~~~~~~~~. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here. _M_rehash(__do_rehash.second, __saved_state);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:429,availability,error,error,429,"Switching CMAKE_CXX_STANDARD breaks build; ### Describe the bug. The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7). ```. FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm. [...]. In module 'std' imported from input_line_1:1:. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'. _M_rehash_aux(__n, __unique_keys());. ^~~~~~~~~~~~~. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here. _M_rehash(__do_rehash.second, __saved_state);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:3128,availability,operat,operator,3128,"ail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node' requested here. return __h->_M_insert_unique_node(__n, __code, __p)->second;. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/unordered_map.h:978:16: note: in instantiation of member function 'std::__detail::_Map_base<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[]' requested here. { return _M_h[std::move(__k)]; }. ^. /home/jhahnfel/ROOT/build/include/TTreeReader.h:264:15: note: in instantiation of member function 'std::unordered_map<std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here. fProxies[bpName].reset(p);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. void _M_rehash_aux(size_type __n, std::true_type);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:3717,availability,operat,operator,3717,"_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[]' requested here. { return _M_h[std::move(__k)]; }. ^. /home/jhahnfel/ROOT/build/include/TTreeReader.h:264:15: note: in instantiation of member function 'std::unordered_map<std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here. fProxies[bpName].reset(p);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. void _M_rehash_aux(size_type __n, std::true_type);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. void _M_rehash_aux(size_type __n, std::false_type);. ^. Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h). ```. and. ```. FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm. [...]. In module 'std' imported from input_line_1:1:. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:4351,availability,Error,Error,4351,"ue_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here. fProxies[bpName].reset(p);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. void _M_rehash_aux(size_type __n, std::true_type);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. void _M_rehash_aux(size_type __n, std::false_type);. ^. Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h). ```. and. ```. FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm. [...]. In module 'std' imported from input_line_1:1:. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here. tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:4411,availability,failur,failure,4411,"<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here. fProxies[bpName].reset(p);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. void _M_rehash_aux(size_type __n, std::true_type);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. void _M_rehash_aux(size_type __n, std::false_type);. ^. Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h). ```. and. ```. FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm. [...]. In module 'std' imported from input_line_1:1:. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here. tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:4709,availability,error,error,4709,"> >::operator[]' requested here. fProxies[bpName].reset(p);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. void _M_rehash_aux(size_type __n, std::true_type);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. void _M_rehash_aux(size_type __n, std::false_type);. ^. Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h). ```. and. ```. FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm. [...]. In module 'std' imported from input_line_1:1:. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here. tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:5006,availability,operat,operator,5006,"aux(size_type __n, std::true_type);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. void _M_rehash_aux(size_type __n, std::false_type);. ^. Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h). ```. and. ```. FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm. [...]. In module 'std' imported from input_line_1:1:. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here. tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:129:7: note: in instantiation of member function 'std::vector<in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:5765,availability,error,error,5765,"ign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here. tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:129:7: note: in instantiation of member function 'std::vector<int, std::allocator<int> >::operator=' requested here. class MVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:6036,availability,operat,operator,6036,"ck()->tags = findXMLTags(tags.back()->contents, &leftovers);. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:129:7: note: in instantiation of member function 'std::vector<int, std::allocator<int> >::operator=' requested here. class MVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:6740,availability,error,error,6740,"s/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:129:7: note: in instantiation of member function 'std::vector<int, std::allocator<int> >::operator=' requested here. class MVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested here. class PVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar. gument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:7017,availability,operat,operator,7017,"ocator<int> >::operator=' requested here. class MVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested here. class PVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar. gument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:7723,availability,error,error,7723,"ctor.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested here. class PVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar. gument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::operator=' requested here. class WVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:8053,availability,operat,operator,8053," ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar. gument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::operator=' requested here. class WVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:8757,availability,error,error,8757,"r call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::operator=' requested here. class WVec {. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument. _M_move_assign(vector&& __x, std::false_type). ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'. _M_move_assign(std::move(__x), __bool_constant<__move_storage>());. ^~~~~~~~~~~~~~. /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here. rho = vector< vector<complex> >(spinStates(),. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument. _M_move_assign(vector&& __x, std::true_type) noexcept. ^. /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
