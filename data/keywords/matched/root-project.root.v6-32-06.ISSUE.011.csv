id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/2667:71,security,model,models,71,[DF] ROOT-9692: Properly consider custom binning when using TProfile2D models;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2667
https://github.com/root-project/root/pull/2667:34,usability,custom,custom,34,[DF] ROOT-9692: Properly consider custom binning when using TProfile2D models;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2667
https://github.com/root-project/root/pull/2668:30,availability,error,error,30,Remove duplicated header; Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2668
https://github.com/root-project/root/pull/2668:53,deployability,modul,module,53,Remove duplicated header; Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2668
https://github.com/root-project/root/pull/2668:53,modifiability,modul,module,53,Remove duplicated header; Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2668
https://github.com/root-project/root/pull/2668:30,performance,error,error,30,Remove duplicated header; Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2668
https://github.com/root-project/root/pull/2668:30,safety,error,error,30,Remove duplicated header; Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2668
https://github.com/root-project/root/pull/2668:53,safety,modul,module,53,Remove duplicated header; Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2668
https://github.com/root-project/root/pull/2668:30,usability,error,error,30,Remove duplicated header; Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2668
https://github.com/root-project/root/pull/2669:21,interoperability,format,format,21,[Tree] Modernise and format copy tree tutorials;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2670:6,deployability,Updat,Update,6,[DOC] Update RDF release notes with new name `SaveGraph` for method;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2670
https://github.com/root-project/root/pull/2670:17,deployability,releas,release,17,[DOC] Update RDF release notes with new name `SaveGraph` for method;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2670
https://github.com/root-project/root/pull/2670:6,safety,Updat,Update,6,[DOC] Update RDF release notes with new name `SaveGraph` for method;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2670
https://github.com/root-project/root/pull/2670:6,security,Updat,Update,6,[DOC] Update RDF release notes with new name `SaveGraph` for method;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2670
https://github.com/root-project/root/pull/2671:4,usability,support,support,4,Add support for interrupting execution with ^C; https://github.com/root-project/cling/pull/245.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2671
https://github.com/root-project/root/pull/2673:0,deployability,Build,Build,0,Build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2673
https://github.com/root-project/root/pull/2673:13,deployability,updat,updates,13,Build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2673
https://github.com/root-project/root/pull/2673:13,safety,updat,updates,13,Build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2673
https://github.com/root-project/root/pull/2673:13,security,updat,updates,13,Build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2673
https://github.com/root-project/root/pull/2675:107,interoperability,specif,specific,107,"[cling] Use TLS for pointer check cache:; With 16 threads, the cache is simply too small. These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:34,performance,cach,cache,34,"[cling] Use TLS for pointer check cache:; With 16 threads, the cache is simply too small. These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:63,performance,cach,cache,63,"[cling] Use TLS for pointer check cache:; With 16 threads, the cache is simply too small. These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:72,testability,simpl,simply,72,"[cling] Use TLS for pointer check cache:; With 16 threads, the cache is simply too small. These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:72,usability,simpl,simply,72,"[cling] Use TLS for pointer check cache:; With 16 threads, the cache is simply too small. These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2676:14,energy efficiency,load,load,14,[gpadv7] Only load pointer lib once.; (cherry picked from commit 9482a9e0e4459e783700cb916e77248fa373e41b),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2676
https://github.com/root-project/root/pull/2676:14,performance,load,load,14,[gpadv7] Only load pointer lib once.; (cherry picked from commit 9482a9e0e4459e783700cb916e77248fa373e41b),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2676
https://github.com/root-project/root/pull/2678:50,availability,error,error,50,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:285,availability,error,errors,285,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:219,deployability,version,version,219,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:227,deployability,instal,installed,227,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:56,integrability,messag,messages,56,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:219,integrability,version,version,219,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:56,interoperability,messag,messages,56,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:101,interoperability,registr,registry,101,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:374,interoperability,specif,specified,374,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:443,interoperability,specif,specified,443,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:219,modifiability,version,version,219,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:50,performance,error,error,50,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:285,performance,error,errors,285,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:85,reliability,doe,doesn,85,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:50,safety,error,error,50,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:156,safety,prevent,prevent,156,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:258,safety,prevent,prevent,258,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:285,safety,error,errors,285,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:156,security,preven,prevent,156,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:258,security,preven,prevent,258,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:14,usability,Visual,Visual,14,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:50,usability,error,error,50,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:66,usability,Visual,Visual,66,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2678:285,usability,error,errors,285,"Fix lookup of Visual Studio directories + improve error messages; Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:. RegQueryValueEx: returned 2: The system cannot find the file specified. RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2679:150,deployability,toolchain,toolchain,150,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2679:279,deployability,build,building,279,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2679:101,integrability,configur,configure,101,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2679:101,modifiability,configur,configure,101,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2679:177,reliability,doe,doesn,177,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2679:244,reliability,doe,doesn,244,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2679:101,security,configur,configure,101,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2679:150,usability,tool,toolchain,150,"Pass Mac1014 SDK isysroot to ""external projects""; While CMake knows about it, we need to pass it to `configure` invocations. CMake decides to use the toolchain `cc`/`c++` which doesn't have the SDK includes - unlike `/usr/bin/cc` - which CMake doesn't use by default. This fixes building ROOT on MacOS10.14 out of the box (i.e. without messing with `CMAKE_C_COMPILER` etc).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2679
https://github.com/root-project/root/pull/2680:123,availability,error,error,123,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:66,deployability,modul,module,66,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:83,deployability,Modul,Module,83,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:50,energy efficiency,load,loading,50,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:66,modifiability,modul,module,66,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:83,modifiability,Modul,Module,83,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:50,performance,load,loading,50,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:123,performance,error,error,123,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:26,reliability,diagno,diagnostic,26,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:233,reliability,diagno,diagnostic-validation,233,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:315,reliability,diagno,diagnostic,315,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:8,safety,valid,validation,8,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:66,safety,modul,module,66,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:83,safety,Modul,Module,83,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:123,safety,error,error,123,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:244,safety,valid,validation,244,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:409,safety,review,reviews,409,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:8,security,validat,validation,8,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:244,security,validat,validation,244,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:26,testability,diagno,diagnostic,26,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:233,testability,diagno,diagnostic-validation,233,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:315,testability,diagno,diagnostic,315,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:409,testability,review,reviews,409,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:123,usability,error,error,123,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:255,usability,help,helps,255,"Disable validation of the diagnostic options when loading the C++ module; With PCH+Module, sometimes compiler gives a hard error:. _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._. Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm. Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2682:22,energy efficiency,load,loading,22,v7: draw_mt.cxx force loading of WebDisplay lib; Probably will fix problem with running macro in batch mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2682
https://github.com/root-project/root/pull/2682:97,integrability,batch,batch,97,v7: draw_mt.cxx force loading of WebDisplay lib; Probably will fix problem with running macro in batch mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2682
https://github.com/root-project/root/pull/2682:22,performance,load,loading,22,v7: draw_mt.cxx force loading of WebDisplay lib; Probably will fix problem with running macro in batch mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2682
https://github.com/root-project/root/pull/2682:97,performance,batch,batch,97,v7: draw_mt.cxx force loading of WebDisplay lib; Probably will fix problem with running macro in batch mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2682
https://github.com/root-project/root/pull/2684:254,availability,error,error,254,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:32,deployability,modul,module,32,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:56,deployability,build,build,56,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:114,deployability,modul,modules,114,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:188,deployability,modul,modules,188,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:303,deployability,modul,modulemap,303,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:383,deployability,modul,modules,383,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:435,deployability,modul,modules,435,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:458,deployability,build,build,458,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:32,modifiability,modul,module,32,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:114,modifiability,modul,modules,114,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:188,modifiability,modul,modules,188,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:303,modifiability,modul,modulemap,303,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:383,modifiability,modul,modules,383,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:435,modifiability,modul,modules,435,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:254,performance,error,error,254,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:32,safety,modul,module,32,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:114,safety,modul,modules,114,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:188,safety,modul,modules,188,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:254,safety,error,error,254,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:303,safety,modul,modulemap,303,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:383,safety,modul,modules,383,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:435,safety,modul,modules,435,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2684:254,usability,error,error,254,"[cxxmodules] Allow ROOT_ prefix module to be implicitly build by rootcling; Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap. . To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2685:96,deployability,build,building,96,Change math.h to cmath in NeuralNet.h; We needed to this change for avoiding infinite loop when building with cling modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2685
https://github.com/root-project/root/pull/2685:116,deployability,modul,modules,116,Change math.h to cmath in NeuralNet.h; We needed to this change for avoiding infinite loop when building with cling modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2685
https://github.com/root-project/root/pull/2685:116,modifiability,modul,modules,116,Change math.h to cmath in NeuralNet.h; We needed to this change for avoiding infinite loop when building with cling modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2685
https://github.com/root-project/root/pull/2685:68,safety,avoid,avoiding,68,Change math.h to cmath in NeuralNet.h; We needed to this change for avoiding infinite loop when building with cling modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2685
https://github.com/root-project/root/pull/2685:116,safety,modul,modules,116,Change math.h to cmath in NeuralNet.h; We needed to this change for avoiding infinite loop when building with cling modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2685
https://github.com/root-project/root/pull/2686:126,availability,error,error,126,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:154,availability,error,error,154,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:197,availability,error,error,197,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:371,availability,error,errors,371,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:63,deployability,modul,modules,63,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:136,deployability,modul,module,136,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:63,modifiability,modul,modules,63,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:136,modifiability,modul,module,136,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:126,performance,error,error,126,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:154,performance,error,error,154,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:197,performance,error,error,197,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:371,performance,error,errors,371,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:22,safety,valid,validate-pch,22,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:63,safety,modul,modules,63,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:126,safety,error,error,126,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:136,safety,modul,module,136,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:154,safety,error,error,154,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:197,safety,error,error,197,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:371,safety,error,errors,371,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:22,security,validat,validate-pch,22,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:113,security,modif,modification,113,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:184,security,modif,modification,184,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:126,usability,error,error,126,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:154,usability,error,error,154,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:197,usability,error,error,197,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:371,usability,error,errors,371,"[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules; This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2687:0,deployability,Updat,Updating,0,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:9,deployability,depend,dependencies,9,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:70,deployability,depend,dependencies,70,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:136,deployability,build,build,136,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:9,integrability,depend,dependencies,9,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:70,integrability,depend,dependencies,70,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:9,modifiability,depend,dependencies,9,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:70,modifiability,depend,dependencies,70,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:0,safety,Updat,Updating,0,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:9,safety,depend,dependencies,9,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:70,safety,depend,dependencies,70,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:0,security,Updat,Updating,0,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:9,testability,depend,dependencies,9,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2687:70,testability,depend,dependencies,70,Updating dependencies for onepcm in case of runtime_cxxmodules; Added dependencies to onepcm target to protect from running to early in build system. ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2687
https://github.com/root-project/root/pull/2688:5,energy efficiency,schedul,scheduling,5,Rule scheduling; This solves the 2nd schema evolution problem seen at https://github.com/cms-sw/cmssw/pull/22594#issuecomment-422105335.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2688
https://github.com/root-project/root/pull/2688:37,integrability,schema,schema,37,Rule scheduling; This solves the 2nd schema evolution problem seen at https://github.com/cms-sw/cmssw/pull/22594#issuecomment-422105335.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2688
https://github.com/root-project/root/pull/2688:5,performance,schedul,scheduling,5,Rule scheduling; This solves the 2nd schema evolution problem seen at https://github.com/cms-sw/cmssw/pull/22594#issuecomment-422105335.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2688
https://github.com/root-project/root/pull/2689:96,deployability,build,building,96,Remove stdlib.h from DataSetFactory.h; We needed to this change for avoiding infinite loop when building with cling modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2689
https://github.com/root-project/root/pull/2689:116,deployability,modul,modules,116,Remove stdlib.h from DataSetFactory.h; We needed to this change for avoiding infinite loop when building with cling modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2689
https://github.com/root-project/root/pull/2689:116,modifiability,modul,modules,116,Remove stdlib.h from DataSetFactory.h; We needed to this change for avoiding infinite loop when building with cling modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2689
https://github.com/root-project/root/pull/2689:68,safety,avoid,avoiding,68,Remove stdlib.h from DataSetFactory.h; We needed to this change for avoiding infinite loop when building with cling modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2689
https://github.com/root-project/root/pull/2689:116,safety,modul,modules,116,Remove stdlib.h from DataSetFactory.h; We needed to this change for avoiding infinite loop when building with cling modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2689
https://github.com/root-project/root/pull/2690:57,availability,error,errors,57,[MATHCORE] Fix template specializations (fix compilation errors);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2690
https://github.com/root-project/root/pull/2690:57,performance,error,errors,57,[MATHCORE] Fix template specializations (fix compilation errors);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2690
https://github.com/root-project/root/pull/2690:57,safety,error,errors,57,[MATHCORE] Fix template specializations (fix compilation errors);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2690
https://github.com/root-project/root/pull/2690:57,usability,error,errors,57,[MATHCORE] Fix template specializations (fix compilation errors);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2690
https://github.com/root-project/root/pull/2691:5,energy efficiency,schedul,scheduling,5,Rule scheduling; This solves the 2nd schema evolution problem seen at cms-sw/cmssw#22594,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2691:37,integrability,schema,schema,37,Rule scheduling; This solves the 2nd schema evolution problem seen at cms-sw/cmssw#22594,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2691:5,performance,schedul,scheduling,5,Rule scheduling; This solves the 2nd schema evolution problem seen at cms-sw/cmssw#22594,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2692:43,deployability,build,build,43,[cling] Force the OSX SDK to be the one at build time:; Fixes builds with command line tools and macos 10.14.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2692
https://github.com/root-project/root/pull/2692:62,deployability,build,builds,62,[cling] Force the OSX SDK to be the one at build time:; Fixes builds with command line tools and macos 10.14.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2692
https://github.com/root-project/root/pull/2692:49,performance,time,time,49,[cling] Force the OSX SDK to be the one at build time:; Fixes builds with command line tools and macos 10.14.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2692
https://github.com/root-project/root/pull/2692:74,usability,command,command,74,[cling] Force the OSX SDK to be the one at build time:; Fixes builds with command line tools and macos 10.14.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2692
https://github.com/root-project/root/pull/2692:87,usability,tool,tools,87,[cling] Force the OSX SDK to be the one at build time:; Fixes builds with command line tools and macos 10.14.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2692
https://github.com/root-project/root/pull/2693:1,energy efficiency,Core,Core,1,[Core] ROOT-9698 do not check for missing dictionary of unique_ptr<T>; but rather for the missing dictionary of T given the way in which we treat unique_ptrs. A test is missing stil...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2693
https://github.com/root-project/root/pull/2693:161,safety,test,test,161,[Core] ROOT-9698 do not check for missing dictionary of unique_ptr<T>; but rather for the missing dictionary of T given the way in which we treat unique_ptrs. A test is missing stil...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2693
https://github.com/root-project/root/pull/2693:161,testability,test,test,161,[Core] ROOT-9698 do not check for missing dictionary of unique_ptr<T>; but rather for the missing dictionary of T given the way in which we treat unique_ptrs. A test is missing stil...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2693
https://github.com/root-project/root/pull/2695:37,availability,error,error,37,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:21,deployability,modul,modulemap,21,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:84,deployability,build,buildid,84,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:119,deployability,modul,modules,119,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:21,modifiability,modul,modulemap,21,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:119,modifiability,modul,modules,119,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:37,performance,error,error,37,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:21,safety,modul,modulemap,21,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:37,safety,error,error,37,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:119,safety,modul,modules,119,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:4,security,sign,signal,4,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2695:37,usability,error,error,37,Add signal.h to libc.modulemap; This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476. was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2695
https://github.com/root-project/root/pull/2696:5,energy efficiency,schedul,scheduling,5,Rule scheduling; This backport to v6.12 several PRs:. https://github.com/root-project/root/pull/2691. https://github.com/root-project/root/pull/2482. https://github.com/root-project/root/pull/2290. https://github.com/root-project/root/pull/2260. https://github.com/root-project/root/pull/2184. https://github.com/root-project/root/pull/2521.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2696
https://github.com/root-project/root/pull/2696:5,performance,schedul,scheduling,5,Rule scheduling; This backport to v6.12 several PRs:. https://github.com/root-project/root/pull/2691. https://github.com/root-project/root/pull/2482. https://github.com/root-project/root/pull/2290. https://github.com/root-project/root/pull/2260. https://github.com/root-project/root/pull/2184. https://github.com/root-project/root/pull/2521.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2696
https://github.com/root-project/root/pull/2697:90,availability,error,error,90,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:547,availability,error,error,547,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:181,deployability,modul,module,181,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:181,modifiability,modul,module,181,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:90,performance,error,error,90,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:547,performance,error,error,547,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:580,reliability,doe,does,580,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:90,safety,error,error,90,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:181,safety,modul,module,181,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:547,safety,error,error,547,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:90,usability,error,error,90,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2697:547,usability,error,error,547,Fix in RDF and cxxmodules; It is fixing:. ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous. : RDF::RInterface<RDFDetail::RLoopManager>(. ^. In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:. ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'. namespace RDF {. ^. ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'. namespace RDF {. ^. ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class. : RDF::RInterface<RDFDetail::RLoopManager>(. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2698:78,deployability,version,version,78,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:251,deployability,patch,patch,251,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:257,deployability,contain,contains,257,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:442,deployability,version,version,442,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:33,integrability,interfac,interface,33,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:78,integrability,version,version,78,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:140,integrability,interfac,interface,140,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:182,integrability,interfac,interface,182,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:442,integrability,version,version,442,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:33,interoperability,interfac,interface,33,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:140,interoperability,interfac,interface,140,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:182,interoperability,interfac,interface,182,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:33,modifiability,interfac,interface,33,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:78,modifiability,version,version,78,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:140,modifiability,interfac,interface,140,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:182,modifiability,interfac,interface,182,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:442,modifiability,version,version,442,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:413,performance,time,time,413,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:251,safety,patch,patch,251,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:496,safety,test,test,496,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:251,security,patch,patch,251,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:496,testability,test,test,496,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:572,usability,user,user,572,"[cxxmodules] Implement to_string interface to gInterpreter; This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string. interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp. - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago. - Removing of RVec version of printValue which wasn't used at all. - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2699:8,integrability,Inject,Inject,8,[cmake] Inject -isysroot ${CMAKE_OSX_SYSROOT} to unuran.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2699
https://github.com/root-project/root/pull/2699:8,security,Inject,Inject,8,[cmake] Inject -isysroot ${CMAKE_OSX_SYSROOT} to unuran.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2699
https://github.com/root-project/root/pull/2701:49,deployability,automat,automatically,49,"[Core] ROOT-9696 adjust size of TThreadedObjects automatically to IMT pool size; if the size is bigger than the default value. Document better the behaviour, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2701
https://github.com/root-project/root/pull/2701:1,energy efficiency,Core,Core,1,"[Core] ROOT-9696 adjust size of TThreadedObjects automatically to IMT pool size; if the size is bigger than the default value. Document better the behaviour, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2701
https://github.com/root-project/root/pull/2701:49,testability,automat,automatically,49,"[Core] ROOT-9696 adjust size of TThreadedObjects automatically to IMT pool size; if the size is bigger than the default value. Document better the behaviour, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2701
https://github.com/root-project/root/pull/2701:127,usability,Document,Document,127,"[Core] ROOT-9696 adjust size of TThreadedObjects automatically to IMT pool size; if the size is bigger than the default value. Document better the behaviour, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2701
https://github.com/root-project/root/pull/2701:147,usability,behavi,behaviour,147,"[Core] ROOT-9696 adjust size of TThreadedObjects automatically to IMT pool size; if the size is bigger than the default value. Document better the behaviour, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2701
https://github.com/root-project/root/pull/2703:195,deployability,contain,contain,195,"[Core] Turn IMT on if MacOS, Win or Linux-with-X11-running:; Introduce a flag that keeps track of -t / -T to enable / disable IMT from the command line. If none is specified, and rootrc does not contain ""Rint.AutoIMT: false"", turn it on if above conditions are met.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:1,energy efficiency,Core,Core,1,"[Core] Turn IMT on if MacOS, Win or Linux-with-X11-running:; Introduce a flag that keeps track of -t / -T to enable / disable IMT from the command line. If none is specified, and rootrc does not contain ""Rint.AutoIMT: false"", turn it on if above conditions are met.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:164,interoperability,specif,specified,164,"[Core] Turn IMT on if MacOS, Win or Linux-with-X11-running:; Introduce a flag that keeps track of -t / -T to enable / disable IMT from the command line. If none is specified, and rootrc does not contain ""Rint.AutoIMT: false"", turn it on if above conditions are met.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:186,reliability,doe,does,186,"[Core] Turn IMT on if MacOS, Win or Linux-with-X11-running:; Introduce a flag that keeps track of -t / -T to enable / disable IMT from the command line. If none is specified, and rootrc does not contain ""Rint.AutoIMT: false"", turn it on if above conditions are met.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:139,usability,command,command,139,"[Core] Turn IMT on if MacOS, Win or Linux-with-X11-running:; Introduce a flag that keeps track of -t / -T to enable / disable IMT from the command line. If none is specified, and rootrc does not contain ""Rint.AutoIMT: false"", turn it on if above conditions are met.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2704:0,deployability,Build,Build,0,Build system updates to remove globbing from CMakeLists.txt;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2704
https://github.com/root-project/root/pull/2704:13,deployability,updat,updates,13,Build system updates to remove globbing from CMakeLists.txt;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2704
https://github.com/root-project/root/pull/2704:13,safety,updat,updates,13,Build system updates to remove globbing from CMakeLists.txt;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2704
https://github.com/root-project/root/pull/2704:13,security,updat,updates,13,Build system updates to remove globbing from CMakeLists.txt;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2704
https://github.com/root-project/root/pull/2705:5,deployability,build,build,5,Test build of Eve7 components - DO NOT MERGE!!!;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:19,integrability,compon,components,19,Test build of Eve7 components - DO NOT MERGE!!!;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:19,interoperability,compon,components,19,Test build of Eve7 components - DO NOT MERGE!!!;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:19,modifiability,compon,components,19,Test build of Eve7 components - DO NOT MERGE!!!;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:0,safety,Test,Test,0,Test build of Eve7 components - DO NOT MERGE!!!;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:0,testability,Test,Test,0,Test build of Eve7 components - DO NOT MERGE!!!;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2706:4,availability,error,error,4,Fix error: reference VecOps is ambiguous in cxxmodules (clang 5.0.1);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:4,performance,error,error,4,Fix error: reference VecOps is ambiguous in cxxmodules (clang 5.0.1);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:4,safety,error,error,4,Fix error: reference VecOps is ambiguous in cxxmodules (clang 5.0.1);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:4,usability,error,error,4,Fix error: reference VecOps is ambiguous in cxxmodules (clang 5.0.1);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2707:25,deployability,build,build,25,[cxxmodules] Test fedora build; Working around with ABI incompatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2707
https://github.com/root-project/root/pull/2707:56,interoperability,incompatib,incompatibility,56,[cxxmodules] Test fedora build; Working around with ABI incompatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2707
https://github.com/root-project/root/pull/2707:13,safety,Test,Test,13,[cxxmodules] Test fedora build; Working around with ABI incompatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2707
https://github.com/root-project/root/pull/2707:13,testability,Test,Test,13,[cxxmodules] Test fedora build; Working around with ABI incompatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2707
https://github.com/root-project/root/pull/2708:48,testability,simpl,simple,48,[DF] Remove usage of TThreadedObject; and use a simple vector of pointers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:48,usability,simpl,simple,48,[DF] Remove usage of TThreadedObject; and use a simple vector of pointers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2709:415,availability,incid,incidentally,415,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:115,deployability,contain,contain,115,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:285,deployability,depend,dependencies,285,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:285,integrability,depend,dependencies,285,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:285,modifiability,depend,dependencies,285,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:363,modifiability,refact,refactor,363,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:363,performance,refactor,refactor,363,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:415,reliability,incid,incidentally,415,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:285,safety,depend,dependencies,285,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:494,safety,review,review,494,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:285,testability,depend,dependencies,285,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:352,testability,simpl,simpler,352,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:494,testability,review,review,494,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:323,usability,clear,clearer,323,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:352,usability,simpl,simpler,352,"[DF] Split RDFNodes.{hxx,cxx} in multiple headers, sources; These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:. 1) it makes dependencies between all classes much clearer. 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort). 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2710:667,availability,operat,operations,667,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:46,energy efficiency,load,loading,46,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:626,modifiability,exten,extend,626,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:46,performance,load,loading,46,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:447,safety,compl,completed,447,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:447,security,compl,completed,447,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:692,security,Hash,Hash,692,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:731,security,hash,hash,731,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2710:760,security,hash,hash,760,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2710
https://github.com/root-project/root/pull/2711:147,integrability,buffer,buffer,147,Rename TWebWindow -> RWebWindow; Also rename in all places where they are used. Fix two small issues:. 1. Handle correctly sending of empty binary buffer. 2. Fix hlohmann::json to be able use it in WebEve,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2713:226,availability,slo,slow,226,"[DF] Faster Snapshot compiletimes; To be merged after #2709 (depends on it). Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:61,deployability,depend,depends,61,"[DF] Faster Snapshot compiletimes; To be merged after #2709 (depends on it). Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:61,integrability,depend,depends,61,"[DF] Faster Snapshot compiletimes; To be merged after #2709 (depends on it). Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:61,modifiability,depend,depends,61,"[DF] Faster Snapshot compiletimes; To be merged after #2709 (depends on it). Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:226,reliability,slo,slow,226,"[DF] Faster Snapshot compiletimes; To be merged after #2709 (depends on it). Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:61,safety,depend,depends,61,"[DF] Faster Snapshot compiletimes; To be merged after #2709 (depends on it). Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:61,testability,depend,depends,61,"[DF] Faster Snapshot compiletimes; To be merged after #2709 (depends on it). Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2714:17,deployability,version,version,17,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:43,deployability,releas,release,43,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:442,deployability,Releas,ReleaseNotes,442,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:281,energy efficiency,Reduc,Reduced,281,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:17,integrability,version,version,17,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:17,modifiability,version,version,17,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:194,modifiability,variab,variable,194,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:341,modifiability,variab,variable,341,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:297,safety,compl,complexity,297,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:297,security,compl,complexity,297,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2714:241,usability,Efficien,Efficient,241,[clad] Bump clad version to v0.3.; The new release includes some improvements in both Forward and. Reverse mode:. * Better correctness of C++ constructs -- handle scopes properly; allow proper. variable shadowing; and preserve namespaces. * Efficient evaluation in forward mode. * Reduced cloning complexity. * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2714
https://github.com/root-project/root/pull/2715:667,availability,operat,operations,667,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:46,energy efficiency,load,loading,46,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:626,modifiability,exten,extend,626,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:46,performance,load,loading,46,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:447,safety,compl,completed,447,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:447,security,compl,completed,447,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:692,security,Hash,Hash,692,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:731,security,hash,hash,731,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:760,security,hash,hash,760,"Fix ROOT-9662 race condition in TStreamerInfo loading.; When noting that a TStreamerInfo set has already been processed, we. must do it in 3 separates steps:. - check it was seen before. - read and process the set. - record that the set as been seen. The previous situation:. - check and record that the set as been seen. - read and process the set. led to a race condition if a second thread was checking the same. set before the second step was completed (in which case the. second thread was believing that the set was process and looking. for the result of the process (one of the StreamerInfo) but could. not find it. We extend RConcurrentHashColl to have 2 new operations. - standalone Hash calculation. - standalone Find of hash. - standalone Insert of hash. and we use it to split the check and the recording as described. previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2717:35,deployability,fail,failing,35,[cxxmodules] Track progress in the failing tests for runtime_cxxmodules.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:35,reliability,fail,failing,35,[cxxmodules] Track progress in the failing tests for runtime_cxxmodules.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:43,safety,test,tests,43,[cxxmodules] Track progress in the failing tests for runtime_cxxmodules.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:43,testability,test,tests,43,[cxxmodules] Track progress in the failing tests for runtime_cxxmodules.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:19,usability,progress,progress,19,[cxxmodules] Track progress in the failing tests for runtime_cxxmodules.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2719:12,deployability,updat,update,12,[clad] Also update the version on unix.; This is part of 4ff4d9aa2d.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2719
https://github.com/root-project/root/pull/2719:23,deployability,version,version,23,[clad] Also update the version on unix.; This is part of 4ff4d9aa2d.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2719
https://github.com/root-project/root/pull/2719:23,integrability,version,version,23,[clad] Also update the version on unix.; This is part of 4ff4d9aa2d.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2719
https://github.com/root-project/root/pull/2719:23,modifiability,version,version,23,[clad] Also update the version on unix.; This is part of 4ff4d9aa2d.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2719
https://github.com/root-project/root/pull/2719:12,safety,updat,update,12,[clad] Also update the version on unix.; This is part of 4ff4d9aa2d.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2719
https://github.com/root-project/root/pull/2719:12,security,updat,update,12,[clad] Also update the version on unix.; This is part of 4ff4d9aa2d.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2719
https://github.com/root-project/root/pull/2720:30,safety,test,test,30,Covery fixes in TBufferMerger test and add missing include in TMVA;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2720
https://github.com/root-project/root/pull/2720:30,testability,test,test,30,Covery fixes in TBufferMerger test and add missing include in TMVA;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2720
https://github.com/root-project/root/pull/2721:608,availability,avail,available,608,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:65,deployability,modul,module,65,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:110,deployability,modul,module,110,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:230,deployability,modul,modules,230,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:339,deployability,modul,module,339,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:453,deployability,modul,modules,453,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:483,deployability,modul,modules-aware,483,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:540,deployability,patch,patch,540,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:595,deployability,modul,module,595,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:65,modifiability,modul,module,65,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:110,modifiability,modul,module,110,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:230,modifiability,modul,modules,230,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:247,modifiability,scenario,scenario,247,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:339,modifiability,modul,module,339,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:453,modifiability,modul,modules,453,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:483,modifiability,modul,modules-aware,483,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:595,modifiability,modul,module,595,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:608,reliability,availab,available,608,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:65,safety,modul,module,65,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:110,safety,modul,module,110,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:230,safety,modul,modules,230,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:257,safety,test,tested,257,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:339,safety,modul,module,339,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:453,safety,modul,modules,453,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:483,safety,modul,modules-aware,483,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:540,safety,patch,patch,540,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:595,safety,modul,module,595,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:608,safety,avail,available,608,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:540,security,patch,patch,540,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:608,security,availab,available,608,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:257,testability,test,tested,257,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:380,usability,behavi,behavior,380,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:425,usability,user,users,425,"[cxxmodules] Fall back to Header parsing on demand if we have no module.; We assumed that we will always have module file and unconditionally disable. header parsing on demand. However, the major use-case is gradual migration. to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),. we have a dictionary which has no module file and still relies on the old. behavior. This can realistically happen when users gradually migrate to. modules. For example, we have modules-aware ROOT and untouched third party. code. This patch enables header parsing on demand when we have no module file. available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2722:5,deployability,build,build,5,More build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:18,deployability,updat,updates,18,More build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:18,safety,updat,updates,18,More build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:18,security,updat,updates,18,More build system updates;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2724:51,safety,test,tests,51,Apply clang-tidy changes to the vectorized fitting tests; As seen on Wolfs' server :),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2724
https://github.com/root-project/root/pull/2724:51,testability,test,tests,51,Apply clang-tidy changes to the vectorized fitting tests; As seen on Wolfs' server :),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2724
https://github.com/root-project/root/pull/2725:624,availability,error,error,624,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:711,availability,error,error,711,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1457,availability,state,statement,1457,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1541,availability,failur,failure,1541,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:510,deployability,updat,updated,510,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:650,deployability,build,build,650,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:832,deployability,build,build,832,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1541,deployability,fail,failure,1541,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1678,deployability,fail,failed,1678,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1556,energy efficiency,load,load,1556,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1691,energy efficiency,load,loaded,1691,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1457,integrability,state,statement,1457,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:380,modifiability,scal,scalability,380,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:342,performance,time,time,342,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:347,performance,perform,performance,347,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:380,performance,scalab,scalability,380,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:624,performance,error,error,624,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:711,performance,error,error,711,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1541,performance,failur,failure,1541,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1556,performance,load,load,1556,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1691,performance,load,loaded,1691,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1828,performance,cach,caching,1828,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1541,reliability,fail,failure,1541,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1678,reliability,fail,failed,1678,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:510,safety,updat,updated,510,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:624,safety,error,error,624,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:711,safety,error,error,711,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:510,security,updat,updated,510,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1337,security,Hash,HashValue,1337,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1347,security,hash,hash,1347,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1584,security,hash,hash,1584,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1653,security,hash,hash,1653,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1720,security,hash,hash,1720,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:347,usability,perform,performance,347,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:624,usability,error,error,624,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:711,usability,error,error,711,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:998,usability,behavi,behavior,998,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1520,usability,indicat,indicates,1520,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1590,usability,indicat,indicates,1590,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:1659,usability,indicat,indicates,1659,"v6.14 fix ROOT-9694; Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever. there was a problem reading the StreamerInfo record and. introduces a useless attempt to read from file in the case. of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread. scalability the override ability of TFile::GetStreamerInfoList. is replaced by an override of TFile::GetStreamerInfoListImp with. updated return type and arguments. If a class override. TFile::GetStreamerInfoList you will now see a compilation error like:. {code}. /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function. virtual TList *GetStreamerInfoList();. ^. /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here. virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl. ^. {code}. Instead you need to override the protected method:. {code}. InfoListRet GetStreamerInfoListImpl(bool lookupSICache);. {code}. which can be implemented as. {code}. InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {. ROOT::Internal::RConcurrentHashColl::HashValue hash;. TList *infolist = nullptr;. //. // Body of the former Derived::GetStreamerInfoList with the. // return statement replaced with something like:. // The second element indicates success or failure of the load. // (i.e. {nullptr, 0, hash} indicates the list has already been processed. // {nullptr, 1, hash} indicates the list failed to be loaded. return {infolist, 0, hash};. }. {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2727:227,availability,error,error,227,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:321,availability,Error,Error,321,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:177,deployability,build,build,177,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:213,deployability,fail,fail,213,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:273,deployability,build,buildid,273,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:413,deployability,contain,contains,413,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:432,deployability,BUILD,BUILDDIR,432,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:484,deployability,build,build,484,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:714,deployability,depend,dependencies,714,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:714,integrability,depend,dependencies,714,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:714,modifiability,depend,dependencies,714,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:227,performance,error,error,227,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:321,performance,Error,Error,321,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:213,reliability,fail,fail,213,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:227,safety,error,error,227,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:321,safety,Error,Error,321,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:714,safety,depend,dependencies,714,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:714,testability,depend,dependencies,714,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:227,usability,error,error,227,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:321,usability,Error,Error,321,"Revert back to include_directories() for net/netxng; NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:. ```. CMake Error in net/netxng/CMakeLists.txt:. Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory. ```. This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2729:21,deployability,Updat,Update,21,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:64,deployability,Updat,Update,64,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:239,integrability,batch,batch,239,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:239,performance,batch,batch,239,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:12,reliability,RCa,RCanvas,12,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:55,reliability,RCa,RCanvas,55,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:127,reliability,RCa,RCanvasPainter,127,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:21,safety,Updat,Update,21,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:64,safety,Updat,Update,64,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:212,safety,Test,Test,212,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:21,security,Updat,Update,21,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:64,security,Updat,Update,64,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:212,testability,Test,Test,212,"webgui: fix RCanvas::Update and RFitPanel examples; 1. RCanvas::Update() have to wait pending connections. 2. Fix problem with RCanvasPainter::AddPanel(), used for RFitPanel. 3. Rename TFitPanel -> RFitPanel. 4. Test fitpanel.cxx macro in batch mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2731:529,availability,operat,operations,529,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:736,deployability,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:855,deployability,stage,stage,855,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1291,deployability,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:502,energy efficiency,schedul,scheduling,502,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:993,energy efficiency,schedul,scheduling,993,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:830,integrability,sub,sub-collection,830,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1216,integrability,sub,sub-collection,1216,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1419,integrability,sub,sub-collection,1419,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1538,integrability,sub,sub-collection,1538,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:502,performance,schedul,scheduling,502,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:993,performance,schedul,scheduling,993,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:622,safety,input,input,622,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:712,safety,input,input,712,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:736,safety,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:934,safety,input,input,934,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1098,safety,input,input,1098,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1267,safety,input,input,1267,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1291,safety,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:736,security,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1291,security,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:622,usability,input,input,622,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:712,usability,input,input,712,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:934,usability,input,input,934,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1098,usability,input,input,1098,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:1267,usability,input,input,1267,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2732:81,interoperability,specif,specific,81,Add a warning if thread pool initialized by IMT; Raise a warning if requesting a specific number of threads but the pool has already been initialized with a different number.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2733:35,safety,test,test,35,[cxxmodules] Remove workarounds in test.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2733
https://github.com/root-project/root/pull/2733:35,testability,test,test,35,[cxxmodules] Remove workarounds in test.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2733
https://github.com/root-project/root/pull/2734:529,availability,operat,operations,529,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:736,deployability,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:855,deployability,stage,stage,855,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1291,deployability,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:502,energy efficiency,schedul,scheduling,502,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:993,energy efficiency,schedul,scheduling,993,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:830,integrability,sub,sub-collection,830,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1216,integrability,sub,sub-collection,1216,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1419,integrability,sub,sub-collection,1419,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1538,integrability,sub,sub-collection,1538,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:502,performance,schedul,scheduling,502,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:993,performance,schedul,scheduling,993,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:622,safety,input,input,622,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:712,safety,input,input,712,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:736,safety,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:934,safety,input,input,934,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1098,safety,input,input,1098,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1267,safety,input,input,1267,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1291,safety,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:736,security,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1291,security,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:622,usability,input,input,622,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:712,usability,input,input,712,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:934,usability,input,input,934,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1098,usability,input,input,1098,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:1267,usability,input,input,1267,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2735:529,availability,operat,operations,529,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:736,deployability,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:855,deployability,stage,stage,855,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1291,deployability,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:502,energy efficiency,schedul,scheduling,502,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:993,energy efficiency,schedul,scheduling,993,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:830,integrability,sub,sub-collection,830,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1216,integrability,sub,sub-collection,1216,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1419,integrability,sub,sub-collection,1419,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1538,integrability,sub,sub-collection,1538,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:502,performance,schedul,scheduling,502,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:993,performance,schedul,scheduling,993,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:622,safety,input,input,622,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:712,safety,input,input,712,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:736,safety,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:934,safety,input,input,934,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1098,safety,input,input,1098,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1267,safety,input,input,1267,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1291,safety,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:736,security,updat,updating,736,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1291,security,updat,updating,1291,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:622,usability,input,input,622,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:712,usability,input,input,712,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:934,usability,input,input,934,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1098,usability,input,input,1098,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2735:1267,usability,input,input,1267,"Fix ROOT-9701, IO read rules seemingly no longer executed.; The rule were actually still executed on the proper object and. in the right order. However when we had. - a top level object with a rule for one of its transient member. - that top level object also having a data member that is an STL collection. then the fOnfileObject (type TVirtualArray) was inadvertently resized. by the top node of the STL object (i.e 'type 4' branch) to the size of. the collection. Before the improvement to the rule scheduling the ordering of operations. was:. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - c - execute the rule using the input/fOnfileObject and updating the transient member. 4 - d - resize the top level object's fOnfileObject to size of sub-collection. The last stage provoke a reallocation of the element of fOnfileObject (thus. losing the input but only 'after' it has been used. With the new rule scheduling the order becomes. 1 - a - resize the top level object's fOnfileObject to 1. 2 - b - read the input for the transient member into the fOnfileObject. 3 - d - resize the top level object's fOnfileObject to size of sub-collection. 4 - c - execute the rule using the input/fOnfileObject and updating the transient member. and now the consequence of the inadvertent resize becomes visible. i.e. for each entry where the sub-collection 'grows' the transient member. value will be invalid. [Note: in the example provided with ROOT-9701 the. sub-collection 'grows' by one at each entry]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2735
https://github.com/root-project/root/pull/2736:0,safety,Avoid,Avoid,0,Avoid being able to create too many workers in hadd;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2737:55,deployability,Updat,Update,55,"Remove ""globbing"" for Math; To be done for this PR:. - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():. genvector & smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:120,integrability,compon,components,120,"Remove ""globbing"" for Math; To be done for this PR:. - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():. genvector & smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:120,interoperability,compon,components,120,"Remove ""globbing"" for Math; To be done for this PR:. - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():. genvector & smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:120,modifiability,compon,components,120,"Remove ""globbing"" for Math; To be done for this PR:. - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():. genvector & smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:55,safety,Updat,Update,55,"Remove ""globbing"" for Math; To be done for this PR:. - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():. genvector & smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:55,security,Updat,Update,55,"Remove ""globbing"" for Math; To be done for this PR:. - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():. genvector & smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2738:36,availability,error,error,36,From Sergey: Try to fix compilation error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2738
https://github.com/root-project/root/pull/2738:36,performance,error,error,36,From Sergey: Try to fix compilation error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2738
https://github.com/root-project/root/pull/2738:36,safety,error,error,36,From Sergey: Try to fix compilation error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2738
https://github.com/root-project/root/pull/2738:36,usability,error,error,36,From Sergey: Try to fix compilation error;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2738
https://github.com/root-project/root/pull/2739:87,energy efficiency,optim,optimisation,87,[TTreeReader] Fix ROOT-9570 Allow TTreeReaderArray to read vector of booleans; + small optimisation,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2739
https://github.com/root-project/root/pull/2741:61,availability,cluster,clusters,61,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:131,availability,cluster,cluster,131,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:203,availability,cluster,clusters,203,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:493,availability,Cluster,Cluster,493,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:636,availability,cluster,cluster,636,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:722,availability,Error,Error,722,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:889,availability,Error,Error,889,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1056,availability,Error,Error,1056,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1223,availability,Error,Error,1223,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1571,availability,error,error-with-root-,1571,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:61,deployability,cluster,clusters,61,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:131,deployability,cluster,cluster,131,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:203,deployability,cluster,clusters,203,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:493,deployability,Cluster,Cluster,493,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:636,deployability,cluster,cluster,636,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1471,deployability,contain,contains,1471,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:613,energy efficiency,estimat,estimate,613,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:707,integrability,messag,message,707,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:707,interoperability,messag,message,707,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:722,performance,Error,Error,722,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:889,performance,Error,Error,889,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1056,performance,Error,Error,1056,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1223,performance,Error,Error,1223,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1571,performance,error,error-with-root-,1571,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:722,safety,Error,Error,722,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:889,safety,Error,Error,889,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1056,safety,Error,Error,1056,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1223,safety,Error,Error,1223,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1571,safety,error,error-with-root-,1571,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:17,usability,behavi,behavior,17,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:722,usability,Error,Error,722,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:889,usability,Error,Error,889,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1056,usability,Error,Error,1056,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1223,usability,Error,Error,1223,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:1571,usability,error,error-with-root-,1571,"Fix inconsistent behavior in TClusterIterator when there are clusters but fAutoFlush is still negative.; . With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");. ******************************************************************************. *Tree :t : t *. *Entries : 1000 : Total = 424803 bytes File Size = 33982 *. * : : Tree compression factor = 12.78 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size. 0 0 49 10. …. 18 900 949 10. 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range. This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains. all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914. the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2742:15,deployability,modul,module,15,Fixing runtime module compilation for RCustomColumm.hxx;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:15,modifiability,modul,module,15,Fixing runtime module compilation for RCustomColumm.hxx;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:15,safety,modul,module,15,Fixing runtime module compilation for RCustomColumm.hxx;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2743:5,usability,Help,Help,5,[DF] Help windows with namespaces;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2743
https://github.com/root-project/root/pull/2744:104,safety,avoid,avoid,104,"[DF][NFC] Improve doc, use aliases for return types; and templates in the context of private methods to avoid doc squeezed to the right.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2744
https://github.com/root-project/root/pull/2744:74,testability,context,context,74,"[DF][NFC] Improve doc, use aliases for return types; and templates in the context of private methods to avoid doc squeezed to the right.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2744
https://github.com/root-project/root/pull/2745:451,deployability,Patch,Patch,451,"[clad] Initial support of gradient calculation in TFormula using clad.; TFormula generates a function on the fly along with a trampoline function. which ensures uniform calling of it. Once compiled, the function can be. called on different data and multiple times. We extend this concept by computing the gradient of the nominated function. The gradient generation is done by clad and TFormula wraps it in a similar. easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:394,integrability,wrap,wraps,394,"[clad] Initial support of gradient calculation in TFormula using clad.; TFormula generates a function on the fly along with a trampoline function. which ensures uniform calling of it. Once compiled, the function can be. called on different data and multiple times. We extend this concept by computing the gradient of the nominated function. The gradient generation is done by clad and TFormula wraps it in a similar. easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:268,modifiability,exten,extend,268,"[clad] Initial support of gradient calculation in TFormula using clad.; TFormula generates a function on the fly along with a trampoline function. which ensures uniform calling of it. Once compiled, the function can be. called on different data and multiple times. We extend this concept by computing the gradient of the nominated function. The gradient generation is done by clad and TFormula wraps it in a similar. easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:258,performance,time,times,258,"[clad] Initial support of gradient calculation in TFormula using clad.; TFormula generates a function on the fly along with a trampoline function. which ensures uniform calling of it. Once compiled, the function can be. called on different data and multiple times. We extend this concept by computing the gradient of the nominated function. The gradient generation is done by clad and TFormula wraps it in a similar. easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:451,safety,Patch,Patch,451,"[clad] Initial support of gradient calculation in TFormula using clad.; TFormula generates a function on the fly along with a trampoline function. which ensures uniform calling of it. Once compiled, the function can be. called on different data and multiple times. We extend this concept by computing the gradient of the nominated function. The gradient generation is done by clad and TFormula wraps it in a similar. easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:451,security,Patch,Patch,451,"[clad] Initial support of gradient calculation in TFormula using clad.; TFormula generates a function on the fly along with a trampoline function. which ensures uniform calling of it. Once compiled, the function can be. called on different data and multiple times. We extend this concept by computing the gradient of the nominated function. The gradient generation is done by clad and TFormula wraps it in a similar. easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:15,usability,support,support,15,"[clad] Initial support of gradient calculation in TFormula using clad.; TFormula generates a function on the fly along with a trampoline function. which ensures uniform calling of it. Once compiled, the function can be. called on different data and multiple times. We extend this concept by computing the gradient of the nominated function. The gradient generation is done by clad and TFormula wraps it in a similar. easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2746:5,availability,cluster,cluster,5,V612 cluster iterator with neg auto flush;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2746:5,deployability,cluster,cluster,5,V612 cluster iterator with neg auto flush;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2747:5,availability,cluster,cluster,5,V614 cluster iterator with neg auto flush;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2747:5,deployability,cluster,cluster,5,V614 cluster iterator with neg auto flush;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2748:311,deployability,build,build,311,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2748:433,deployability,Depend,Depending,433,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2748:163,energy efficiency,alloc,allocator,163,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2748:433,integrability,Depend,Depending,433,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2748:433,modifiability,Depend,Depending,433,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2748:433,safety,Depend,Depending,433,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2748:529,safety,valid,valid,529,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2748:433,testability,Depend,Depending,433,"[cling] Move DirIter usage to no-rtti part:; Extracted here to circumvent ODR clash between. std::Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (_gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&). coming from a no-rtti and a rtti build in libstdc++ from GCC >= 8.1. In its function body, rtti uses `arg0 == typeid(...)` protected by #ifdef __cpp_rtti. Depending. on which symbol (with or without rtti) the linker picks up, the argument `arg0` is a valid. type_info - or not, in which case this comparison crashes. Circumvent this by removing the rtti-use of this function:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2748
https://github.com/root-project/root/pull/2750:7,deployability,Releas,Release,7,"[DOCS] Release notes, small fix for RDF;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2750
https://github.com/root-project/root/pull/2751:194,deployability,Releas,ReleaseNotes,194,"Added localredirect compatibility to TNetXNGFile; Added necessary changes to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) from within TNetXNGFile. 1. Uses standard VectorReadLimits and does not query a XRootD data server (which is unknown in local redirection), when it is redirected to a local file. 2. Adds a, const char *lurl (defaulted to 0) to TNetXNGFile's Constructor, and passes it to TFile, if set. This allows redirection to files that have a different name in the local file system and is important to allow derivation (for example TAlien and TJAlienFile) and to still keep functionality via TArchiveFile when the file name in the local file system does not match *.zip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:20,interoperability,compatib,compatibility,20,"Added localredirect compatibility to TNetXNGFile; Added necessary changes to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) from within TNetXNGFile. 1. Uses standard VectorReadLimits and does not query a XRootD data server (which is unknown in local redirection), when it is redirected to a local file. 2. Adds a, const char *lurl (defaulted to 0) to TNetXNGFile's Constructor, and passes it to TFile, if set. This allows redirection to files that have a different name in the local file system and is important to allow derivation (for example TAlien and TJAlienFile) and to still keep functionality via TArchiveFile when the file name in the local file system does not match *.zip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:249,interoperability,standard,standard,249,"Added localredirect compatibility to TNetXNGFile; Added necessary changes to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) from within TNetXNGFile. 1. Uses standard VectorReadLimits and does not query a XRootD data server (which is unknown in local redirection), when it is redirected to a local file. 2. Adds a, const char *lurl (defaulted to 0) to TNetXNGFile's Constructor, and passes it to TFile, if set. This allows redirection to files that have a different name in the local file system and is important to allow derivation (for example TAlien and TJAlienFile) and to still keep functionality via TArchiveFile when the file name in the local file system does not match *.zip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:279,reliability,doe,does,279,"Added localredirect compatibility to TNetXNGFile; Added necessary changes to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) from within TNetXNGFile. 1. Uses standard VectorReadLimits and does not query a XRootD data server (which is unknown in local redirection), when it is redirected to a local file. 2. Adds a, const char *lurl (defaulted to 0) to TNetXNGFile's Constructor, and passes it to TFile, if set. This allows redirection to files that have a different name in the local file system and is important to allow derivation (for example TAlien and TJAlienFile) and to still keep functionality via TArchiveFile when the file name in the local file system does not match *.zip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:754,reliability,doe,does,754,"Added localredirect compatibility to TNetXNGFile; Added necessary changes to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) from within TNetXNGFile. 1. Uses standard VectorReadLimits and does not query a XRootD data server (which is unknown in local redirection), when it is redirected to a local file. 2. Adds a, const char *lurl (defaulted to 0) to TNetXNGFile's Constructor, and passes it to TFile, if set. This allows redirection to files that have a different name in the local file system and is important to allow derivation (for example TAlien and TJAlienFile) and to still keep functionality via TArchiveFile when the file name in the local file system does not match *.zip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2752:161,integrability,configur,configure,161,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:97,interoperability,specif,specify,97,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:161,modifiability,configur,configure,161,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:201,modifiability,paramet,parameters,201,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:248,modifiability,paramet,parameter,248,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:25,performance,cach,cache,25,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:62,performance,Cach,CacheControl,62,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:142,performance,cach,cache,142,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:297,performance,cach,caching,297,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:17,security,control,control,17,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:161,security,configur,configure,161,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:17,testability,control,control,17,"http: let better control cache settings from web server; With CacheControl HTTP header one could specify how long browser will store files in cache. Now one can configure for all file requests max-age parameters. Introduce WebGui.HttpMaxAge rootrc parameter. When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2753:1,energy efficiency,Core,Core,1,[Core] [ROOT-9712] Add proper recursive dictionary check for tuple and array; And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2753:82,modifiability,refact,refactor,82,[Core] [ROOT-9712] Add proper recursive dictionary check for tuple and array; And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2753:82,performance,refactor,refactor,82,[Core] [ROOT-9712] Add proper recursive dictionary check for tuple and array; And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2753:111,usability,clear,clearer,111,[Core] [ROOT-9712] Add proper recursive dictionary check for tuple and array; And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2754:59,deployability,build,builds,59,XRootD Local Redirection in AliEn via TNetXNGFile; This PR builds upon #2751. Lets TAlienFile be derived from TNetXNGFile instead of TXNetFile. 1. Changes the corrresponding CMakeLists.txt to include XRootD/NetxNG. 2. Derives TAlienFile from TNetXNGFile and allows local redirection via the 'new' XRootD client (XrdCl) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2754
https://github.com/root-project/root/pull/2756:24,performance,Memor,Memory,24,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:57,performance,memor,memory,57,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:24,usability,Memor,Memory,24,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:57,usability,memor,memory,57,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2757:5,safety,Avoid,Avoid,5,[DF] Avoid relying on RVec class layout in Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2757
https://github.com/root-project/root/pull/2759:59,safety,test,test,59,[TreePlayer] Fix `TTreeReaderArray::GetSize`; ...and add a test for the broken case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2759
https://github.com/root-project/root/pull/2759:59,testability,test,test,59,[TreePlayer] Fix `TTreeReaderArray::GetSize`; ...and add a test for the broken case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2759
https://github.com/root-project/root/pull/2760:60,availability,error,error,60,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:112,availability,error,error,112,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:6,integrability,coupl,couple,6,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:66,integrability,messag,message,66,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:66,interoperability,messag,message,66,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:6,modifiability,coupl,couple,6,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:60,performance,error,error,60,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:112,performance,error,error,112,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:60,safety,error,error,60,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:112,safety,error,error,112,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:6,testability,coupl,couple,6,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:60,usability,error,error,60,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2760:112,usability,error,error,112,Add a couple of missing PrettyPrintAddr(); Fix this kind of error message on Windows:. 155: input_line_18:2:19: error: invalid digit 'B' in octal constant. 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2760
https://github.com/root-project/root/pull/2762:60,integrability,discover,discovered,60,[cxxmodules] Fix a potential null dereference.; The bug was discovered by running runarray1 test in runtime_cxxmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2762
https://github.com/root-project/root/pull/2762:60,interoperability,discover,discovered,60,[cxxmodules] Fix a potential null dereference.; The bug was discovered by running runarray1 test in runtime_cxxmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2762
https://github.com/root-project/root/pull/2762:92,safety,test,test,92,[cxxmodules] Fix a potential null dereference.; The bug was discovered by running runarray1 test in runtime_cxxmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2762
https://github.com/root-project/root/pull/2762:92,testability,test,test,92,[cxxmodules] Fix a potential null dereference.; The bug was discovered by running runarray1 test in runtime_cxxmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2762
https://github.com/root-project/root/pull/2762:60,usability,discov,discovered,60,[cxxmodules] Fix a potential null dereference.; The bug was discovered by running runarray1 test in runtime_cxxmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2762
https://github.com/root-project/root/pull/2764:53,availability,operat,operations,53,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:87,availability,redund,redundant,87,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:304,availability,failur,failures,304,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:87,deployability,redundan,redundant,87,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:178,deployability,contain,contains,178,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:269,deployability,patch,patch,269,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:304,deployability,fail,failures,304,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:329,deployability,depend,depending,329,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:97,energy efficiency,load,loading,97,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:354,energy efficiency,optim,optimizations,354,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:249,integrability,filter,filter,249,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:292,integrability,sub,subtle,292,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:329,integrability,depend,depending,329,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:329,modifiability,depend,depending,329,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:97,performance,load,loading,97,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:304,performance,failur,failures,304,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:354,performance,optimiz,optimizations,354,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:87,reliability,redundan,redundant,87,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:304,reliability,fail,failures,304,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:75,safety,detect,detected,75,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:87,safety,redund,redundant,87,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:269,safety,patch,patch,269,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:299,safety,test,test,299,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:329,safety,depend,depending,329,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:75,security,detect,detected,75,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:269,security,patch,patch,269,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:299,testability,test,test,299,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:329,testability,depend,depending,329,[cxxmodules] Checking if a flag is set needs bitwise operations.; This was detected by redundant loading on libRooStats when we are trying. to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol. but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending. on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2765:319,deployability,automat,automatically,319,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:97,interoperability,specif,specify,97,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:390,reliability,pra,practival,390,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:319,testability,automat,automatically,319,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:15,usability,support,support,15,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:26,usability,custom,custom,26,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:107,usability,custom,custom,107,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:710,usability,custom,custom,710,"[clad] Initial support of custom derivatives in clad for some of TMath functions; Clad allows to specify a custom derivative for any function. The derivative has to be defined in the `custom_derivatives` namespace and will be used. whenever the derivative of the original function is required (instead of proceeding to automatically derive the function). For example, instead of deriving a practival implementation of `sin` (which is likely to be non-differentiable due to implementation details), we can. define. ```. namespace custom_derivatives {. double sin_darg0(double x) { return cos(x); }. }. ```. As a result, `cos` will be used directly whenever the derivative of `sin` is required. This commit adds custom derivatives for some of the mathematical functions in the `TMath` namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2767:159,deployability,Version,Version,159,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:238,deployability,stack,stack,238,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:287,deployability,stack,stack,287,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:310,deployability,stack,stack,310,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:434,deployability,stack,stack,434,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:507,deployability,stack,stacks,507,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:597,deployability,stack,stack,597,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:159,integrability,Version,Version,159,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:159,modifiability,Version,Version,159,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:14,usability,support,support,14,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:136,usability,support,supporting,136,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:358,usability,behavi,behavior,358,"Add option to support the Full Beeston-Barlow handling for HistFactory, as well as mixed Full/Light handling; HistFactory has only been supporting the ""Light"" Version of the Beeston-Barlow method so far. This MR adds an option to assign ""stack labels"" to individual contributions of the stack. By default, the stack labels will all be empty, reproducing the behavior of the Beeston-Barlow-Light approach. However, assigning non-empty stack labels will trigger the labeled sections to be treated as separate stacks in terms of the MC stat uncertainty handling. In the limit of assigning a separate stack label for each contribution, this corresponds to the Full Beeston-Barlow handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2768:63,availability,failur,failures,63,[TreePlayer] Remove leftover debug output; This should fix the failures in `roottest-root-tree-reader-make` that we see in the v6.14 nightlies,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2768
https://github.com/root-project/root/pull/2768:63,deployability,fail,failures,63,[TreePlayer] Remove leftover debug output; This should fix the failures in `roottest-root-tree-reader-make` that we see in the v6.14 nightlies,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2768
https://github.com/root-project/root/pull/2768:63,performance,failur,failures,63,[TreePlayer] Remove leftover debug output; This should fix the failures in `roottest-root-tree-reader-make` that we see in the v6.14 nightlies,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2768
https://github.com/root-project/root/pull/2768:63,reliability,fail,failures,63,[TreePlayer] Remove leftover debug output; This should fix the failures in `roottest-root-tree-reader-make` that we see in the v6.14 nightlies,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2768
https://github.com/root-project/root/pull/2769:6,interoperability,plug,plugins,6,Allow plugins to handle custom pragmas.; This will help clad implement pattern such as:. #pragma clad on. // code which needs derivation. #pragma clad off,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2769
https://github.com/root-project/root/pull/2769:31,reliability,pra,pragmas,31,Allow plugins to handle custom pragmas.; This will help clad implement pattern such as:. #pragma clad on. // code which needs derivation. #pragma clad off,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2769
https://github.com/root-project/root/pull/2769:90,reliability,pra,pragma,90,Allow plugins to handle custom pragmas.; This will help clad implement pattern such as:. #pragma clad on. // code which needs derivation. #pragma clad off,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2769
https://github.com/root-project/root/pull/2769:139,reliability,pra,pragma,139,Allow plugins to handle custom pragmas.; This will help clad implement pattern such as:. #pragma clad on. // code which needs derivation. #pragma clad off,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2769
https://github.com/root-project/root/pull/2769:24,usability,custom,custom,24,Allow plugins to handle custom pragmas.; This will help clad implement pattern such as:. #pragma clad on. // code which needs derivation. #pragma clad off,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2769
https://github.com/root-project/root/pull/2769:51,usability,help,help,51,Allow plugins to handle custom pragmas.; This will help clad implement pattern such as:. #pragma clad on. // code which needs derivation. #pragma clad off,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2769
https://github.com/root-project/root/pull/2771:19,interoperability,prox,proxies,19,"[DF] Allow to have proxies for vector<bool, A<bool>> for all types of A; and add to the linkdef of Vecops the storage of RVec<bool>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2771
https://github.com/root-project/root/pull/2772:23,deployability,modul,modules,23,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:39,deployability,modul,modules,39,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:71,deployability,modul,modules,71,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:88,deployability,Modul,Modules,88,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:34,energy efficiency,Core,Core,34,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:83,energy efficiency,Core,Core,83,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:23,modifiability,modul,modules,23,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:39,modifiability,modul,modules,39,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:71,modifiability,modul,modules,71,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:88,modifiability,Modul,Modules,88,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:23,safety,modul,modules,23,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:39,safety,modul,modules,39,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:71,safety,modul,modules,71,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:88,safety,Modul,Modules,88,"[cxxmodules] Add Cling modules to Core modules; Newly introduced Cling modules is ""Core Modules"", in a sense that root. can't startup without importing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2773:13,safety,test,test,13,"Fix printing test in Cling; Testsuit was actually looking at '""' for match, comparing literal 21. should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2773
https://github.com/root-project/root/pull/2773:28,safety,Test,Testsuit,28,"Fix printing test in Cling; Testsuit was actually looking at '""' for match, comparing literal 21. should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2773
https://github.com/root-project/root/pull/2773:13,testability,test,test,13,"Fix printing test in Cling; Testsuit was actually looking at '""' for match, comparing literal 21. should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2773
https://github.com/root-project/root/pull/2773:28,testability,Test,Testsuit,28,"Fix printing test in Cling; Testsuit was actually looking at '""' for match, comparing literal 21. should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2773
https://github.com/root-project/root/pull/2775:148,deployability,contain,containing,148,"Enable offset array generation for TLeafElement; `TLeafElement` is one of the existing holes for offset array generation - if you serialize a class containing data elements whose size is kept in a separate index variable, we can definitely generate the offset array separately. This PR closes that hole. Further, unit tests are included to ensure that the offset array generation is doing as expected. Fixes ROOT-9634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:212,modifiability,variab,variable,212,"Enable offset array generation for TLeafElement; `TLeafElement` is one of the existing holes for offset array generation - if you serialize a class containing data elements whose size is kept in a separate index variable, we can definitely generate the offset array separately. This PR closes that hole. Further, unit tests are included to ensure that the offset array generation is doing as expected. Fixes ROOT-9634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:318,safety,test,tests,318,"Enable offset array generation for TLeafElement; `TLeafElement` is one of the existing holes for offset array generation - if you serialize a class containing data elements whose size is kept in a separate index variable, we can definitely generate the offset array separately. This PR closes that hole. Further, unit tests are included to ensure that the offset array generation is doing as expected. Fixes ROOT-9634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:313,testability,unit,unit,313,"Enable offset array generation for TLeafElement; `TLeafElement` is one of the existing holes for offset array generation - if you serialize a class containing data elements whose size is kept in a separate index variable, we can definitely generate the offset array separately. This PR closes that hole. Further, unit tests are included to ensure that the offset array generation is doing as expected. Fixes ROOT-9634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:318,testability,test,tests,318,"Enable offset array generation for TLeafElement; `TLeafElement` is one of the existing holes for offset array generation - if you serialize a class containing data elements whose size is kept in a separate index variable, we can definitely generate the offset array separately. This PR closes that hole. Further, unit tests are included to ensure that the offset array generation is doing as expected. Fixes ROOT-9634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:286,usability,close,closes,286,"Enable offset array generation for TLeafElement; `TLeafElement` is one of the existing holes for offset array generation - if you serialize a class containing data elements whose size is kept in a separate index variable, we can definitely generate the offset array separately. This PR closes that hole. Further, unit tests are included to ensure that the offset array generation is doing as expected. Fixes ROOT-9634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2776:814,availability,Error,Error,814,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1247,availability,Error,Error,1247,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1322,availability,Error,Error,1322,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:211,deployability,contain,containing,211,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:490,deployability,compos,composed,490,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:855,deployability,Fail,Failed,855,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1422,deployability,fail,failed,1422,"Transaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1980,deployability,patch,patches,1980,"_attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2191,deployability,patch,patches,2191,"#pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2441,deployability,patch,patches,2441,"ctory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2742,deployability,patch,patches,2742,"turn the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3009,deployability,patch,patches,3009,"erpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3483,deployability,patch,patches,3483,"rpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3761,deployability,patch,patches,3761,"ng/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::Get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3875,deployability,patch,patches,3875,"imized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4163,deployability,patch,patches,4163,"n=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4263,deployability,patch,patches,4263,"77430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4460,deployability,patch,patches,4460,"rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4700,deployability,patch,patches,4700,"f7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4903,deployability,patch,patches,4903,":1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5033,deployability,patch,patches,5033,", dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5166,deployability,patch,patches,5166,"/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5294,deployability,patch,patches,5294,"07. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5428,deployability,patch,patches,5428,"_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5566,deployability,patch,patches,5566,"imized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5703,deployability,patch,patches,5703,"/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5890,deployability,patch,patches,5890,"v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::Multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6065,deployability,patch,patches,6065,"156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6219,deployability,patch,patches,6219,"ctHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6410,deployability,patch,patches,6410,"ilds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6639,deployability,patch,patches,6639,"0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6716,deployability,Updat,UpdateListsOnCommitted,6716,"ashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6812,deployability,patch,patches,6812,"obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7014,deployability,patch,patches,7014,"/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7259,deployability,patch,patches,7259,"etListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7475,deployability,patch,patches,7475,"g::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7709,deployability,patch,patches,7709,"g::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7922,deployability,patch,patches,7922,"ctionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8158,deployability,patch,patches,8158,"(this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8411,deployability,patch,patches,8411,"Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8654,deployability,patch,patches,8654," at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8815,deployability,patch,patches,8815,"declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8995,deployability,patch,patches,8995,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9180,deployability,patch,patches,9180,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9339,deployability,patch,patches,9339,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9556,deployability,patch,patches,9556,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:250,energy efficiency,current,current,250,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2374,energy efficiency,optim,optimized,2374,"ler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2876,energy efficiency,optim,optimized,2876,"rser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2902,energy efficiency,optim,optimized,2902,"=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2942,energy efficiency,optim,optimized,2942,"/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3017,energy efficiency,core,core,3017,"er/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3325,energy efficiency,optim,optimized,3325,"actionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3345,energy efficiency,optim,optimized,3345,"fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3365,energy efficiency,optim,optimized,3365,"rg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::Creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3392,energy efficiency,optim,optimized,3392,"cal2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3416,energy efficiency,optim,optimized,3416,"/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3491,energy efficiency,core,core,3491,"r.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3619,energy efficiency,optim,optimized,3619,"Diagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::Defi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3769,energy efficiency,core,core,3769,"/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3883,energy efficiency,core,core,3883," out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4171,energy efficiency,core,core,4171,"sion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4271,energy efficiency,core,core,4271,". dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4468,energy efficiency,core,core,4468,"ing/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4567,energy efficiency,optim,optimized,4567,"fd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4911,energy efficiency,core,core,4911," #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5045,energy efficiency,core,core,5045,"l@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5711,energy efficiency,core,core,5711,"nclude/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5898,energy efficiency,core,core,5898,"00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexIn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6073,energy efficiency,core,core,6073,"11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6329,energy efficiency,alloc,alloc,6329,"0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6337,energy efficiency,load,load,6337,"ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6342,energy efficiency,load,load,6342,"be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffee",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6418,energy efficiency,core,core,6418,"6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6647,energy efficiency,core,core,6647,"c0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6820,energy efficiency,core,core,6820,"j@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::dec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8662,energy efficiency,core,core,8662,"ocal2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8823,energy efficiency,core,core,8823,"e (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in myt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9003,energy efficiency,core,core,9003,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9188,energy efficiency,core,core,9188,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9347,energy efficiency,core,core,9347,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9462,energy efficiency,optim,optimized,9462,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9564,energy efficiency,core,core,9564,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1296,integrability,wrap,wrapper,1296,"on``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8558,integrability,wrap,wrapper,8558,"bc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1296,interoperability,wrapper,wrapper,1296,"on``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1368,interoperability,plug,plugin,1368,"ecuted during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8558,interoperability,wrapper,wrapper,8558,"bc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:490,modifiability,compos,composed,490,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:814,performance,Error,Error,814,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1247,performance,Error,Error,1247,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1322,performance,Error,Error,1322,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2374,performance,optimiz,optimized,2374,"ler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2876,performance,optimiz,optimized,2876,"rser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2902,performance,optimiz,optimized,2902,"=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2942,performance,optimiz,optimized,2942,"/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3325,performance,optimiz,optimized,3325,"actionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3345,performance,optimiz,optimized,3345,"fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3365,performance,optimiz,optimized,3365,"rg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::Creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3392,performance,optimiz,optimized,3392,"cal2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3416,performance,optimiz,optimized,3416,"/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3619,performance,optimiz,optimized,3619,"Diagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::Defi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4567,performance,optimiz,optimized,4567,"fd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6337,performance,load,load,6337,"ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6342,performance,load,load,6342,"be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffee",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6889,performance,Multiplex,MultiplexInterpreterCallbacks,6889,"ont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7056,performance,Multiplex,MultiplexInterpreterCallbacks,7056,"s/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9462,performance,optimiz,optimized,9462,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:855,reliability,Fail,Failed,855,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:899,reliability,pra,pragma,899,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:912,reliability,diagno,diagnostic,912,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:930,reliability,pra,pragma,930,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:943,reliability,diagno,diagnostic,943,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1196,reliability,pra,pragma,1196,"transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1209,reliability,diagno,diagnostic,1209,"taining the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1422,reliability,fail,failed,1422,"Transaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1735,reliability,doe,does,1735,"on of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:768,safety,compl,complex,768,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:814,safety,Error,Error,814,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1247,safety,Error,Error,1247,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1322,safety,Error,Error,1322,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1980,safety,patch,patches,1980,"_attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2191,safety,patch,patches,2191,"#pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2441,safety,patch,patches,2441,"ctory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2742,safety,patch,patches,2742,"turn the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3009,safety,patch,patches,3009,"erpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3483,safety,patch,patches,3483,"rpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3761,safety,patch,patches,3761,"ng/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::Get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3875,safety,patch,patches,3875,"imized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4163,safety,patch,patches,4163,"n=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4263,safety,patch,patches,4263,"77430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4460,safety,patch,patches,4460,"rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4700,safety,patch,patches,4700,"f7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4903,safety,patch,patches,4903,":1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5033,safety,patch,patches,5033,", dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5166,safety,patch,patches,5166,"/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5294,safety,patch,patches,5294,"07. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5428,safety,patch,patches,5428,"_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5566,safety,patch,patches,5566,"imized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5703,safety,patch,patches,5703,"/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5890,safety,patch,patches,5890,"v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::Multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6065,safety,patch,patches,6065,"156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6219,safety,patch,patches,6219,"ctHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6410,safety,patch,patches,6410,"ilds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6639,safety,patch,patches,6639,"0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6716,safety,Updat,UpdateListsOnCommitted,6716,"ashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6812,safety,patch,patches,6812,"obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7014,safety,patch,patches,7014,"/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7259,safety,patch,patches,7259,"etListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7404,safety,input,input,7404,"00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7475,safety,patch,patches,7475,"g::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7622,safety,input,input,7622,"ling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7709,safety,patch,patches,7709,"g::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7843,safety,input,input,7843,"cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7922,safety,patch,patches,7922,"ctionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8158,safety,patch,patches,8158,"(this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8411,safety,patch,patches,8411,"Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8654,safety,patch,patches,8654," at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8815,safety,patch,patches,8815,"declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8995,safety,patch,patches,8995,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9180,safety,patch,patches,9180,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9339,safety,patch,patches,9339,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9556,safety,patch,patches,9556,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:768,security,compl,complex,768,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:972,security,secur,security,972,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1980,security,patch,patches,1980,"_attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2191,security,patch,patches,2191,"#pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2441,security,patch,patches,2441,"ctory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:2742,security,patch,patches,2742,"turn the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3009,security,patch,patches,3009,"erpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3160,security,cve,cversion,3160,"working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3169,security,cve,cversion,3169,"ootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3483,security,patch,patches,3483,"rpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3609,security,cve,cversion,3609,"pHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3761,security,patch,patches,3761,"ng/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::Get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:3875,security,patch,patches,3875,"imized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4163,security,patch,patches,4163,"n=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4263,security,patch,patches,4263,"77430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4460,security,patch,patches,4460,"rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4700,security,patch,patches,4700,"f7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4903,security,patch,patches,4903,":1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5033,security,patch,patches,5033,", dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5166,security,patch,patches,5166,"/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5294,security,patch,patches,5294,"07. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5428,security,patch,patches,5428,"_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5566,security,patch,patches,5566,"imized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5703,security,patch,patches,5703,"/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:5890,security,patch,patches,5890,"v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::Multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6065,security,patch,patches,6065,"156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6219,security,patch,patches,6219,"ctHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6410,security,patch,patches,6410,"ilds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6567,security,modif,modifiedTClasses,6567,"pt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6639,security,patch,patches,6639,"0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6716,security,Updat,UpdateListsOnCommitted,6716,"ashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:6812,security,patch,patches,6812,"obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7014,security,patch,patches,7014,"/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7259,security,patch,patches,7259,"etListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7475,security,patch,patches,7475,"g::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7709,security,patch,patches,7709,"g::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7922,security,patch,patches,7922,"ctionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8158,security,patch,patches,8158,"(this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8411,security,patch,patches,8411,"Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8654,security,patch,patches,8654," at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8815,security,patch,patches,8815,"declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:8995,security,patch,patches,8995,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9180,security,patch,patches,9180,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9339,security,patch,patches,9339,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:9556,security,patch,patches,9556,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:912,testability,diagno,diagnostic,912,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:943,testability,diagno,diagnostic,943,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1209,testability,diagno,diagnostic,1209,"taining the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:814,usability,Error,Error,814,"Fix cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1247,usability,Error,Error,1247,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:1322,usability,Error,Error,1322,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7187,usability,Clear,ClearDiagClient,7187,"al/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7404,usability,input,input,7404,"00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7622,usability,input,input,7622,"ling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:7843,usability,input,input,7843,"cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2777:822,availability,Error,Error,822,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1255,availability,Error,Error,1255,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1330,availability,Error,Error,1330,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:219,deployability,contain,containing,219,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:498,deployability,compos,composed,498,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:863,deployability,Fail,Failed,863,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1430,deployability,fail,failed,1430,"Transaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1988,deployability,patch,patches,1988,"_attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2199,deployability,patch,patches,2199,"#pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2449,deployability,patch,patches,2449,"ctory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2750,deployability,patch,patches,2750,"turn the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3017,deployability,patch,patches,3017,"erpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3491,deployability,patch,patches,3491,"rpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3769,deployability,patch,patches,3769,"ng/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::Get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3883,deployability,patch,patches,3883,"imized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4171,deployability,patch,patches,4171,"n=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4271,deployability,patch,patches,4271,"77430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4468,deployability,patch,patches,4468,"rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4708,deployability,patch,patches,4708,"f7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4911,deployability,patch,patches,4911,":1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5041,deployability,patch,patches,5041,", dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5174,deployability,patch,patches,5174,"/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5302,deployability,patch,patches,5302,"07. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5436,deployability,patch,patches,5436,"_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5574,deployability,patch,patches,5574,"imized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5711,deployability,patch,patches,5711,"/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5898,deployability,patch,patches,5898,"v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::Multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6073,deployability,patch,patches,6073,"156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6227,deployability,patch,patches,6227,"ctHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6418,deployability,patch,patches,6418,"ilds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6647,deployability,patch,patches,6647,"0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6724,deployability,Updat,UpdateListsOnCommitted,6724,"ashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6820,deployability,patch,patches,6820,"obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7022,deployability,patch,patches,7022,"/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7267,deployability,patch,patches,7267,"etListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7483,deployability,patch,patches,7483,"g::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7717,deployability,patch,patches,7717,"g::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7930,deployability,patch,patches,7930,"ctionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8166,deployability,patch,patches,8166,"(this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8419,deployability,patch,patches,8419,"Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8662,deployability,patch,patches,8662," at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8823,deployability,patch,patches,8823,"declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9003,deployability,patch,patches,9003,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9188,deployability,patch,patches,9188,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9347,deployability,patch,patches,9347,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9564,deployability,patch,patches,9564,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:258,energy efficiency,current,current,258,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2382,energy efficiency,optim,optimized,2382,"ler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2884,energy efficiency,optim,optimized,2884,"rser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2910,energy efficiency,optim,optimized,2910,"=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2950,energy efficiency,optim,optimized,2950,"/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3025,energy efficiency,core,core,3025,"er/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3333,energy efficiency,optim,optimized,3333,"actionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3353,energy efficiency,optim,optimized,3353,"fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3373,energy efficiency,optim,optimized,3373,"rg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::Creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3400,energy efficiency,optim,optimized,3400,"cal2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3424,energy efficiency,optim,optimized,3424,"/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3499,energy efficiency,core,core,3499,"r.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3627,energy efficiency,optim,optimized,3627,"Diagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::Defi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3777,energy efficiency,core,core,3777,"/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3891,energy efficiency,core,core,3891," out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4179,energy efficiency,core,core,4179,"sion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4279,energy efficiency,core,core,4279,". dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4476,energy efficiency,core,core,4476,"ing/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4575,energy efficiency,optim,optimized,4575,"fd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4919,energy efficiency,core,core,4919," #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5053,energy efficiency,core,core,5053,"l@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5719,energy efficiency,core,core,5719,"nclude/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5906,energy efficiency,core,core,5906,"00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexIn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6081,energy efficiency,core,core,6081,"11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6337,energy efficiency,alloc,alloc,6337,"0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6345,energy efficiency,load,load,6345,"ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6350,energy efficiency,load,load,6350,"be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffee",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6426,energy efficiency,core,core,6426,"6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6655,energy efficiency,core,core,6655,"c0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6828,energy efficiency,core,core,6828,"j@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::dec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8670,energy efficiency,core,core,8670,"ocal2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8831,energy efficiency,core,core,8831,"e (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in myt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9011,energy efficiency,core,core,9011,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9196,energy efficiency,core,core,9196,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9355,energy efficiency,core,core,9355,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9470,energy efficiency,optim,optimized,9470,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9572,energy efficiency,core,core,9572,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1304,integrability,wrap,wrapper,1304,"on``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8566,integrability,wrap,wrapper,8566,"bc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1304,interoperability,wrapper,wrapper,1304,"on``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1376,interoperability,plug,plugin,1376,"ecuted during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8566,interoperability,wrapper,wrapper,8566,"bc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:498,modifiability,compos,composed,498,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:822,performance,Error,Error,822,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1255,performance,Error,Error,1255,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1330,performance,Error,Error,1330,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2382,performance,optimiz,optimized,2382,"ler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2884,performance,optimiz,optimized,2884,"rser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2910,performance,optimiz,optimized,2910,"=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2950,performance,optimiz,optimized,2950,"/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3333,performance,optimiz,optimized,3333,"actionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3353,performance,optimiz,optimized,3353,"fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3373,performance,optimiz,optimized,3373,"rg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::Creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3400,performance,optimiz,optimized,3400,"cal2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3424,performance,optimiz,optimized,3424,"/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3627,performance,optimiz,optimized,3627,"Diagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::Defi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4575,performance,optimiz,optimized,4575,"fd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patche",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6345,performance,load,load,6345,"ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6350,performance,load,load,6350,"be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffee",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6897,performance,Multiplex,MultiplexInterpreterCallbacks,6897,"ont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7064,performance,Multiplex,MultiplexInterpreterCallbacks,7064,"s/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9470,performance,optimiz,optimized,9470,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:863,reliability,Fail,Failed,863,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:907,reliability,pra,pragma,907,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:920,reliability,diagno,diagnostic,920,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:938,reliability,pra,pragma,938,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:951,reliability,diagno,diagnostic,951,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1204,reliability,pra,pragma,1204,"transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1217,reliability,diagno,diagnostic,1217,"taining the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1430,reliability,fail,failed,1430,"Transaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1743,reliability,doe,does,1743,"on of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:776,safety,compl,complex,776,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:822,safety,Error,Error,822,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1255,safety,Error,Error,1255,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1330,safety,Error,Error,1330,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1988,safety,patch,patches,1988,"_attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2199,safety,patch,patches,2199,"#pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2449,safety,patch,patches,2449,"ctory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2750,safety,patch,patches,2750,"turn the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3017,safety,patch,patches,3017,"erpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3491,safety,patch,patches,3491,"rpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3769,safety,patch,patches,3769,"ng/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::Get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3883,safety,patch,patches,3883,"imized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4171,safety,patch,patches,4171,"n=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4271,safety,patch,patches,4271,"77430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4468,safety,patch,patches,4468,"rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4708,safety,patch,patches,4708,"f7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4911,safety,patch,patches,4911,":1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5041,safety,patch,patches,5041,", dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5174,safety,patch,patches,5174,"/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5302,safety,patch,patches,5302,"07. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5436,safety,patch,patches,5436,"_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5574,safety,patch,patches,5574,"imized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5711,safety,patch,patches,5711,"/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5898,safety,patch,patches,5898,"v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::Multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6073,safety,patch,patches,6073,"156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6227,safety,patch,patches,6227,"ctHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6418,safety,patch,patches,6418,"ilds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6647,safety,patch,patches,6647,"0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6724,safety,Updat,UpdateListsOnCommitted,6724,"ashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6820,safety,patch,patches,6820,"obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7022,safety,patch,patches,7022,"/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7267,safety,patch,patches,7267,"etListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7412,safety,input,input,7412,"00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7483,safety,patch,patches,7483,"g::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7630,safety,input,input,7630,"ling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7717,safety,patch,patches,7717,"g::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7851,safety,input,input,7851,"cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7930,safety,patch,patches,7930,"ctionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8166,safety,patch,patches,8166,"(this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8419,safety,patch,patches,8419,"Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8662,safety,patch,patches,8662," at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8823,safety,patch,patches,8823,"declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9003,safety,patch,patches,9003,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9188,safety,patch,patches,9188,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9347,safety,patch,patches,9347,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9564,safety,patch,patches,9564,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:776,security,compl,complex,776,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:980,security,secur,security,980,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1988,security,patch,patches,1988,"_attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2199,security,patch,patches,2199,"#pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2449,security,patch,patches,2449,"ctory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:2750,security,patch,patches,2750,"turn the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3017,security,patch,patches,3017,"erpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3168,security,cve,cversion,3168,"working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3177,security,cve,cversion,3177,"ootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3491,security,patch,patches,3491,"rpreter.cpp:106. #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3617,security,cve,cversion,3617,"pHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3769,security,patch,patches,3769,"ng/lib/Interpreter/LookupHelper.cpp:466. #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::Get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:3883,security,patch,patches,3883,"imized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630. #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4171,security,patch,patches,4171,"n=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4271,security,patch,patches,4271,"77430,. dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4468,security,patch,patches,4468,"rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431. #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",. ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4708,security,patch,patches,4708,"f7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:4911,security,patch,patches,4911,":1273. #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5041,security,patch,patches,5041,", dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",. ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5174,security,patch,patches,5174,"/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5302,security,patch,patches,5302,"07. #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5436,security,patch,patches,5436,"_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",. isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5574,security,patch,patches,5574,"imized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5711,security,patch,patches,5711,"/opt/include/Rtypes.h:176. #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:5898,security,patch,patches,5898,"v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250. #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::Multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6073,security,patch,patches,6073,"156. #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6227,security,patch,patches,6227,"ctHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48. #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6418,security,patch,patches,6418,"ilds/v6-14-00-patches/opt/include/TObject.h:314. #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6575,security,modif,modifiedTClasses,6575,"pt/include/THashTable.h:94. #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6647,security,patch,patches,6647,"0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6724,security,Updat,UpdateListsOnCommitted,6724,"ashTable.cxx:96. #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:6820,security,patch,patches,6820,"obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100. #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7022,security,patch,patches,7022,"/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103. #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7267,security,patch,patches,7267,"etListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7483,security,patch,patches,7483,"g::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7717,security,patch,patches,7717,"g::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7930,security,patch,patches,7930,"ctionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8166,security,patch,patches,8166,"(this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8419,security,patch,patches,8419,"Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8662,security,patch,patches,8662," at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:8823,security,patch,patches,8823,"declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9003,security,patch,patches,9003,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9188,security,patch,patches,9188,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9347,security,patch,patches,9347,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:9564,security,patch,patches,9564,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096. #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233. #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045. #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065. #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457. #35 0x0000000000401009 in TMethodCall::Execute(long&) (). #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (). #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (). #38 0x0000000000400e21 in mytest() (). #39 0x0000000000400e92 in main (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:920,testability,diagno,diagnostic,920,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:951,testability,diagno,diagnostic,951,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1217,testability,diagno,diagnostic,1217,"taining the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:822,usability,Error,Error,822,"Work-around cling::Interpreter::compileFunction getting confused by trailing transactions.; This fixes https://sft.its.cern.ch/jira/browse/ROOT-9672 by having cling::Interpreter::DeclareCFunction return the transaction containing the compiled code. With the current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1255,usability,Error,Error,1255,"current code, ```cling::Interpreter::compileFunction``` will get confused by. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:1330,usability,Error,Error,1330,"y. transaction created during the callbacks executed during the. ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':. ```. int main(int argc, char ** argv). {. char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";. auto const result [[gnu::unused]] = TClass::GetClass(class_string);. return 0;. }. ```. which is a representation of real use case (in a more complex setup) in ART. We were getting:. ```. Error in <TClingCallFunc::make_wrapper>: Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret). {. if (ret) {. (*(TStreamerInfo**)ret) = new TStreamerInfo();. return;. }. else {. new TStreamerInfo();. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented! Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object! ```. The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:. ```. if (const llvm::GlobalValue* GV. = getLastTransaction()->getModule()->getNamedValue(name)). ```. However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```. #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345. #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111. #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~Push",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7195,usability,Clear,ClearDiagClient,7195,"al/root_builds/v6-14-00-patches/opt/include/TList.h:87. #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7412,usability,input,input,7412,"00-patches/core/base/src/TROOT.cxx:1767. #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7630,usability,input,input,7630,"ling/v6-14-00-patches/core/metacling/src/TCling.cxx:555. #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:7851,usability,input,input,7851,"cxx:6115. #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76. #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532. #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663. #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195. #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823. #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096. #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true). at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140. #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270. #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2778:83,energy efficiency,core,core,83,RDataSet experimental prototype; Provides the skeleton and doxygen notes about the core classes of the RForest prototype. The PR is not meant for merging but to allow for design discussions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:46,interoperability,skeleton,skeleton,46,RDataSet experimental prototype; Provides the skeleton and doxygen notes about the core classes of the RForest prototype. The PR is not meant for merging but to allow for design discussions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:22,usability,prototyp,prototype,22,RDataSet experimental prototype; Provides the skeleton and doxygen notes about the core classes of the RForest prototype. The PR is not meant for merging but to allow for design discussions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:111,usability,prototyp,prototype,111,RDataSet experimental prototype; Provides the skeleton and doxygen notes about the core classes of the RForest prototype. The PR is not meant for merging but to allow for design discussions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2779:63,safety,test,test,63,[cxxmodules] Remove veto of tutorial numberCountingCombination test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2779
https://github.com/root-project/root/pull/2779:63,testability,test,test,63,[cxxmodules] Remove veto of tutorial numberCountingCombination test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2779
https://github.com/root-project/root/pull/2782:167,deployability,contain,contain,167,"Move rootcling dictionary options after include directories; If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:188,deployability,instal,installation,188,"Move rootcling dictionary options after include directories; If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:267,deployability,build,build,267,"Move rootcling dictionary options after include directories; If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:325,deployability,build,build,325,"Move rootcling dictionary options after include directories; If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:365,deployability,instal,installation,365,"Move rootcling dictionary options after include directories; If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:317,energy efficiency,current,current,317,"Move rootcling dictionary options after include directories; If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:461,usability,command,command,461,"Move rootcling dictionary options after include directories; If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2784:91,safety,prevent,preventing,91,"[TCanvas] Add flag to TCanvasImp indicating web output; Use such flag in TCanvas::Paint(), preventing direct X11 calls for web canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2784
https://github.com/root-project/root/pull/2784:91,security,preven,preventing,91,"[TCanvas] Add flag to TCanvasImp indicating web output; Use such flag in TCanvas::Paint(), preventing direct X11 calls for web canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2784
https://github.com/root-project/root/pull/2784:33,usability,indicat,indicating,33,"[TCanvas] Add flag to TCanvasImp indicating web output; Use such flag in TCanvas::Paint(), preventing direct X11 calls for web canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2784
https://github.com/root-project/root/pull/2785:83,availability,restor,restore,83,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:17,deployability,fail,failing,17,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:52,deployability,modul,modules,52,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:284,deployability,Patch,Patch,284,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:247,energy efficiency,core,core,247,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:52,modifiability,modul,modules,52,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:17,reliability,fail,failing,17,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:83,reliability,restor,restore,83,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:43,safety,test,test,43,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:52,safety,modul,modules,52,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:284,safety,Patch,Patch,284,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:284,security,Patch,Patch,284,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:43,testability,test,test,43,"[cxxmodules] Fix failing execNestedClasses test for modules; We needed to save and restore fHeaderParsingOnDemand value when exitting. RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2786:119,availability,error,error-with-root-,119,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:171,availability,error,error,171,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:23,deployability,updat,updates,23,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:177,integrability,messag,message,177,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:177,interoperability,messag,message,177,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:119,performance,error,error-with-root-,119,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:171,performance,error,error,171,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:23,safety,updat,updates,23,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:119,safety,error,error-with-root-,119,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:156,safety,avoid,avoid,156,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:171,safety,error,error,171,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:23,security,updat,updates,23,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:119,usability,error,error-with-root-,119,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:171,usability,error,error,171,TTreeCache::FillBuffer updates.; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2787:118,availability,error,error-with-root-,118,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:170,availability,error,error,170,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:23,deployability,Updat,Updates,23,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:176,integrability,messag,message,176,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:176,interoperability,messag,message,176,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:118,performance,error,error-with-root-,118,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:170,performance,error,error,170,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:23,safety,Updat,Updates,23,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:118,safety,error,error-with-root-,118,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:155,safety,avoid,avoid,155,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:170,safety,error,error,170,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:23,security,Updat,Updates,23,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:118,usability,error,error-with-root-,118,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:170,usability,error,error,170,TTreeCache::FillBuffer Updates; This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2788:27,deployability,build,build,27,[DO NOT MERGE] Only try to build web6 ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2788
https://github.com/root-project/root/pull/2789:24,performance,Memor,Memory,24,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2789
https://github.com/root-project/root/pull/2789:57,performance,memor,memory,57,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2789
https://github.com/root-project/root/pull/2789:24,usability,Memor,Memory,24,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2789
https://github.com/root-project/root/pull/2789:57,usability,memor,memory,57,[roofit/hf] [ROOT-5236] Memory leaks in HistFactory; Fix memory leaks in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2789
https://github.com/root-project/root/pull/2790:108,usability,custom,custom,108,http: implement default.htm request in THttpServer ; It always returns default JSROOT web page disregard of custom settings. Requested here https://root-forum.cern.ch/t/31086,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2790
https://github.com/root-project/root/pull/2793:55,performance,time,time,55,jsroot: enable local openui; This should be done every time JSROOT copied into ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2793
https://github.com/root-project/root/pull/2794:12,energy efficiency,load,loading,12,jsroot: add loading of openui ui.commons library for GED;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2794
https://github.com/root-project/root/pull/2794:12,performance,load,loading,12,jsroot: add loading of openui ui.commons library for GED;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2794
https://github.com/root-project/root/pull/2794:30,usability,ui,ui,30,jsroot: add loading of openui ui.commons library for GED;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2794
https://github.com/root-project/root/pull/2795:26,integrability,interfac,interface,26,Add clearer wrt ownership interface to produce TInterpreterValue;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2795
https://github.com/root-project/root/pull/2795:26,interoperability,interfac,interface,26,Add clearer wrt ownership interface to produce TInterpreterValue;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2795
https://github.com/root-project/root/pull/2795:26,modifiability,interfac,interface,26,Add clearer wrt ownership interface to produce TInterpreterValue;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2795
https://github.com/root-project/root/pull/2795:4,usability,clear,clearer,4,Add clearer wrt ownership interface to produce TInterpreterValue;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2795
https://github.com/root-project/root/pull/2799:52,integrability,sub,subclasses,52,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:137,integrability,sub,subclasses,137,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:210,integrability,sub,subclasses,210,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:283,integrability,sub,subclasses,283,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:598,integrability,sub,subclasses,598,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:918,integrability,encapsulat,encapsulated,918,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:685,interoperability,specif,specific,685,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:888,interoperability,specif,specific,888,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:366,modifiability,Inherit,InheritsFrom,366,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:487,modifiability,exten,extended,487,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:918,modifiability,encapsul,encapsulated,918,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:394,safety,test,tests,394,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:499,safety,test,test,499,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:394,testability,test,tests,394,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:499,testability,test,test,499,"[Exp PyROOT] Unify pythonizations for TTree and its subclasses; This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2800:33,deployability,depend,dependencies,33,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:127,deployability,depend,dependencies,127,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:200,energy efficiency,load,loaded,200,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:33,integrability,depend,dependencies,33,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:127,integrability,depend,dependencies,127,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:33,modifiability,depend,dependencies,33,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:127,modifiability,depend,dependencies,127,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:200,performance,load,loaded,200,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:66,reliability,doe,does,66,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:33,safety,depend,dependencies,33,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:127,safety,depend,dependencies,127,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:33,testability,depend,dependencies,33,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:127,testability,depend,dependencies,127,ROOT-9729: Remove unused library dependencies from PyROOT; PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:. - https://sft.its.cern.ch/jira/browse/ROOT-9728. - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2802:434,availability,Error,Error,434,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:15,deployability,depend,dependency,15,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:234,deployability,build,builds,234,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:284,deployability,build,building,284,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:293,deployability,modul,module,293,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:351,deployability,build,builds,351,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:391,deployability,build,build,391,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:448,deployability,build,build,448,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:465,deployability,modul,module,465,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:15,integrability,depend,dependency,15,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:15,modifiability,depend,dependency,15,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:293,modifiability,modul,module,293,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:465,modifiability,modul,module,465,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:434,performance,Error,Error,434,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:15,safety,depend,dependency,15,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:293,safety,modul,module,293,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:434,safety,Error,Error,434,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:465,safety,modul,module,465,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:15,testability,depend,dependency,15,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:434,usability,Error,Error,434,"Adding missing dependency to PyROOT; Fixing:. `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm. In file included from input_line_13:10:. /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]. #include ""ROOT/RDataFrame.hxx"". ^. Error: Had to build non-system module ROOTDataFrame implicitly.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2803:980,deployability,depend,depends,980,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:919,energy efficiency,charg,charge,919,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:131,integrability,pub,publiceos,131,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:491,integrability,event,events,491,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:828,integrability,Event,Events,828,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:980,integrability,depend,depends,980,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:980,modifiability,depend,depends,980,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:1128,performance,disk,disk,1128,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:586,safety,compl,complicated,586,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:980,safety,depend,depends,980,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:586,security,compl,complicated,586,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:336,testability,simpl,simplified,336,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:426,testability,simpl,simplification,426,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:562,testability,understand,understand,562,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:980,testability,depend,depends,980,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:188,usability,user,user-images,188,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:336,usability,simpl,simplified,336,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:372,usability,clear,clear,372,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:426,usability,simpl,simplification,426,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:691,usability,user,user-images,691,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:1030,usability,experien,experience,1030,"[RDF] Use CMS OpenData from 2012 for NanoAOD example producing dimuon…; … spectrum and adjust final plot. The files are taken form publiceos! The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```. Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %. Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %. ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2805:52,integrability,batch,batch,52,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:118,integrability,batch,batch,118,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:172,integrability,batch,batch,172,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:214,integrability,interfac,interface,214,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:214,interoperability,interfac,interface,214,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:244,interoperability,standard,standard,244,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:214,modifiability,interfac,interface,214,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:52,performance,batch,batch,52,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:118,performance,batch,batch,118,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:172,performance,batch,batch,172,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:16,safety,avoid,avoid,16,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:130,safety,prevent,prevent,130,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:130,security,preven,prevent,130,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:305,testability,simpl,simple,305,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2805:305,usability,simpl,simple,305,"WebGui6 canvas: avoid TVirtualX, mark web canvas as batch; When TCanvas created with TWebCanvas, it will be marked as batch. This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2805
https://github.com/root-project/root/pull/2806:26,energy efficiency,Cloud,Cloudflare,26,[WIP] Reverting back zlib Cloudflare; It is a new attempt to land Cloudflare ZLIB. . More information about performance numbers are presented in ROOT I/O meeting: https://indico.cern.ch/event/696030/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:66,energy efficiency,Cloud,Cloudflare,66,[WIP] Reverting back zlib Cloudflare; It is a new attempt to land Cloudflare ZLIB. . More information about performance numbers are presented in ROOT I/O meeting: https://indico.cern.ch/event/696030/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:186,integrability,event,event,186,[WIP] Reverting back zlib Cloudflare; It is a new attempt to land Cloudflare ZLIB. . More information about performance numbers are presented in ROOT I/O meeting: https://indico.cern.ch/event/696030/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:108,performance,perform,performance,108,[WIP] Reverting back zlib Cloudflare; It is a new attempt to land Cloudflare ZLIB. . More information about performance numbers are presented in ROOT I/O meeting: https://indico.cern.ch/event/696030/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:150,performance,I/O,I/O,150,[WIP] Reverting back zlib Cloudflare; It is a new attempt to land Cloudflare ZLIB. . More information about performance numbers are presented in ROOT I/O meeting: https://indico.cern.ch/event/696030/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:108,usability,perform,performance,108,[WIP] Reverting back zlib Cloudflare; It is a new attempt to land Cloudflare ZLIB. . More information about performance numbers are presented in ROOT I/O meeting: https://indico.cern.ch/event/696030/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2807:0,deployability,Upgrad,Upgrade,0,Upgrade lz4 builtins to 1.8.3 version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:30,deployability,version,version,30,Upgrade lz4 builtins to 1.8.3 version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:30,integrability,version,version,30,Upgrade lz4 builtins to 1.8.3 version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:0,modifiability,Upgrad,Upgrade,0,Upgrade lz4 builtins to 1.8.3 version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:30,modifiability,version,version,30,Upgrade lz4 builtins to 1.8.3 version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2808:34,deployability,build,builds,34,"Clean up makefiles for standalone builds of mathcore,mathmore,genvect…; …or and smatrix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2808
https://github.com/root-project/root/pull/2809:11,deployability,depend,dependencies,11,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:39,deployability,build,build,39,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:151,deployability,depend,dependency,151,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:11,integrability,depend,dependencies,11,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:151,integrability,depend,dependency,151,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:11,modifiability,depend,dependencies,11,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:151,modifiability,depend,dependency,151,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:11,safety,depend,dependencies,11,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:151,safety,depend,dependency,151,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:11,testability,depend,dependencies,11,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2809:151,testability,depend,dependency,151,"Fix PyROOT dependencies for cxxmodules build; - Add back MathCore, needed by TPyFitFunction. - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2810:12,performance,Memor,Memory,12,[ROOT-5236] Memory leaks in HistFactory; (cherry picked from commit 09f1082),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2810
https://github.com/root-project/root/pull/2810:12,usability,Memor,Memory,12,[ROOT-5236] Memory leaks in HistFactory; (cherry picked from commit 09f1082),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2810
https://github.com/root-project/root/pull/2811:43,availability,error,error,43,[TreePlayer][ROOT-9713] Remove printing of error messages ; and remove leaks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2811
https://github.com/root-project/root/pull/2811:49,integrability,messag,messages,49,[TreePlayer][ROOT-9713] Remove printing of error messages ; and remove leaks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2811
https://github.com/root-project/root/pull/2811:49,interoperability,messag,messages,49,[TreePlayer][ROOT-9713] Remove printing of error messages ; and remove leaks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2811
https://github.com/root-project/root/pull/2811:43,performance,error,error,43,[TreePlayer][ROOT-9713] Remove printing of error messages ; and remove leaks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2811
https://github.com/root-project/root/pull/2811:43,safety,error,error,43,[TreePlayer][ROOT-9713] Remove printing of error messages ; and remove leaks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2811
https://github.com/root-project/root/pull/2811:43,usability,error,error,43,[TreePlayer][ROOT-9713] Remove printing of error messages ; and remove leaks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2811
https://github.com/root-project/root/pull/2812:29,interoperability,format,format,29,[RooFit] Improve doxygen; Re-format important roofit documentation to make doxygen understand it. Also make histfactory classes show up in doxygen.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2812:83,testability,understand,understand,83,[RooFit] Improve doxygen; Re-format important roofit documentation to make doxygen understand it. Also make histfactory classes show up in doxygen.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2812:53,usability,document,documentation,53,[RooFit] Improve doxygen; Re-format important roofit documentation to make doxygen understand it. Also make histfactory classes show up in doxygen.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2813:342,integrability,pub,published,342,[RDF] Dataframe tutorial reconstructing Higgs from four leptons with CMS OpenData; This tutorial illustrates an analysis of CMS data from 2012 reconstructing the Higgs at 125 GeV in the decay channel to four leptons. The files are hosted on `eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod` as NanoAOD-like files converted from AOD published on opendata.cern.ch. Processing the files (about 13GB) takes around 6 minutes on my laptop from the CERN network. The tutorial produces plots of the four leptons mass spectrum from 70 GeV to 180 GeV for all combinations of lepton pairs and a combined result. The combined plot is shown below. ![higgs_4l](https://user-images.githubusercontent.com/6951222/47084099-dd5e7700-d212-11e8-9f06-bd41f6ca4740.png). You can compare the result to the official plot created with ~5 fb^-1 of 2011 and ~5 fb^-1 from 2012 data (this tutorial takes 11.6 fb^-1 from 2012):. ![official plot](https://inspirehep.net/record/1124338/files/H4l_mass_v3.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2813
https://github.com/root-project/root/pull/2813:457,performance,network,network,457,[RDF] Dataframe tutorial reconstructing Higgs from four leptons with CMS OpenData; This tutorial illustrates an analysis of CMS data from 2012 reconstructing the Higgs at 125 GeV in the decay channel to four leptons. The files are hosted on `eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod` as NanoAOD-like files converted from AOD published on opendata.cern.ch. Processing the files (about 13GB) takes around 6 minutes on my laptop from the CERN network. The tutorial produces plots of the four leptons mass spectrum from 70 GeV to 180 GeV for all combinations of lepton pairs and a combined result. The combined plot is shown below. ![higgs_4l](https://user-images.githubusercontent.com/6951222/47084099-dd5e7700-d212-11e8-9f06-bd41f6ca4740.png). You can compare the result to the official plot created with ~5 fb^-1 of 2011 and ~5 fb^-1 from 2012 data (this tutorial takes 11.6 fb^-1 from 2012):. ![official plot](https://inspirehep.net/record/1124338/files/H4l_mass_v3.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2813
https://github.com/root-project/root/pull/2813:457,security,network,network,457,[RDF] Dataframe tutorial reconstructing Higgs from four leptons with CMS OpenData; This tutorial illustrates an analysis of CMS data from 2012 reconstructing the Higgs at 125 GeV in the decay channel to four leptons. The files are hosted on `eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod` as NanoAOD-like files converted from AOD published on opendata.cern.ch. Processing the files (about 13GB) takes around 6 minutes on my laptop from the CERN network. The tutorial produces plots of the four leptons mass spectrum from 70 GeV to 180 GeV for all combinations of lepton pairs and a combined result. The combined plot is shown below. ![higgs_4l](https://user-images.githubusercontent.com/6951222/47084099-dd5e7700-d212-11e8-9f06-bd41f6ca4740.png). You can compare the result to the official plot created with ~5 fb^-1 of 2011 and ~5 fb^-1 from 2012 data (this tutorial takes 11.6 fb^-1 from 2012):. ![official plot](https://inspirehep.net/record/1124338/files/H4l_mass_v3.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2813
https://github.com/root-project/root/pull/2813:665,usability,user,user-images,665,[RDF] Dataframe tutorial reconstructing Higgs from four leptons with CMS OpenData; This tutorial illustrates an analysis of CMS data from 2012 reconstructing the Higgs at 125 GeV in the decay channel to four leptons. The files are hosted on `eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod` as NanoAOD-like files converted from AOD published on opendata.cern.ch. Processing the files (about 13GB) takes around 6 minutes on my laptop from the CERN network. The tutorial produces plots of the four leptons mass spectrum from 70 GeV to 180 GeV for all combinations of lepton pairs and a combined result. The combined plot is shown below. ![higgs_4l](https://user-images.githubusercontent.com/6951222/47084099-dd5e7700-d212-11e8-9f06-bd41f6ca4740.png). You can compare the result to the official plot created with ~5 fb^-1 of 2011 and ~5 fb^-1 from 2012 data (this tutorial takes 11.6 fb^-1 from 2012):. ![official plot](https://inspirehep.net/record/1124338/files/H4l_mass_v3.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2813
https://github.com/root-project/root/pull/2816:1,safety,TEST,TEST,1,[TEST] Checking PRs for cxxmodules and rt cxxmodules;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2816
https://github.com/root-project/root/pull/2816:1,testability,TEST,TEST,1,[TEST] Checking PRs for cxxmodules and rt cxxmodules;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2816
https://github.com/root-project/root/pull/2817:144,integrability,event,event,144,[DF] Add cumulative efficiency to cutflow report; Implement the cumulative efficiency in the cutflow report as suggested at the ATLAS newcomers event.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:20,usability,efficien,efficiency,20,[DF] Add cumulative efficiency to cutflow report; Implement the cumulative efficiency in the cutflow report as suggested at the ATLAS newcomers event.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:75,usability,efficien,efficiency,75,[DF] Add cumulative efficiency to cutflow report; Implement the cumulative efficiency in the cutflow report as suggested at the ATLAS newcomers event.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2818:1,safety,TEST,TEST,1,[TEST] testing RT cxxmodules in PRS;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2818
https://github.com/root-project/root/pull/2818:7,safety,test,testing,7,[TEST] testing RT cxxmodules in PRS;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2818
https://github.com/root-project/root/pull/2818:1,testability,TEST,TEST,1,[TEST] testing RT cxxmodules in PRS;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2818
https://github.com/root-project/root/pull/2818:7,testability,test,testing,7,[TEST] testing RT cxxmodules in PRS;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2818
https://github.com/root-project/root/pull/2819:749,energy efficiency,profil,profile,749,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:279,integrability,interfac,interface,279,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:409,integrability,interfac,interface,409,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:449,integrability,interfac,interface,449,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:279,interoperability,interfac,interface,279,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:312,interoperability,specif,specific,312,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:340,interoperability,platform,platform,340,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:409,interoperability,interfac,interface,409,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:436,interoperability,plug,plugin,436,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:449,interoperability,interfac,interface,449,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:501,interoperability,platform,platforms,501,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:593,interoperability,platform,platforms,593,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:795,interoperability,format,format,795,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:279,modifiability,interfac,interface,279,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:409,modifiability,interfac,interface,409,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:449,modifiability,interfac,interface,449,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:477,modifiability,exten,extend,477,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:749,performance,profil,profile,749,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:161,usability,widget,widgets,161,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:330,usability,support,supported,330,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:487,usability,support,support,487,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2819:678,usability,close,closed,678,"WebGui: introduce RWebDisplayHandle; This is special C++ object which is associated with started web-based display. It is low-level handle to open different web widgets. Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. . Like only now all Qt5 objects can be correctly destroyed when window is closed. Or forked process can be properly killed. Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2819
https://github.com/root-project/root/pull/2822:113,performance,perform,perform,113,"Improve menu in TWebCanvas; * Remove/hide unused items. * Provide commands to save ROOT, PS, C files. * Allow to perform TPad::Paint() for the case when TVirtualPS is used. * Include preliminary JSROOT 5.6.0 with bugfixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2822
https://github.com/root-project/root/pull/2822:8,usability,menu,menu,8,"Improve menu in TWebCanvas; * Remove/hide unused items. * Provide commands to save ROOT, PS, C files. * Allow to perform TPad::Paint() for the case when TVirtualPS is used. * Include preliminary JSROOT 5.6.0 with bugfixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2822
https://github.com/root-project/root/pull/2822:66,usability,command,commands,66,"Improve menu in TWebCanvas; * Remove/hide unused items. * Provide commands to save ROOT, PS, C files. * Allow to perform TPad::Paint() for the case when TVirtualPS is used. * Include preliminary JSROOT 5.6.0 with bugfixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2822
https://github.com/root-project/root/pull/2822:113,usability,perform,perform,113,"Improve menu in TWebCanvas; * Remove/hide unused items. * Provide commands to save ROOT, PS, C files. * Allow to perform TPad::Paint() for the case when TVirtualPS is used. * Include preliminary JSROOT 5.6.0 with bugfixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2822
https://github.com/root-project/root/pull/2823:31,usability,user,user,31,[ROOT-9737] WIP: Allow to Fill user defined objects which are not TH1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2823
https://github.com/root-project/root/pull/2824:33,deployability,Build,BuildIndex,33,[TTree][NFC][ROOT-4489] Document BuildIndex behaviour about preexisti…; …ng indices. i.e. the re-creation of the index without deleting the old one in order to prevent. accidental deletion of previously assigned indices.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2824
https://github.com/root-project/root/pull/2824:160,safety,prevent,prevent,160,[TTree][NFC][ROOT-4489] Document BuildIndex behaviour about preexisti…; …ng indices. i.e. the re-creation of the index without deleting the old one in order to prevent. accidental deletion of previously assigned indices.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2824
https://github.com/root-project/root/pull/2824:169,safety,accid,accidental,169,[TTree][NFC][ROOT-4489] Document BuildIndex behaviour about preexisti…; …ng indices. i.e. the re-creation of the index without deleting the old one in order to prevent. accidental deletion of previously assigned indices.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2824
https://github.com/root-project/root/pull/2824:160,security,preven,prevent,160,[TTree][NFC][ROOT-4489] Document BuildIndex behaviour about preexisti…; …ng indices. i.e. the re-creation of the index without deleting the old one in order to prevent. accidental deletion of previously assigned indices.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2824
https://github.com/root-project/root/pull/2824:24,usability,Document,Document,24,[TTree][NFC][ROOT-4489] Document BuildIndex behaviour about preexisti…; …ng indices. i.e. the re-creation of the index without deleting the old one in order to prevent. accidental deletion of previously assigned indices.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2824
https://github.com/root-project/root/pull/2824:44,usability,behavi,behaviour,44,[TTree][NFC][ROOT-4489] Document BuildIndex behaviour about preexisti…; …ng indices. i.e. the re-creation of the index without deleting the old one in order to prevent. accidental deletion of previously assigned indices.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2824
https://github.com/root-project/root/pull/2825:33,integrability,pub,public,33,Make Meta Processor requirements public;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2825
https://github.com/root-project/root/pull/2826:354,deployability,compos,composed,354,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:354,modifiability,compos,composed,354,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:92,testability,unit,units,92,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:145,testability,unit,units,145,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:285,testability,unit,unit,285,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:363,testability,unit,units,363,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:6,usability,support,support,6,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:395,usability,support,supported,395,"Added support for quantity tag in the GDML parser; Fixes ROOT-9286. Note that GDML tags w/o units will get the default ""cm"" and ""degree""(default units for length/angle) instead of ""mm"" and ""rad"" which were the defaults in G4. This was needed because in case of usage of ""quantity"" the unit is embedded and the multiplication factor must be 1. Notye that composed units such as g/cm3 are not yet supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2827:13,energy efficiency,Reduc,Reduce,13,[cxxmodules] Reduce libc duplicate headers.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2827
https://github.com/root-project/root/pull/2828:182,availability,failur,failures,182,"[Tutorial] Veto df102 if xrootd not found; Because the new dataframe tutorial use xrootd to read the files remotely, we have to veto them if xrootd is not found. This should fix the failures on cdash from last night.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2828
https://github.com/root-project/root/pull/2828:182,deployability,fail,failures,182,"[Tutorial] Veto df102 if xrootd not found; Because the new dataframe tutorial use xrootd to read the files remotely, we have to veto them if xrootd is not found. This should fix the failures on cdash from last night.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2828
https://github.com/root-project/root/pull/2828:182,performance,failur,failures,182,"[Tutorial] Veto df102 if xrootd not found; Because the new dataframe tutorial use xrootd to read the files remotely, we have to veto them if xrootd is not found. This should fix the failures on cdash from last night.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2828
https://github.com/root-project/root/pull/2828:182,reliability,fail,failures,182,"[Tutorial] Veto df102 if xrootd not found; Because the new dataframe tutorial use xrootd to read the files remotely, we have to veto them if xrootd is not found. This should fix the failures on cdash from last night.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2828
https://github.com/root-project/root/pull/2829:962,availability,avail,available,962,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:10,deployability,Build,Build,10,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:16,deployability,Configurat,Configuration,16,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:179,deployability,updat,update,179,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:199,deployability,configurat,configuration,199,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:338,deployability,updat,update,338,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:475,deployability,configurat,configuration,475,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:556,deployability,fail,fails,556,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:738,deployability,modul,module,738,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:1103,deployability,build,build,1103,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:1193,deployability,releas,release,1193,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:16,integrability,Configur,Configuration,16,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:199,integrability,configur,configuration,199,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:475,integrability,configur,configuration,475,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:899,integrability,configur,configuring,899,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:16,modifiability,Configur,Configuration,16,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:199,modifiability,configur,configuration,199,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:475,modifiability,configur,configuration,475,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:738,modifiability,modul,module,738,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:899,modifiability,configur,configuring,899,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:545,performance,time,time,545,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:556,reliability,fail,fails,556,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:962,reliability,availab,available,962,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:179,safety,updat,update,179,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:338,safety,updat,update,338,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:738,safety,modul,module,738,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:962,safety,avail,available,962,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:16,security,Configur,Configuration,16,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:179,security,updat,update,179,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:199,security,configur,configuration,199,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:338,security,updat,update,338,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:475,security,configur,configuration,475,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:608,security,hardcod,hardcoded,608,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:899,security,configur,configuring,899,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:962,security,availab,available,962,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:422,testability,simpl,simply,422,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:422,usability,simpl,simply,422,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:728,usability,help,help,728,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:1216,usability,user,users,1216,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.); This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2831:76,integrability,pub,publiceos,76,[Tutorial] Use eospublic to host files used in df101_h1Analysis script; Use publiceos + xrootd to fetch files remotely for h1 analysis dataframe example. Tutorial is now vetoed if xrootd is not found.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2831
https://github.com/root-project/root/pull/2832:119,availability,Toler,Tolerance,119,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:192,availability,error,error,192,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:192,performance,error,error,192,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:222,performance,time,times,222,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:119,reliability,Toleran,Tolerance,119,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:30,safety,test,testGenVectorVc,30,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:51,safety,test,test,51,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:192,safety,error,error,192,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:30,testability,test,testGenVectorVc,30,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:51,testability,test,test,51,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2832:192,usability,error,error,192,"Improve compare() function in testGenVectorVc; The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2832
https://github.com/root-project/root/pull/2833:10,deployability,Build,Build,10,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:16,deployability,Configurat,Configuration,16,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:37,deployability,version,version,37,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:118,deployability,updat,update,118,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:16,integrability,Configur,Configuration,16,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:37,integrability,version,version,37,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:16,modifiability,Configur,Configuration,16,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:37,modifiability,version,version,37,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:118,safety,updat,update,118,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:16,security,Configur,Configuration,16,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2833:118,security,updat,update,118,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.); This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2834:463,availability,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:457,deployability,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:411,interoperability,prox,proxy,411,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:474,interoperability,prox,proxy,474,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:34,performance,time,times,34,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:463,performance,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:0,safety,Avoid,Avoid,0,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:457,safety,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:463,safety,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:457,security,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:457,testability,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:463,usability,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2835:463,availability,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:457,deployability,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:411,interoperability,prox,proxy,411,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:474,interoperability,prox,proxy,474,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:34,performance,time,times,34,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:463,performance,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:0,safety,Avoid,Avoid,0,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:457,safety,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:463,safety,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:457,security,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:457,testability,Log,Logic,457,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:463,usability,error,error,463,Avoid setting fCollProxy multiple times.; GetCollectionProxy during the setting of fCollProxy calls. TBranchElement::GetInfoImp that in some cases sets fCollProxy. and ends up recording it (sometimes) in the action sequence. When GetCollectionProxy sets it too (i.e. change it) there is. now a disconnect between the branch and the action sequences that. lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set. aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2836:173,deployability,scale,scale,173,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:776,deployability,patch,patch,776,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:173,energy efficiency,scale,scale,173,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:139,integrability,interfac,interface,139,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:203,integrability,event,events,203,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:253,integrability,event,events,253,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:451,integrability,event,event,451,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:472,integrability,event,event,472,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:139,interoperability,interfac,interface,139,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:139,modifiability,interfac,interface,139,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:173,modifiability,scal,scale,173,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:19,performance,memor,memory,19,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:50,performance,memor,memory,50,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:173,performance,scale,scale,173,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:1010,performance,memor,memory,1010,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:782,reliability,doe,does,782,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:911,reliability,doe,does,911,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:776,safety,patch,patch,776,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:776,security,patch,patch,776,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:19,usability,memor,memory,19,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:50,usability,memor,memory,50,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:1010,usability,memor,memory,1010,"[TMVA/BDT/IMT] fix memory leak; Hi,. I ran into a memory leak training a BDT yesterday. Strangely only when running through the root_numpy interface. The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM). Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues). since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone. So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2837:86,integrability,interfac,interface,86,"TWebCanvas: provide minimal support of 3D painters; Up to now only TVirtualPadPainter interface was redefined. Now also TVirtualPS is used, which is important for 3D painters. This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2837:86,interoperability,interfac,interface,86,"TWebCanvas: provide minimal support of 3D painters; Up to now only TVirtualPadPainter interface was redefined. Now also TVirtualPS is used, which is important for 3D painters. This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2837:86,modifiability,interfac,interface,86,"TWebCanvas: provide minimal support of 3D painters; Up to now only TVirtualPadPainter interface was redefined. Now also TVirtualPS is used, which is important for 3D painters. This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2837:20,usability,minim,minimal,20,"TWebCanvas: provide minimal support of 3D painters; Up to now only TVirtualPadPainter interface was redefined. Now also TVirtualPS is used, which is important for 3D painters. This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2837:28,usability,support,support,28,"TWebCanvas: provide minimal support of 3D painters; Up to now only TVirtualPadPainter interface was redefined. Now also TVirtualPS is used, which is important for 3D painters. This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2837:189,usability,minim,minimal,189,"TWebCanvas: provide minimal support of 3D painters; Up to now only TVirtualPadPainter interface was redefined. Now also TVirtualPS is used, which is important for 3D painters. This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2837:211,usability,support,support,211,"TWebCanvas: provide minimal support of 3D painters; Up to now only TVirtualPadPainter interface was redefined. Now also TVirtualPS is used, which is important for 3D painters. This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2838:42,deployability,modul,modulemap,42,[cxxmodules] Try using the complete glibc modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2838:42,modifiability,modul,modulemap,42,[cxxmodules] Try using the complete glibc modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2838:27,safety,compl,complete,27,[cxxmodules] Try using the complete glibc modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2838:42,safety,modul,modulemap,42,[cxxmodules] Try using the complete glibc modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2838:27,security,compl,complete,27,[cxxmodules] Try using the complete glibc modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2839:110,usability,document,documentation,110,[RooFit] Improve RooFFTConvPdf; Improve precision of default FFT convolution by using more bins. Also improve documentation. This is part of a solution to the problems described here:. https://root-forum.cern.ch/t/chained-pdf-definitions/29860/18,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2839
https://github.com/root-project/root/pull/2840:14,usability,document,documentation,14,[RooFit] Make documentation of RooWorkspace doxygen-readable;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2840
https://github.com/root-project/root/pull/2841:59,deployability,build,builds,59,[Tutorial] Add output of vecops and dataframe tutorials to builds;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2841
https://github.com/root-project/root/pull/2843:63,deployability,build,builds,63,[cxxmodules] Publish MetaLexer too.; This fixes our cxxmodules builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2843
https://github.com/root-project/root/pull/2843:13,integrability,Pub,Publish,13,[cxxmodules] Publish MetaLexer too.; This fixes our cxxmodules builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2843
https://github.com/root-project/root/pull/2844:165,energy efficiency,optim,optimisation,165,Add training-validation split in MethodDL and PyKeras; Separate in method DL the training data in pure training and validation which is used to . stop the iterative optimisation process. . Similar split should also be done now in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2844
https://github.com/root-project/root/pull/2844:13,safety,valid,validation,13,Add training-validation split in MethodDL and PyKeras; Separate in method DL the training data in pure training and validation which is used to . stop the iterative optimisation process. . Similar split should also be done now in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2844
https://github.com/root-project/root/pull/2844:116,safety,valid,validation,116,Add training-validation split in MethodDL and PyKeras; Separate in method DL the training data in pure training and validation which is used to . stop the iterative optimisation process. . Similar split should also be done now in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2844
https://github.com/root-project/root/pull/2844:13,security,validat,validation,13,Add training-validation split in MethodDL and PyKeras; Separate in method DL the training data in pure training and validation which is used to . stop the iterative optimisation process. . Similar split should also be done now in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2844
https://github.com/root-project/root/pull/2844:116,security,validat,validation,116,Add training-validation split in MethodDL and PyKeras; Separate in method DL the training data in pure training and validation which is used to . stop the iterative optimisation process. . Similar split should also be done now in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2844
https://github.com/root-project/root/pull/2844:146,usability,stop,stop,146,Add training-validation split in MethodDL and PyKeras; Separate in method DL the training data in pure training and validation which is used to . stop the iterative optimisation process. . Similar split should also be done now in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2844
https://github.com/root-project/root/pull/2845:259,deployability,API,API,259,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:259,integrability,API,API,259,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:321,integrability,interfac,interface,321,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:259,interoperability,API,API,259,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:321,interoperability,interfac,interface,321,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:99,modifiability,paramet,parameters,99,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:241,modifiability,extens,extension,241,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:321,modifiability,interfac,interface,321,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:215,testability,Simpl,Simplifies,215,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:123,usability,support,supported,123,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:215,usability,Simpl,Simplifies,215,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2845:331,usability,clear,clear,331,"WebGui: use new RWebDisplayArg class in RWebWindow::Show() methods; This class holds all necessary parameters to start any supported web display. These are kind of browser, width, height, URL and extra URL options. Simplifies for the future extension of that API. Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2846:0,deployability,BUILD,BUILD,0,BUILD TESTING - no change;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2846
https://github.com/root-project/root/pull/2846:6,safety,TEST,TESTING,6,BUILD TESTING - no change;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2846
https://github.com/root-project/root/pull/2846:6,testability,TEST,TESTING,6,BUILD TESTING - no change;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2846
https://github.com/root-project/root/pull/2847:82,deployability,modul,modules,82,Pin vtable for misc/table headers; This gives 12 Mbytes improvement in memory for modules :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2847
https://github.com/root-project/root/pull/2847:82,modifiability,modul,modules,82,Pin vtable for misc/table headers; This gives 12 Mbytes improvement in memory for modules :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2847
https://github.com/root-project/root/pull/2847:71,performance,memor,memory,71,Pin vtable for misc/table headers; This gives 12 Mbytes improvement in memory for modules :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2847
https://github.com/root-project/root/pull/2847:82,safety,modul,modules,82,Pin vtable for misc/table headers; This gives 12 Mbytes improvement in memory for modules :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2847
https://github.com/root-project/root/pull/2847:71,usability,memor,memory,71,Pin vtable for misc/table headers; This gives 12 Mbytes improvement in memory for modules :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2847
https://github.com/root-project/root/pull/2848:62,deployability,modul,modules,62,Pin vtable for IPruneTool; This gives 3Mbytes improvement for modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:62,modifiability,modul,modules,62,Pin vtable for IPruneTool; This gives 3Mbytes improvement for modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:62,safety,modul,modules,62,Pin vtable for IPruneTool; This gives 3Mbytes improvement for modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2851:15,deployability,version,version,15,"WebEve - first version of web-based event display; This is evolution of original EVE code, where GL display replaced by Web-based implementation. Includes C++ classes, HTML/JavaScript and several tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2851:15,integrability,version,version,15,"WebEve - first version of web-based event display; This is evolution of original EVE code, where GL display replaced by Web-based implementation. Includes C++ classes, HTML/JavaScript and several tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2851:36,integrability,event,event,36,"WebEve - first version of web-based event display; This is evolution of original EVE code, where GL display replaced by Web-based implementation. Includes C++ classes, HTML/JavaScript and several tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2851:15,modifiability,version,version,15,"WebEve - first version of web-based event display; This is evolution of original EVE code, where GL display replaced by Web-based implementation. Includes C++ classes, HTML/JavaScript and several tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2852:401,safety,Test,Testing,401,[cxxmodules] Don't put key function decl into eagerly deserialized decls; This returns the opposite condition (false) from the same code snippet. in ASTContext (true) https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp#L9091. The idea is to make this as a guard before calling. ASTContext::DeclMustBeEmitted. Or we can also delete ASTContext code. Testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:401,testability,Test,Testing,401,[cxxmodules] Don't put key function decl into eagerly deserialized decls; This returns the opposite condition (false) from the same code snippet. in ASTContext (true) https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp#L9091. The idea is to make this as a guard before calling. ASTContext::DeclMustBeEmitted. Or we can also delete ASTContext code. Testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:237,usability,tool,tools,237,[cxxmodules] Don't put key function decl into eagerly deserialized decls; This returns the opposite condition (false) from the same code snippet. in ASTContext (true) https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp#L9091. The idea is to make this as a guard before calling. ASTContext::DeclMustBeEmitted. Or we can also delete ASTContext code. Testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2853:59,deployability,compos,composed,59,TChain::SavePrimitive() implemented.; Definition of TChain composed of ROOT files with TTrees is stored to C++ macro file together with friend TChain's.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2853:59,modifiability,compos,composed,59,TChain::SavePrimitive() implemented.; Definition of TChain composed of ROOT files with TTrees is stored to C++ macro file together with friend TChain's.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2854:48,deployability,modul,modules,48,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:62,deployability,modul,modules,62,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:263,deployability,Patch,Patch,263,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:30,energy efficiency,load,load,30,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:160,energy efficiency,load,load,160,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:217,energy efficiency,load,load,217,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:48,modifiability,modul,modules,48,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:62,modifiability,modul,modules,62,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:30,performance,load,load,30,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:160,performance,load,load,160,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:217,performance,load,load,217,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:244,performance,memor,memory,244,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:48,safety,modul,modules,48,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:62,safety,modul,modules,62,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:263,safety,Patch,Patch,263,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:263,security,Patch,Patch,263,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:244,usability,memor,memory,244,"[cxxmodules] Don't explicitly load MathCore for modules; With modules, we have autoloading of library feature. (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function. Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes. Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2855:31,deployability,fail,failing,31,Inline crystalball; Should fix failing tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2855
https://github.com/root-project/root/pull/2855:31,reliability,fail,failing,31,Inline crystalball; Should fix failing tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2855
https://github.com/root-project/root/pull/2856:9,interoperability,conflict,conflicts,9,p2help - conflicts resolved;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2856
https://github.com/root-project/root/pull/2857:1029,availability,operat,operator,1029,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:647,deployability,version,version,647,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1077,deployability,contain,containing,1077,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1644,deployability,version,version,1644,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:510,integrability,event,events,510,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:647,integrability,version,version,647,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:797,integrability,event,eventSample,797,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1644,integrability,version,version,1644,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1360,interoperability,specif,specified,1360,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:647,modifiability,version,version,647,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1335,modifiability,variab,variables,1335,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1488,modifiability,variab,variables,1488,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1644,modifiability,version,version,1644,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:62,performance,time,times,62,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:334,performance,memor,memory,334,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:658,performance,parallel,parallelization,658,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:705,performance,Parallel,Parallelize,705,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1053,performance,overhead,overhead,1053,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1345,performance,time,times,1345,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:81,usability,user,user,81,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:334,usability,memor,memory,334,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:1377,usability,user,user,1377,"[TMVA/BDT/IMT] Limit the size of TrainNodeInfo objects to ten times w…; …hat the user asked for. Picking integer binning for the cut scan in node training otherwise. results in unreasonably large 2-D arrays, of which one needs at least. number_of_threads+2 (accumulate initialization, one per thread result,. one target). This is the memory issue I mentioned in my previous PR. Turns out I had an integer branch in my training data with a large difference between largest and smallest value, and the number of events in the sample was big enough to hit the if block in DecisionTree.cxx here:. ```. // #### When nbins is low compared to ndata this version of parallelization is faster, so use it . // #### Parallelize by chunking the data into the same number of sections as we have processors. if(eventSample.size() >= cNvars*fNCuts*nPartitions*2). ```. which results in the instantiation of a few TrainNodeInfo objects (one per thread, on top of the target, and one for the initialization of std::accumulate, and i suspect the +operator adds temporary overhead. Each of which containing six 2dimensional arrays like:. ```. std::vector< std::vector<Double_t> > nSelS;. ```. getting as size:. ```. nSelS = std::vector< std::vector<Double_t> >(cNvars);. nSelS[ivar] = std::vector<Double_t>(nBins[ivar], 0);. ```. i.e. number or training variables times [ nCuts, specified by the user (20 in the tutorials) **OR** difference between the largest int and smallest int in the tree, for integer variables ]. For me this was somewhere above 4GB. The else block works because on of these huge things is not a problem, but already with one thread the if version (given the +2 for the MapReduce) ran out of RAM. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2858:14,deployability,depend,dependency,14,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:124,deployability,depend,dependency,124,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:162,deployability,infrastructur,infrastructure,162,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:244,deployability,build,builds,244,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:259,deployability,build,build,259,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:331,deployability,patch,patch,331,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:355,deployability,depend,dependencies,355,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:14,integrability,depend,dependency,14,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:124,integrability,depend,dependency,124,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:355,integrability,depend,dependencies,355,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:14,modifiability,depend,dependency,14,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:124,modifiability,depend,dependency,124,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:355,modifiability,depend,dependencies,355,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:235,performance,parallel,parallel,235,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:14,safety,depend,dependency,14,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:124,safety,depend,dependency,124,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:331,safety,patch,patch,331,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:355,safety,depend,dependencies,355,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:331,security,patch,patch,331,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:14,testability,depend,dependency,14,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:124,testability,depend,dependency,124,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2858:355,testability,depend,dependencies,355,"[cling] Add a dependency on clangSema to clingInterpreter.; We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2858
https://github.com/root-project/root/pull/2859:289,deployability,patch,patch,289,"[cxxmodules] Change the linkage of functions and template specializat…; …ions. static, static inline, always_inline, and extern inline functions can. always be deferred. Normal inline functions can be deferred in C99/C++. Implicit template instantiations can also be deferred in C++. This patch changes the linkage of the declarations from strong to weak. It allows clang to defer the deserialization from pch/pcm until their use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:289,safety,patch,patch,289,"[cxxmodules] Change the linkage of functions and template specializat…; …ions. static, static inline, always_inline, and extern inline functions can. always be deferred. Normal inline functions can be deferred in C99/C++. Implicit template instantiations can also be deferred in C++. This patch changes the linkage of the declarations from strong to weak. It allows clang to defer the deserialization from pch/pcm until their use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:289,security,patch,patch,289,"[cxxmodules] Change the linkage of functions and template specializat…; …ions. static, static inline, always_inline, and extern inline functions can. always be deferred. Normal inline functions can be deferred in C99/C++. Implicit template instantiations can also be deferred in C++. This patch changes the linkage of the declarations from strong to weak. It allows clang to defer the deserialization from pch/pcm until their use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2860:901,availability,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:272,deployability,Compos,CompositeCandidate,272,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:312,deployability,Compos,CompositeCandidate,312,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:348,deployability,contain,contains,348,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:386,deployability,Compos,CompositeCandidate,386,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:439,deployability,Compos,CompositeCandidate,439,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:297,energy efficiency,alloc,allocator,297,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:247,integrability,Wrap,Wrapper,247,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:784,integrability,event,eventhough,784,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:247,interoperability,Wrapper,Wrapper,247,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:272,modifiability,Compos,CompositeCandidate,272,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:312,modifiability,Compos,CompositeCandidate,312,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:386,modifiability,Compos,CompositeCandidate,386,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:439,modifiability,Compos,CompositeCandidate,439,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:8,performance,memor,memory,8,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:48,performance,I/O,I/O,48,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:178,performance,memor,memory,178,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:901,performance,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:81,safety,prevent,prevent,81,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:901,safety,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:81,security,preven,prevent,81,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:406,testability,simpl,simple,406,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:523,testability,simpl,simple,523,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:8,usability,memor,memory,8,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:178,usability,memor,memory,178,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:406,usability,simpl,simple,406,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:523,usability,simpl,simple,523,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:901,usability,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2861:901,availability,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:272,deployability,Compos,CompositeCandidate,272,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:312,deployability,Compos,CompositeCandidate,312,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:348,deployability,contain,contains,348,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:386,deployability,Compos,CompositeCandidate,386,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:439,deployability,Compos,CompositeCandidate,439,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:297,energy efficiency,alloc,allocator,297,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:247,integrability,Wrap,Wrapper,247,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:784,integrability,event,eventhough,784,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:247,interoperability,Wrapper,Wrapper,247,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:272,modifiability,Compos,CompositeCandidate,272,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:312,modifiability,Compos,CompositeCandidate,312,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:386,modifiability,Compos,CompositeCandidate,386,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:439,modifiability,Compos,CompositeCandidate,439,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:8,performance,memor,memory,8,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:48,performance,I/O,I/O,48,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:178,performance,memor,memory,178,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:901,performance,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:81,safety,prevent,prevent,81,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:901,safety,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:81,security,preven,prevent,81,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:406,testability,simpl,simple,406,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:523,testability,simpl,simple,523,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:8,usability,memor,memory,8,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:178,usability,memor,memory,178,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:406,usability,simpl,simple,406,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:523,usability,simpl,simple,523,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2861:901,usability,error,errorneously,901,"Resolve memory over-write due to execution of a I/O rule on wrong object; . This prevent the inappropriate execution on a rule intent for. an inner object on the outer object('s memory space). In a case where the top level branch is:. ```. 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >. ```. which contains. ```. 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>. 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase. 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**. ```. The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough. it was not split and it did so because it did not recognize there was a branch for. it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2861
https://github.com/root-project/root/pull/2862:393,deployability,log,logic,393,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:668,deployability,fail,fails,668,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:57,energy efficiency,draw,drawings,57,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:409,energy efficiency,optim,optimize,409,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:713,energy efficiency,draw,drawn,713,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:28,integrability,interfac,interface,28,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:114,integrability,batch,batch,114,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:28,interoperability,interfac,interface,28,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:28,modifiability,interfac,interface,28,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:114,performance,batch,batch,114,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:156,performance,perform,performed,156,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:409,performance,optimiz,optimize,409,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:478,performance,overhead,overhead,478,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:350,reliability,doe,does,350,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:668,reliability,fail,fails,668,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:393,safety,log,logic,393,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:458,safety,avoid,avoid,458,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:393,security,log,logic,393,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:393,testability,log,logic,393,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:491,testability,simpl,simple,491,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:657,testability,simpl,simple,657,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:42,usability,custom,custom,42,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:132,usability,custom,customs,132,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:156,usability,perform,performed,156,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:491,usability,simpl,simple,491,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2862:657,usability,simpl,simple,657,"TWebCanvas - use TVirtualPS interface for custom objects drawings; While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. . Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. . Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2862
https://github.com/root-project/root/pull/2865:88,integrability,pub,public,88,"[DS] Fix backwards compatibility of RDataSource; Addition of a pure virtual method to a public class breaks backwards compatibility, add a default implementation as suggested by @amadio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:19,interoperability,compatib,compatibility,19,"[DS] Fix backwards compatibility of RDataSource; Addition of a pure virtual method to a public class breaks backwards compatibility, add a default implementation as suggested by @amadio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:118,interoperability,compatib,compatibility,118,"[DS] Fix backwards compatibility of RDataSource; Addition of a pure virtual method to a public class breaks backwards compatibility, add a default implementation as suggested by @amadio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2866:371,deployability,manag,managed,371,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:371,energy efficiency,manag,managed,371,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:386,energy efficiency,alloc,allocation,386,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:271,performance,cach,caching,271,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:379,performance,memor,memory,379,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:546,performance,lock,locks,546,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:397,reliability,doe,doesn,397,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:371,safety,manag,managed,371,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:526,security,modif,modifications,526,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:546,security,lock,locks,546,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:379,usability,memor,memory,379,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:760,usability,close,closer,760,"[RooFit] Replace RooArgSet and RooDataSet mempools with single templated mempool; This fixes ROOT-9571 and other crashes when RooPlots reach the end of main. One may wonder whether mempools are a good idea. The answer is probably no, but disabling the mempool breaks the caching of normalisation results in RooFit. This relies on RooArgSet pointers being unique, i.e. OS-managed memory allocation doesn't work. With the proposed implementation, there is just one (templated) mempool for both Roo(Arg|Data)Set. Possible future modifications (e.g. locks, thread-local arenas) need to be done only in one place and are way easier now. The mempool takes care of not deleting (in worst case leaking) any arenas with live objects at program end. This brings us much closer to solving all problems with global statics in RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2867:812,deployability,modul,modules,812,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:367,energy efficiency,Cpu,Cpu,367,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:654,energy efficiency,clock,clock,654,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:885,energy efficiency,Load,Loading,885,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1020,energy efficiency,Load,Loading,1020,ble timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1153,energy efficiency,Load,Loading,1153,formation about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1296,energy efficiency,Load,Loading,1296,ocessing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1432,energy efficiency,Load,Loading,1432,-----------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1565,energy efficiency,Load,Loading,1565,------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1708,energy efficiency,Load,Loading,1708,-Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1841,energy efficiency,Load,Loading,1841, 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1980,energy efficiency,Load,Loading,1980,9.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2121,energy efficiency,Load,Loading,2121,0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2258,energy efficiency,Load,Loading,2258,0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2322,energy efficiency,Core,Core,2322,ace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2392,energy efficiency,Load,Loading,2392,4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/ru,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2525,energy efficiency,Load,Loading,2525,0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2661,energy efficiency,Load,Loading,2661,0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2799,energy efficiency,Load,Loading,2799,( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2938,energy efficiency,Load,Loading,2938,( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3079,energy efficiency,Load,Loading,3079,( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3217,energy efficiency,Load,Loading,3217, 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3357,energy efficiency,Load,Loading,3357, 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3497,energy efficiency,Load,Loading,3497, ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3631,energy efficiency,Load,Loading,3631,29 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3765,energy efficiency,Load,Loading,3765,0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3912,energy efficiency,Load,Loading,3912, 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4049,energy efficiency,Load,Loading,4049,24 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/ru,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4190,energy efficiency,Load,Loading,4190,( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtim,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4325,energy efficiency,Load,Loading,4325,0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4465,energy efficiency,Load,Loading,4465,0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4605,energy efficiency,Load,Loading,4605, 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4740,energy efficiency,Load,Loading,4740,0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4878,energy efficiency,Load,Loading,4878,0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5014,energy efficiency,Load,Loading,5014, 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5151,energy efficiency,Load,Loading,5151,.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5292,energy efficiency,Load,Loading,5292,.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5428,energy efficiency,Load,Loading,5428,%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5562,energy efficiency,Load,Loading,5562, ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5695,energy efficiency,Load,Loading,5695,00 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5836,energy efficiency,Load,Loading,5836,( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/run,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5973,energy efficiency,Load,Loading,5973, 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6110,energy efficiency,Load,Loading,6110, 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6248,energy efficiency,Load,Loading,6248,0 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /hom,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6386,energy efficiency,Load,Loading,6386,( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6522,energy efficiency,Load,Loading,6522,0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vag,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6665,energy efficiency,Load,Loading,6665,06 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6800,energy efficiency,Load,Loading,6800,) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6959,energy efficiency,Load,Loading,6959,7 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7095,energy efficiency,Load,Loading,7095,07 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7240,energy efficiency,Load,Loading,7240,0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7376,energy efficiency,Load,Loading,7376,0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7509,energy efficiency,Load,Loading,7509, ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtim,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7649,energy efficiency,Load,Loading,7649,006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7783,energy efficiency,Load,Loading,7783,0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7918,energy efficiency,Load,Loading,7918, 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/worksp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8058,energy efficiency,Load,Loading,8058,%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8192,energy efficiency,Load,Loading,8192,.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8329,energy efficiency,Load,Loading,8329,0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8470,energy efficiency,Load,Loading,8470,.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/work,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8604,energy efficiency,Load,Loading,8604,00 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/wor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8737,energy efficiency,Load,Loading,8737,000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/work,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8894,energy efficiency,Load,Loading,8894,.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9030,energy efficiency,Load,Loading,9030, ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9166,energy efficiency,Load,Loading,9166, 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9299,energy efficiency,Load,Loading,9299,00 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9448,energy efficiency,Load,Loading,9448,%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9583,energy efficiency,Load,Loading,9583,) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9715,energy efficiency,Load,Loading,9715,%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9851,energy efficiency,Load,Loading,9851, ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtim,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10000,energy efficiency,Load,Loading,10000,00 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10134,energy efficiency,Load,Loading,10134,0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodule,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10267,energy efficiency,Load,Loading,10267,0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10401,energy efficiency,Load,Loading,10401,0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10535,energy efficiency,Load,Loading,10535,.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
